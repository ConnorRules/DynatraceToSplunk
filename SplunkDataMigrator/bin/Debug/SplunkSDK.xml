<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SplunkSDK</name>
    </assembly>
    <members>
        <member name="T:Splunk.Application">
            <summary>
            The <see cref="T:Splunk.Application"/> class represents a locally-installed 
            Splunk app.
            </summary>
        </member>
        <member name="T:Splunk.Entity">
            <summary>
            The <see cref="T:Splunk.Entity"/> class represents the base class for all Splunk
            Entity resources.
            </summary>
        </member>
        <member name="T:Splunk.Resource">
            <summary>
            The <see cref="T:Splunk.Resource"/> class represents the base of all Splunk
            entity and entity collection classes.
            </summary>
        </member>
        <member name="F:Splunk.Resource.actions">
            <summary>
            The dictionary of actions allowed on this resource.
            </summary>
        </member>
        <member name="F:Splunk.Resource.title">
            <summary>
            The resource title.
            </summary>
        </member>
        <member name="M:Splunk.Resource.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Resource"/> class.
            </summary>
            <param name="service">The service.</param>
            <param name="path">The path of the resource.</param>
        </member>
        <member name="M:Splunk.Resource.#ctor(Splunk.Service,System.String,Splunk.Args)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Resource"/> class, 
            adding optional arguments for namespace and other endpoint 
            arguments.
            </summary>
            <param name="service">The service.</param>
            <param name="path">The path of this resource.</param>
            <param name="args">The variable arguments.</param>
        </member>
        <member name="M:Splunk.Resource.Actions">
            <summary>
            Gets an up-to-date list of actions available for this resource.
            </summary>
            <returns>Available actions on this endpoint.</returns>
        </member>
        <member name="M:Splunk.Resource.Invalidate">
            <summary>
            Marks the local state of this resource as no longer current.
            </summary>
            <returns>The resource.</returns>
        </member>
        <member name="M:Splunk.Resource.Load(Splunk.AtomObject)">
            <summary>
            Loads the state of this resource from a given Atom object.
            </summary>
            <param name="value">The Atom object to load.</param>
            <returns>The resource.</returns>
        </member>
        <member name="M:Splunk.Resource.Refresh">
            <summary>
            Refreshes the local state of this resource.
            </summary>
            <returns>The resource.</returns>
        </member>
        <member name="M:Splunk.Resource.Validate">
            <summary>
            Ensures that the local state of the resource is current,
            calling object-specific <see cref="M:Splunk.Resource.Refresh"/> method if necessary.
            </summary>
            <returns>The resource.</returns>
        </member>
        <member name="P:Splunk.Resource.Path">
            <summary>
            Gets or sets the full path of this resource.
            </summary>
        </member>
        <member name="P:Splunk.Resource.PartialPath">
            <summary>
            Gets or sets the partial path of this resource.
            </summary>
        </member>
        <member name="P:Splunk.Resource.Service">
            <summary>
            Gets or sets the service this resource is found on.
            </summary>
        </member>
        <member name="P:Splunk.Resource.RefreshArgs">
            <summary>
            Gets or sets the refresh arguments for this resources.
            </summary>
        </member>
        <member name="P:Splunk.Resource.MaybeValid">
            <summary>
            Gets or sets a value indicating whether this resource is "clean"
            or "dirty." When "dirty," we refresh the resource before returning 
            any data contained therein.
            </summary>
        </member>
        <member name="P:Splunk.Resource.Name">
            <summary>
            Gets the name of this resource 
            </summary>
        </member>
        <member name="P:Splunk.Resource.Title">
            <summary>
            Gets or sets the  value of the title of this resource. 
            </summary>
            <remarks>
            Be aware that getting the property may refresh the local resource 
            if "dirty" from the server.
            </remarks>
        </member>
        <member name="F:Splunk.Entity.content">
            <summary>
            The content that makes up the <see cref="T:Splunk.Entity"/>.
            </summary>
        </member>
        <member name="F:Splunk.Entity.toUpdate">
            <summary>
            The local cache of values to update when either update method is 
            called.
            </summary>
        </member>
        <member name="M:Splunk.Entity.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Entity"/> class.
            </summary>
            <param name="service">The service.</param>
            <param name="path">The resource's path.</param>
        </member>
        <member name="M:Splunk.Entity.ActionPath(System.String)">
            <summary>
            Returns the path that corresponds to the requested action.
            </summary>
            <param name="action">The action.</param>
            <returns>The path for the desired action.</returns>
        </member>
        <member name="M:Splunk.Entity.ContainsKey(System.Object)">
            <summary>
            Determines whether the key exists in the content data.
            </summary>
            <param name="key">The key.</param>
            <returns>Whether the key exists.</returns>
        </member>
        <member name="M:Splunk.Entity.ContainsValue(System.Object)">
            <summary>
            Determines whether the value exists in the content data.
            </summary>
            <param name="value">The value.</param>
            <returns>Whether the value exists.</returns>
        </member>
        <member name="M:Splunk.Entity.Disable">
            <summary>
            Disables the entity that is named by this endpoint. 
            </summary>
            <remarks>
            This method is available an almost every endpoint.
            </remarks>
        </member>
        <member name="M:Splunk.Entity.Enable">
            <summary>
            Enables the entity that is named by this endpoint. 
            </summary>
            <remarks>
            This method is available an almost every endpoint.
            </remarks>
        </member>
        <member name="M:Splunk.Entity.Get(System.Object)">
            <summary>
            Gets the value associated with the key out of the content of 
            this resource.
            </summary>
            <param name="key">The key.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Splunk.Entity.GetBoolean(System.String)">
            <summary>
            Returns the Boolean value associated with the specified key. 
            </summary>
            <param name="key">The key.</param>
            <returns>A Boolean value.</returns>
            <remarks>
            Values can be converted from: "0", "1", true, and false.
            </remarks>
        </member>
        <member name="M:Splunk.Entity.GetBoolean(System.String,System.Boolean)">
            <summary>
            Returns the Boolean value associated with the specified key, or the
            default value if the key does not exist. 
            </summary>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value if key not
            found.</param>
            <returns>The value.</returns>
            <remarks>
            Values can be converted from: "0", "1", true, and false.
            </remarks>
        </member>
        <member name="M:Splunk.Entity.GetByteCount(System.String)">
            <summary>
            Returns the long value associated with the specified key. 
            </summary>
            <param name="key">The key.</param>
            <returns>The value.</returns>
            <remarks>
            Long values can be converted from: number, numberMB, numberGB.
            </remarks>
        </member>
        <member name="M:Splunk.Entity.GetByteCount(System.String,System.Int64)">
            <summary>
            Returns the long value associated with the specified key, or the 
            default value if the key does not exist. 
            </summary>
            <param name="key">The key.</param>
            <param name="defaultValue">The value if the key is not
            found.</param>
            <returns>The value.</returns>
            <remarks>
            Long values can be converted from: number, numberMB, numberGB.
            </remarks>
        </member>
        <member name="M:Splunk.Entity.GetContent">
            <summary>
            Returns the validated (refreshed if "dirty") content.
            </summary>
            <returns>The content.</returns>
        </member>
        <member name="M:Splunk.Entity.GetDate(System.String)">
            <summary>
            Returns a date value associated with the specified key. 
            </summary>
            <param name="key">The date string.</param>
            <returns>The date.</returns>
            <remarks>
            Date values can be converted from standard UTC time formats.
            </remarks>
        </member>
        <member name="M:Splunk.Entity.GetDate(System.String,System.DateTime)">
            <summary>
            Returns a date value associated with the specified key, or the 
            default value if the key does not exist.
            </summary>
            <param name="key">The key.</param>
            <param name="defaultValue">The default time value.</param>
            <returns>The <see cref="T:System.DateTime"/> structure.</returns>
        </member>
        <member name="M:Splunk.Entity.GetFloat(System.String)">
            <summary>
            Returns the double-floating point value associated with the 
            specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Splunk.Entity.GetFloat(System.String,System.Double)">
            <summary>
            Returns the double-floating point value associated with the 
            specified key, or the default value if the key does not exist.
            </summary>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Splunk.Entity.GetInteger(System.String)">
            <summary>
            Returns the integer point value associated with the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Splunk.Entity.GetInteger(System.String,System.Int32)">
            <summary>
            Returns the integer value associated with the specified key, or the 
            default value if the key does not exist.
            </summary>
            <param name="key">The key.</param>
            <param name="defaultValue">The value if key not present.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Splunk.Entity.GetLong(System.String)">
            <summary>
            Returns the long value associated with the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Splunk.Entity.GetLong(System.String,System.Int32)">
            <summary>
            Returns the long value associated with the specified key, or the 
            default value if the key does not exist.
            </summary>
            <param name="key">The key.</param>
            <param name="defaultValue">The value of key is not present.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Splunk.Entity.GetMetadata">
            <summary>
            Returns the metadata (eai:acl) of this entity. 
            </summary>
            <returns>The metadata.</returns>
            <remarks>
            This data includes permissions for accessing the resource, and 
            values that indicate which resource fields are wildcards, required,
            and optional.
            </remarks>
        </member>
        <member name="M:Splunk.Entity.GetString(System.String)">
            <summary>
            Returns the string value associated with the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Splunk.Entity.GetString(System.String,System.String)">
            <summary>
            Returns the string value associated with the specified key, or the
            default value if the key is not found.
            </summary>
            <param name="key">The key.</param>
            <param name="defaultValue">The value if the key is not found.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Splunk.Entity.GetStringArray(System.String)">
            <summary>
            Returns the string array value associated with the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Splunk.Entity.GetStringArray(System.String,System.String[])">
            <summary>
            Returns the string array value associated with the specified key, 
            or the default value if the key does not exist.
            </summary>
            <param name="key">The key.</param>
            <param name="defaultValue">The value if key is not found.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Splunk.Entity.Load(Splunk.AtomObject)">
            <summary>
            Loads the <see cref="T:Splunk.Entity"/> with the <see cref="T:Splunk.AtomObject"/> 
            data.
            </summary>
            <param name="value">The <see cref="T:Splunk.AtomObject"/>.</param>
            <returns>The filled <see cref="T:Splunk.Entity"/>.</returns>
        </member>
        <member name="M:Splunk.Entity.Refresh">
            <summary>
            Refreshes the <see cref="T:Splunk.Entity"/> by calling the server's GET 
            method on the endpoint.
            </summary>
            <returns>The refreshed resource.</returns>
        </member>
        <member name="M:Splunk.Entity.Reload">
            <summary>
            Performs this entity's reload action.
            </summary>
        </member>
        <member name="M:Splunk.Entity.Remove(System.Object)">
            <summary>
            Not supported. Removes an element from the content of this entity. 
            </summary>
            <param name="key">The key.</param>
            <returns>Always throws an exception.</returns>
        </member>
        <member name="M:Splunk.Entity.SetCacheValue(System.String,System.Object)">
            <summary>
            Sets the local cache update value. Writing to the server is deferred
            until the <see cref="M:Splunk.Entity.Update"/> method is called.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Splunk.Entity.Remove">
            <summary>
            Removes this entity from its corresponding collection.
            </summary>
        </member>
        <member name="M:Splunk.Entity.Update(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Updates the entity with the values you previously set using the 
            class properties, and any additional specified arguments. The 
            specified arguments take precedence over the values that were  
            set using the class properties.
            </summary>
            <param name="args">The key/value pairs to update.</param>
            <remarks>
            </remarks>
        </member>
        <member name="M:Splunk.Entity.Update">
            <summary>
            Updates the entity with the accumulated arguments, established by 
            the individual properties for each specific entity class.
            </summary>
        </member>
        <member name="M:Splunk.Entity.Validate">
            <summary>
            Validates the current <see cref="T:Splunk.Entity"/>.
            </summary>
            <returns>The validated <see cref="T:Splunk.Entity"/>.</returns>
        </member>
        <member name="M:Splunk.Entity.Values">
            <summary>
            Returns all the values from the content of this 
            <see cref="T:Splunk.Entity"/>.
            </summary>
            <returns>The values.</returns>
        </member>
        <member name="P:Splunk.Entity.IsEmpty">
            <summary>
            Gets a value indicating whether the content is empty. 
            </summary>
            <remarks>
            Be aware that if "dirty," this has the side effect of retrieving 
            refreshed data from the server.
            </remarks>
        </member>
        <member name="P:Splunk.Entity.IsDisabled">
            <summary>
            Gets a value indicating whether this entity is disabled. 
            </summary>
            <remarks>
            This method is available on almost every endpoint. Be aware that 
            if "dirty," this has the side effect of retrieving refreshed data 
            from the server.
            </remarks>
        </member>
        <member name="P:Splunk.Entity.KeySet">
            <summary>
            Gets the keys of the content. 
            </summary>
            <returns>The keys.</returns>
            <remarks>
            Be aware that if "dirty," this has the side
            effect of retrieving refreshed data from the server.
            </remarks>
        </member>
        <member name="P:Splunk.Entity.Size">
            <summary>
            Gets the number of elements in the content. 
            </summary>
            <remarks>
            Be aware that if "dirty," this has the side effect of retrieving 
            refreshed data from the server.
            </remarks>
        </member>
        <member name="M:Splunk.Application.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Application"/> class.
            </summary>
            <param name="service">The connected service.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Splunk.Application.AppUpdate">
            <summary>
            Returns any update information that is available for the app.
            </summary>
            <returns>The update information.</returns>
        </member>
        <member name="M:Splunk.Application.Archive">
            <summary>
            Archives the app on the server file system. 
            </summary>
            <returns>The archive information.</returns>
        </member>
        <member name="M:Splunk.Application.Setup">
            <summary>
            Returns the app's setup information.
            </summary>
            <returns>The setup information.</returns>
        </member>
        <member name="P:Splunk.Application.Author">
            <summary>
            Gets or sets the name of the app's author. For Splunkbase
            apps, this value is the username of the Splunk.com account. For 
            internal apps, this value is the full name.
            </summary>
        </member>
        <member name="P:Splunk.Application.CheckForUpdates">
            <summary>
            Gets or sets a value indicating whether Splunk checks 
            Splunkbase for updates.
            </summary>
        </member>
        <member name="P:Splunk.Application.Description">
            <summary>
            Gets or sets the short description of the app.
            </summary>
        </member>
        <member name="P:Splunk.Application.Label">
            <summary>
            Gets or sets the app's label (its name).
            </summary>
            <returns></returns>
        </member>
        <member name="P:Splunk.Application.Refreshes">
            <summary>
            Gets a value indicating whether to reload objects contained
            in the locally-installed app.
            </summary>
        </member>
        <member name="P:Splunk.Application.Version">
            <summary>
            Gets or sets the version of the app.
            </summary>
        </member>
        <member name="P:Splunk.Application.IsConfigured">
            <summary>
            Gets or sets a value indicating whether the app's custom setup 
            has been performed. 
            </summary>
            <remarks>
            This property is available starting in Splunk version 4.2.4.
            </remarks>
        </member>
        <member name="P:Splunk.Application.IsManageable">
            <summary>
            Deprecated in Splunk 5.0. Gets or sets a value indicating whether 
            the app can be managed by Splunk Manager. 
            </summary>
        </member>
        <member name="P:Splunk.Application.IsVisible">
            <summary>
            Gets or sets a value indicating whether the app is visible and 
            navigable from Splunk Web.
            </summary>
        </member>
        <member name="P:Splunk.Application.StateChangeRequiresRestart">
            <summary>
            Gets a value indicating whether a state change requires the app 
            to be restarted.
            </summary>
        </member>
        <member name="T:Splunk.ApplicationArchive">
            <summary>
            The <see cref="T:Splunk.ApplicationArchive"/> class represents an archive of a 
            Splunk app.
            </summary>
        </member>
        <member name="M:Splunk.ApplicationArchive.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.ApplicationArchive"/> 
            class.
            </summary>
            <param name="service">The connected service.</param>
            <param name="path">The path.</param>
        </member>
        <member name="P:Splunk.ApplicationArchive.AppName">
            <summary>
            Gets the app name.
            </summary>
        </member>
        <member name="P:Splunk.ApplicationArchive.FilePath">
            <summary>
            Gets the path indicating where the app archive file is stored 
            on the server, for direct file access.
            </summary>
        </member>
        <member name="P:Splunk.ApplicationArchive.Refreshes">
            <summary>
            Gets a value indicating whether to reload the objects contained  
            in the locally-installed app.
            </summary>
        </member>
        <member name="P:Splunk.ApplicationArchive.Url">
            <summary>
            Gets a URL to the app archive file on the server, for web browser 
            access.
            </summary>
        </member>
        <member name="T:Splunk.ApplicationArgs">
            <summary>
            The <see cref="T:Splunk.ApplicationArgs"/> class extends <see cref="T:Splunk.Args"/> for 
            <see cref="T:Splunk.Application"/> creation properties.
            </summary>
        </member>
        <member name="T:Splunk.Args">
            <summary>
            The <see cref="T:Splunk.Args"/> class is a helper class for working with Splunk
            REST API arguments. This extension is used mainly for encoding
            arguments for UTF-8 transmission to a Splunk instance in a key/value
            pairing for a string, or key=value1&amp;key=value2 (and so on) for an 
            array of strings.
            </summary>
        </member>
        <member name="M:Splunk.Args.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Args"/> class.
            </summary>
        </member>
        <member name="M:Splunk.Args.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Args"/> class,
            with a single key/value pair.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Splunk.Args.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Args"/> class, 
            with an existing dictionary. 
            </summary>
            <param name="values">The existing dictionary.</param>
        </member>
        <member name="M:Splunk.Args.Set(System.String,System.Object)">
            <summary>
            Adds a key/value pair to an <see cref="T:Splunk.Args"/> object,
            or overwrites the value if the key exists.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>The <see cref="T:Splunk.Args"/> object.</returns>
        </member>
        <member name="M:Splunk.Args.Create">
            <summary>
            Creates a new, empty <see cref="T:Splunk.Args"/> object.
            </summary>
            <returns>The new, empty <see cref="T:Splunk.Args"/> object.</returns>
        </member>
        <member name="M:Splunk.Args.Create(System.String,System.Object)">
            <summary>
            Creates a new <see cref="T:Splunk.Args"/> instance and initializes it with 
            a single key/value pair.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>The new initialized <see cref="T:Splunk.Args"/> object.</returns>
        </member>
        <member name="M:Splunk.Args.Create(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Creates a new <see cref="T:Splunk.Args"/> instance and initializes it with a
            pre-existing dictionary.
            </summary>
            <param name="values">The existing dictionary.</param>
            <returns>The new initialized <see cref="T:Splunk.Args"/> object.</returns>
        </member>
        <member name="M:Splunk.Args.Encode(System.String)">
            <summary>
            Encodes a single string with UTF-8 encoding.
            </summary>
            <param name="value">The string.</param>
            <returns>The UTF-8 encoded string.</returns>
        </member>
        <member name="M:Splunk.Args.Encode(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Encodes a dictionary of strings or string arrays into a single 
            UTF-8-encoded string.
            </summary>
            <param name="args">The string or string array.</param>
            <returns>The UTF-8-encoded string.</returns>
        </member>
        <member name="M:Splunk.Args.EncodeValues(System.Text.StringBuilder,System.String,System.String[])">
            <summary>
            Encodes an argument with a list-valued argument.
            </summary>
            <param name="builder">The string builder.</param>
            <param name="key">The key.</param>
            <param name="values">The string array.</param>
        </member>
        <member name="M:Splunk.Args.Encode">
            <summary>
            Encodes an <see cref="T:Splunk.Args"/> instance into a UTF-8 encoded string.
            </summary>
            <returns>The UTF-8 encoded string.</returns>
        </member>
        <member name="M:Splunk.Args.Get(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)">
            <summary>
            Returns the dictionary value of a specific key, or the default 
            value if the key is not found.
            </summary>
            <param name="args">The dictionary.</param>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The key's value in the dictionary, or the default value if
            not found.</returns>
        </member>
        <member name="P:Splunk.ApplicationArgs.Author">
            <summary>
            Sets the author of this application. 
            </summary>
            <remarks>
            For apps you intend to post to Splunkbase, enter the username of 
            your splunk.com account. For internal-use-only apps, include your 
            full name and/or contact info (for example, email address).
            </remarks>
        </member>
        <member name="P:Splunk.ApplicationArgs.Configured">
            <summary>
            Sets a value indicating whether the application has had its 
            custom configuration performed.
            </summary>
        </member>
        <member name="P:Splunk.ApplicationArgs.Description">
            <summary>
            Sets the description of the application. 
            </summary>
            <remarks>
            The application description is a short explanatory string 
            displayed underneath the app's title in Launcher. Typically, 
            descriptions of 200 characters or fewer are most effective.
            </remarks>
        </member>
        <member name="P:Splunk.ApplicationArgs.Label">
            <summary>
            Sets the label of the application that is displayed in the Splunk 
            GUI and Launcher. 
            </summary>
            <remarks>
            The recommended length of the application label is
            between 5 and 80 characters, and it must not include "Splunk For".
            </remarks>
        </member>
        <member name="P:Splunk.ApplicationArgs.Manageable">
            <summary>
            Deprecated in Splunk 5.0. Sets a value indicating whether the 
            application can be managed by the Splunk Manager. 
            </summary>
        </member>
        <member name="P:Splunk.ApplicationArgs.Template">
            <summary>
            Sets the template type used when creating the application. 
            </summary>
            <remarks>
            This property's valid values are:
            <list type="bullet">
            <item><b>"barebones"</b> indicates the template contains the basic 
            framework for an app.</item>
            <item><b>"sample_app"</b> indicates the template contains example 
            views and searches.</item>
            <item>or the name of a previously installed template</item>
            </list>
            </remarks>
        </member>
        <member name="P:Splunk.ApplicationArgs.Visible">
            <summary>
            Sets a value indicating whether the application is visible and 
            accessible from the Splunk UI.
            </summary>
        </member>
        <member name="T:Splunk.ApplicationSetup">
            <summary>
            The <see cref="T:Splunk.ApplicationSetup"/> class represents the setup 
            information for a Splunk app.
            </summary>
        </member>
        <member name="M:Splunk.ApplicationSetup.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.ApplicationSetup"/> 
            class.
            </summary>
            <param name="service">The connected service.</param>
            <param name="path">The path.</param>
        </member>
        <member name="P:Splunk.ApplicationSetup.Refreshes">
            <summary>
            Gets a value indicating whether to load the objects contained in the 
            locally-installed app.
            </summary>
        </member>
        <member name="P:Splunk.ApplicationSetup.SetupXml">
            <summary>
            Gets the app's setup information in XML format.
            </summary>
        </member>
        <member name="T:Splunk.ApplicationUpdate">
            <summary>
            The <see cref="T:Splunk.ApplicationUpdate"/> class represents information for 
            an update to a locally-installed Splunk app.
            </summary>
        </member>
        <member name="M:Splunk.ApplicationUpdate.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.ApplicationUpdate"/> 
            class.
            </summary>
            <param name="service">The connected service.</param>
            <param name="path">The path.</param>
        </member>
        <member name="P:Splunk.ApplicationUpdate.AppUrl">
            <summary>
            Gets the fully-qualified URL to the app update.
            </summary>
        </member>
        <member name="P:Splunk.ApplicationUpdate.Checksum">
            <summary>
            Gets the checksum of the app.
            </summary>
        </member>
        <member name="P:Splunk.ApplicationUpdate.ChecksumType">
            <summary>
            Gets the checksum type of the app.
            </summary>
        </member>
        <member name="P:Splunk.ApplicationUpdate.Homepage">
            <summary>
            Gets the fully-qualified URL to the app's homepage.
            </summary>
        </member>
        <member name="P:Splunk.ApplicationUpdate.UpdateName">
            <summary>
            Gets the app's name.
            </summary>
        </member>
        <member name="P:Splunk.ApplicationUpdate.UpdateSize">
            <summary>
            Gets the app's update size.
            </summary>
        </member>
        <member name="P:Splunk.ApplicationUpdate.Version">
            <summary>
            Gets the app's version.
            </summary>
        </member>
        <member name="P:Splunk.ApplicationUpdate.IsImplicitIdRequired">
            <summary>
            Gets a value indicating whether an implicit ID is required.
            </summary>
        </member>
        <member name="T:Splunk.AtomFeed">
            <summary>
            The <see cref="T:Splunk.AtomFeed"/> class represents the Atom feed data.
            </summary>
        </member>
        <member name="T:Splunk.AtomObject">
            <summary>
            The <see cref="T:Splunk.AtomObject"/> class represents an Atom object.
            </summary>
        </member>
        <member name="M:Splunk.AtomObject.Init(System.Xml.XmlElement)">
            <summary>
            Initializes a particular property of the current instance based
            on the given XML.
            </summary>
            <param name="element">The XML element.</param>
        </member>
        <member name="M:Splunk.AtomObject.Load(System.Xml.XmlElement)">
            <summary>
            Initializes the current AtomObject instance from the given XML 
            element by invoking <see cref="M:Splunk.AtomObject.Init(System.Xml.XmlElement)"/> on each child of the XML 
            element.
            </summary>
            <param name="element">The XML element.</param>
        </member>
        <member name="P:Splunk.AtomObject.Id">
            <summary>
            Gets or sets value of the Atom <b>id</b> element.
            </summary>
        </member>
        <member name="P:Splunk.AtomObject.Links">
            <summary>
            Gets or sets the value of the Atom <b>link</b> elements 
            </summary>
        </member>
        <member name="P:Splunk.AtomObject.Title">
            <summary>
            Gets or sets the value of the Atom <b>title</b> element.
            </summary>
        </member>
        <member name="P:Splunk.AtomObject.Updated">
            <summary>
            Gets or sets the value of the Atom <b>updated</b> element.
            </summary>
        </member>
        <member name="M:Splunk.AtomFeed.Create">
            <summary>
            Creates a new <see cref="T:Splunk.AtomFeed"/> instance.
            </summary>
            <returns>An empty AtomFeed object</returns>
        </member>
        <member name="M:Splunk.AtomFeed.Parse(System.IO.Stream)">
            <summary>
            Creates a new <see cref="T:Splunk.AtomFeed"/> instance based on the given 
            stream.
            </summary>
            <param name="input">The input stream.</param>
            <returns>The AtomFeed.</returns>
        </member>
        <member name="M:Splunk.AtomFeed.Parse(System.Xml.XmlElement)">
            <summary>
            Creates a new <see cref="T:Splunk.AtomFeed"/> based on a given XML element.
            </summary>
            <param name="element">The XML element.</param>
            <returns>The AtomFeed.</returns>
        </member>
        <member name="M:Splunk.AtomFeed.Init(System.Xml.XmlElement)">
            <summary>
            Initializes the current <see cref="T:Splunk.AtomFeed"/> instance from a 
            given XML element.
            </summary>
            <param name="element">The XML element.</param>
        </member>
        <member name="P:Splunk.AtomFeed.Entries">
            <summary>
            Gets or sets the list of Atom entries contained in this  
            <see cref="T:Splunk.AtomFeed"/> object.
            </summary>
        </member>
        <member name="P:Splunk.AtomFeed.ItemsPerPage">
            <summary>
            Gets or sets the <see cref="T:Splunk.AtomFeed"/>'s <b>itemsPerPage</b> 
            element value.
            </summary>
        </member>
        <member name="P:Splunk.AtomFeed.StartIndex">
            <summary>
            Gets or sets the <see cref="T:Splunk.AtomFeed"/>'s <b>startIndex</b> 
            element value.
            </summary>
        </member>
        <member name="P:Splunk.AtomFeed.TotalResults">
            <summary>
            Gets or sets the <see cref="T:Splunk.AtomFeed"/>'s <b>totalResults</b> element 
            value.
            </summary>
        </member>
        <member name="T:Splunk.AtomEntry">
            <summary>
            The <see cref="T:Splunk.AtomEntry"/> class represents the Atom &lt;entry&gt; 
            element data.
            </summary>
        </member>
        <member name="M:Splunk.AtomEntry.Create">
            <summary>
            Creates a new instance of the <see cref="T:Splunk.AtomEntry"/> class.
            </summary>
            <returns>An Atom entry.</returns>
        </member>
        <member name="M:Splunk.AtomEntry.Parse(System.IO.Stream)">
            <summary>
            Creates a new <see cref="T:Splunk.AtomEntry"/> instance based on a given 
            stream.
            </summary>
            <param name="input">The I/O stream.</param>
            <returns>An Atom entry.</returns>
            <remarks>
            A few endpoints, such as search/jobs/{sid}
            return an Atom entry element as the root of the response.
            </remarks>
        </member>
        <member name="M:Splunk.AtomEntry.Parse(System.Xml.XmlElement)">
            <summary>
            Creates a new <see cref="T:Splunk.AtomEntry"/> instance based on a given XML
            element.
            </summary>
            <param name="element">The XML element.</param>
            <returns>An Atom entry.</returns>
        </member>
        <member name="M:Splunk.AtomEntry.Init(System.Xml.XmlElement)">
            <summary>
            Initializes the current <see cref="T:Splunk.AtomEntry"/> instance with a
            given XML element.
            </summary>
            <param name="element">The XML element.</param>
        </member>
        <member name="M:Splunk.AtomEntry.GetChildElements(System.Xml.XmlElement)">
            <summary>
            Returns a filtered list of child XML element nodes. This helper
            function makes it easier to retrieve only the element children
            of a given XML element.
            </summary>
            <param name="element">The XML element.</param>
            <returns>XML element list.</returns>
        </member>
        <member name="M:Splunk.AtomEntry.ParseContent(System.Xml.XmlElement)">
            <summary>
            Parses the <b>content</b> element of an Atom entry.
            </summary>
            <param name="element">The XML element.</param>
            <returns>The content record.</returns>
        </member>
        <member name="M:Splunk.AtomEntry.ParseDict(System.Xml.XmlElement)">
            <summary>
            Parses a dictinary &lt;content&gt; element and returns a record
            object containing the parsed values.
            </summary>
            <param name="element">An XML element.</param>
            <returns>The record.</returns>
        </member>
        <member name="M:Splunk.AtomEntry.ParseList(System.Xml.XmlElement)">
            <summary>
            Parses a &lt;list&gt; element and return a list object
            containing the parsed values.
            </summary>
            <param name="element">An XML element.</param>
            <returns>The list of parsed values.</returns>
        </member>
        <member name="M:Splunk.AtomEntry.ParseValue(System.Xml.XmlElement)">
            <summary>
            Parses the value content of a dictionary/key or a list/item 
            element.
            </summary>
            <param name="element">The XML element.</param>
            <returns>Either the dictionary or list of values.</returns>
            <remarks>
            The value is either text, a dictionary element, or a list element.
            </remarks>
        </member>
        <member name="P:Splunk.AtomEntry.Published">
            <summary>
            Gets or sets the value of the Atom entry's &lt;published&gt; 
            element.
            </summary>
        </member>
        <member name="P:Splunk.AtomEntry.Content">
            <summary>
            Gets or sets the value of the Atom entry's &lt;content&gt;
            element.
            </summary>
        </member>
        <member name="T:Splunk.BaseService">
            <summary>
            The <see cref="T:Splunk.BaseService"/> class contains functionality common to 
            Splunk Enterprise and Splunk Storm. This class is an implementation 
            detail and should not be extended outside of the SDK.
            </summary>
        </member>
        <member name="T:Splunk.HttpService">
            <summary>
            The <see cref="T:Splunk.HttpService"/> class represents a generic HTTP/S layer
            that facilitates HTTP/S access to Splunk.
            </summary>
        </member>
        <member name="F:Splunk.HttpService.SchemeHttp">
            <summary>
            Constant for http scheme.
            </summary>
        </member>
        <member name="F:Splunk.HttpService.SchemeHttps">
            <summary>
            Constant for https scheme.
            </summary>
        </member>
        <member name="F:Splunk.HttpService.DefaultScheme">
            <summary>
            Constant for default scheme.
            </summary>
        </member>
        <member name="F:Splunk.HttpService.host">
            <summary>
            Gets or sets the host name of the service.
            </summary>
        </member>
        <member name="F:Splunk.HttpService.port">
            <summary>
            Gets or sets the port number of the service.
            </summary>
        </member>
        <member name="F:Splunk.HttpService.prefix">
            <summary>
            Gets or sets the prefix.
            </summary>
        </member>
        <member name="F:Splunk.HttpService.scheme">
            <summary>
            Gets or sets the scheme used to access the service.
            </summary>
        </member>
        <member name="F:Splunk.HttpService.userAgent">
            <summary>
            Cached user agent string
            </summary>
        </member>
        <member name="M:Splunk.HttpService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.HttpService"/> class.
            </summary>
        </member>
        <member name="M:Splunk.HttpService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.HttpService"/> class,
            adding the host.
            </summary>
            <param name="host">The host name.</param>
        </member>
        <member name="M:Splunk.HttpService.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.HttpService"/> class,
            adding the host and the port. 
            </summary>
            <param name="host">The hostname.</param>
            <param name="port">The port.</param>
        </member>
        <member name="M:Splunk.HttpService.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.HttpService"/> class,
            adding the host, port and scheme.
            </summary>
            <param name="host">The hostname.</param>
            <param name="port">The port.</param>
            <param name="scheme">The scheme, either http, or https.</param>
        </member>
        <member name="M:Splunk.HttpService.InitProperties">
            <summary>
            Initialize the properties.
            </summary>
        </member>
        <member name="M:Splunk.HttpService.Count(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Returns the count of arguments in the given dictionary.
            </summary>
            <param name="args">The dictionary.</param>
            <returns>The number of elements in the dictionary.</returns>
        </member>
        <member name="M:Splunk.HttpService.Get(System.String)">
            <summary>
            Issues an HTTP GET request against the service using a given path.
            </summary>
            <param name="path">The path.</param>
            <returns>The responseMessage.</returns>
        </member>
        <member name="M:Splunk.HttpService.Get(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Issues an HTTP GET request against the service using a given path
            and arguments.
            </summary>
            <param name="path">The path.</param>
            <param name="args">The arguments.</param>
            <returns>The ResponseMessage.</returns>
        </member>
        <member name="M:Splunk.HttpService.GetUrl(System.String)">
            <summary>
            Constructs a fully qualified URL for this service using a given
            path.
            </summary>
            <param name="path">The path.</param>
            <returns>The fully qualified URL.</returns>
        </member>
        <member name="M:Splunk.HttpService.Post(System.String)">
            <summary>
            Issues a POST request against the service using a given path.
            </summary>
            <param name="path">The path.</param>
            <returns>The <see cref="T:Splunk.ResponseMessage"/>.</returns>
        </member>
        <member name="M:Splunk.HttpService.Post(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Issues a POST request against the service using a given path and 
            arguments.
            </summary>
            <param name="path">The path.</param>
            <param name="args">The arguments.</param>
            <returns>The <see cref="T:Splunk.ResponseMessage"/>.</returns>
        </member>
        <member name="M:Splunk.HttpService.Delete(System.String)">
            <summary>
            Issues a DELETE request against the service using a given path.
            </summary>
            <param name="path">The path.</param>
            <returns>The <see cref="T:Splunk.ResponseMessage"/>.</returns>
        </member>
        <member name="M:Splunk.HttpService.Delete(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Issues a DELETE request against the service using a given path and 
            arguments.
            </summary>
            <param name="path">The path.</param>
            <param name="args">The arguments.</param>
            <returns>The <see cref="T:Splunk.ResponseMessage"/>.</returns>
        </member>
        <member name="M:Splunk.HttpService.Send(System.String,Splunk.RequestMessage)">
            <summary>
            The main HTTP send method. Sends any of the supported HTTP/S 
            methods to the service.
            </summary>
            <param name="path">The path.</param>
            <param name="request">The requestMessage.</param>
            <returns>The responseMessage.</returns>
        </member>
        <member name="M:Splunk.HttpService.SetTrustPolicy">
            <summary>
            Sets the trust policy for communication to the service. The default 
            is trust all servers.
            </summary>
        </member>
        <member name="P:Splunk.HttpService.Host">
            <summary>
            Gets or sets the hostname of this service.
            </summary>
            <returns>The hostname.</returns>
        </member>
        <member name="P:Splunk.HttpService.Port">
            <summary>
            Gets or sets the port of this service.
            </summary>
            <returns>The port.</returns>
        </member>
        <member name="P:Splunk.HttpService.Prefix">
            <summary>
            Gets or sets the URL prefix of this service, consisting of
            scheme://host:port.
            </summary>
            <returns>The URL prefix.</returns>
        </member>
        <member name="P:Splunk.HttpService.Scheme">
            <summary>
            Gets or sets the scheme used by this service.
            </summary>
            <returns>The scheme.</returns>
        </member>
        <member name="M:Splunk.BaseService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.BaseService"/> class.
            </summary>
        </member>
        <member name="M:Splunk.BaseService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.BaseService"/> class.
            </summary>
            <param name="host">The hostname.</param>
        </member>
        <member name="M:Splunk.BaseService.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.BaseService"/> class,
            with host and port.
            </summary>
            <param name="host">The hostname.</param>
            <param name="port">The port.</param>
        </member>
        <member name="M:Splunk.BaseService.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.BaseService"/> class,
            with host, port, and scheme.
            </summary>
            <param name="host">The hostname.</param>
            <param name="port">The port.</param>
            <param name="scheme">The scheme, http or https.</param>
        </member>
        <member name="T:Splunk.ResponseStream">
            <summary>
            The <see cref="T:Splunk.ResponseStream"/> class represents a stream
            constructed by <see cref="T:Splunk.ResponseMessage"/>. Everything is
            redirected to the original stream.
            </summary>
        </member>
        <member name="P:Splunk.ResponseStream.IsExportResult">
            <summary>
            Gets the body content stream.
            </summary>
            <returns>The stream.</returns>
        </member>
        <member name="T:Splunk.ExtensionMethods">
            <summary>
            The <see cref="T:Splunk.ExtensionMethods"/> class hosts extension methods. 
            </summary>
        </member>
        <member name="M:Splunk.ExtensionMethods.GetSplunkEnumValue(System.Enum)">
            <summary>
            Retrieves the custom string for the enum value.
            </summary>
            <param name="value">The enum value.</param>
            <returns>The custom string.</returns>
        </member>
        <member name="M:Splunk.ExtensionMethods.ToCsv(System.String[])">
            <summary>
            Joins the specified strings with a comma, forming a single
            comma-separated string.
            </summary>
            <param name="value">The array.</param>
            <returns>
            A string of comma-separated values.
            </returns>
        </member>
        <member name="T:Splunk.SplunkEnumValue">
            <summary>
            The <see cref="T:Splunk.SplunkEnumValue"/> class represents an <see cref="T:System.Attribute"/>
            for Enum types holding a string value used by Splunk REST API.
            </summary>
        </member>
        <member name="M:Splunk.SplunkEnumValue.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.SplunkEnumValue"/> class.
            </summary>
            <param name="value">The value of the custom string.</param>
        </member>
        <member name="P:Splunk.SplunkEnumValue.Value">
            <summary>
            Gets the value of the custom string.
            </summary>
        </member>
        <member name="T:Splunk.Event">
            <summary>
            The <see cref="T:Splunk.Event"/> class wraps an individual event or result that
            was returned by the <see cref="T:Splunk.ResultsReader"/> class.
            An event maps each field name to an instance of
            <see cref="T:Splunk.Event.FieldValue"/> class, which is a list of zero of more
            values.
            </summary>
        </member>
        <member name="P:Splunk.Event.SegmentedRaw">
            <summary>
            Gets the XML markup for the <code>"_raw"</code> field value. This
            value is only used by the <see cref="T:Splunk.ResultsReaderXml"/> class.
            <remarks>
            The return value is different than that of
            the <code>"_raw"</code> field value
            in that this segmented raw value is an XML fragment that includes all 
            markup such as XML tags and escaped characters.
            For example, <code>anEvent["_raw"]</code> field value returns this:
            <code>
            <![CDATA[
            "http://localhost:8000/en-US/app/search/flashtimeline?q=search%20search%20index%3D_internal%20%7C%20head%2010&earliest=rt-1h&latest=rt"
            ]]>
            </code>
            <code>anEvent.SegmentedRaw</code> returns this:
            <code>
            <v xml:space="preserve" trunc="0">"http://localhost:8000/en-US/app/<sg h="1">search</sg>/flashtimeline?q=<sg h="1">search</sg>%20<sg h="1">search</sg>%20index%3D_internal%20%7C%20head%2010&amp;earliest=rt-1h&amp;latest=rt"</v>
            </code>
            </remarks>
            </summary>
        </member>
        <member name="T:Splunk.Event.FieldValue">
            <summary>
            A field can be accessed as either an <see cref="T:System.Array"/>
            or as a delimited string (using an implicit string converter or 
            <see cref="M:Splunk.Event.FieldValue.GetArray"/>). Splunk recommends accessing values as an 
            array when possible.
            </summary>
            <remarks>
            <para>
            The delimiter for field values depends on the underlying 
            result format. If the underlying format does not specify 
            a delimiter, such as with the <see cref="T:Splunk.ResultsReaderXml"/> class, 
            the delimiter is <see cref="F:Splunk.Event.FieldValue.DefaultDelimiter"/>, 
            which is a comma (,).
            </para>
            </remarks>
        </member>
        <member name="F:Splunk.Event.FieldValue.DefaultDelimiter">
            <summary>
            The default delimiter, which is a comma (,).
            </summary>
        </member>
        <member name="F:Splunk.Event.FieldValue.singleOrDelimited">
            <summary>
            A single value or delimited set of values. 
            Null if <see cref="F:Splunk.Event.FieldValue.arrayValues"/> is used.
            </summary>
        </member>
        <member name="F:Splunk.Event.FieldValue.arrayValues">
            <summary>
            An array of values. Null if <see cref="F:Splunk.Event.FieldValue.singleOrDelimited"/> 
            is used.
            </summary>
        </member>
        <member name="M:Splunk.Event.FieldValue.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Event.FieldValue"/> 
            class.
            </summary>
            <param name="singleOrDelimited">
            The single value or delimited set of values.
            </param>
        </member>
        <member name="M:Splunk.Event.FieldValue.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Event.FieldValue"/>
            class.
            </summary>
            <param name="arrayValues">Array of values.</param>
        </member>
        <member name="M:Splunk.Event.FieldValue.GetArray">
            <summary>
            Gets the values for the field.
            </summary>
            <remarks>
            <b>Caution:</b> This variant of the <b>GetArray</b> method 
            is unsafe for <see cref="T:Splunk.ResultsReader"/> implementations that 
            require a delimiter. Therefore, this method should only be 
            used for results that are returned by 
            <see cref="T:Splunk.ResultsReaderXml"/>. For other readers, use the 
            <see cref="M:Splunk.Event.FieldValue.GetArray(System.String)"/> method instead.
            If the underlying <see cref="T:Splunk.ResultsReader"/> object has 
            no delimiter, the original array of values is returned. 
            If the object does have a delimiter, the single/delimited value
            is split based on the 
            <see cref="F:Splunk.Event.FieldValue.DefaultDelimiter"/> and is returned as an array.
            </remarks>
            <returns>
            The original array of values if there is no delimiter, or the 
            array of values split by the delimiter.
            </returns>
        </member>
        <member name="M:Splunk.Event.FieldValue.GetArray(System.String)">
            <summary>
            Gets the values for the field.
            </summary>
            <remarks>
            The delimiter must be determined empirically based on the search
            string and the data format of the index. The delimiter can 
            differ between fields in the same <see cref="T:Splunk.Event"/>.
            <para>
            If the underlying <see cref="T:Splunk.ResultsReader"/> object has 
            no delimiter, the original array of values is returned. 
            If the object does have a delimiter, the single/delimited value
            is split based on the specified delimiter 
            and is returned as an array.
            </para>
            </remarks>
            <param name="delimiter">The delimiter, which is be passed to 
            <see cref="M:System.String.Split(System.String[],System.StringSplitOptions)"/> 
            to perform the split.</param>
            <returns>
            The original array of values if there is no delimiter,
            or the array of values split by the delimiter.
            </returns>
        </member>
        <member name="M:Splunk.Event.FieldValue.ToString">
            <summary>
            Returns the single value or delimited set of values for the
            field.
            </summary>
            <remarks>
            <para>
            When getting a multi-valued field, use the
            <see cref="M:Splunk.Event.FieldValue.GetArray"/> methods instead.
            </para>
            </remarks>
            <returns>The single value or set of values delimited by 
            <see cref="F:Splunk.Event.FieldValue.DefaultDelimiter"/>.
            </returns>
        </member>
        <member name="M:Splunk.Event.FieldValue.op_Implicit(Splunk.Event.FieldValue)~System.String">
            <summary>
            Converts a <see cref="T:Splunk.Event.FieldValue"/> to a <c>string</c>.
            Same as <see cref="M:Splunk.Event.FieldValue.ToString"/>
            </summary>
            <remarks>
            <para>
            When getting a multi-valued field, use the
            <see cref="M:Splunk.Event.FieldValue.GetArray"/> methods instead.
            </para>
            </remarks>
            <param name="value">Field value</param>
            <returns>The single value or set of values delimited by the 
            <see cref="F:Splunk.Event.FieldValue.DefaultDelimiter"/>.
            </returns>
        </member>
        <member name="M:Splunk.Event.FieldValue.op_Explicit(Splunk.Event.FieldValue)~System.Double">
            <summary>
            Converts an <see cref="T:Splunk.Event.FieldValue"/> to a <c>double</c>.
            </summary>
            <param name="value">The field value.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Splunk.Event.FieldValue.op_Explicit(Splunk.Event.FieldValue)~System.Single">
            <summary>
            Converts an <see cref="T:Splunk.Event.FieldValue"/> to a <c>float</c>.
            </summary>
            <param name="value">The field value.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Splunk.Event.FieldValue.op_Explicit(Splunk.Event.FieldValue)~System.Byte">
            <summary>
            Converts an <see cref="T:Splunk.Event.FieldValue"/> to a <c>byte</c>.
            </summary>
            <param name="value">The field value.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Splunk.Event.FieldValue.op_Explicit(Splunk.Event.FieldValue)~System.UInt16">
            <summary>
            Converts an <see cref="T:Splunk.Event.FieldValue"/> to a <c>ushort</c>.
            </summary>
            <param name="value">The field value.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Splunk.Event.FieldValue.op_Explicit(Splunk.Event.FieldValue)~System.UInt32">
            <summary>
            Converts an <see cref="T:Splunk.Event.FieldValue"/> to a <c>uint</c>.
            </summary>
            <param name="value">The field value.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Splunk.Event.FieldValue.op_Explicit(Splunk.Event.FieldValue)~System.UInt64">
            <summary>
            Converts an <see cref="T:Splunk.Event.FieldValue"/> to a <c>ulong</c>.
            </summary>
            <param name="value">The field value.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Splunk.Event.FieldValue.op_Explicit(Splunk.Event.FieldValue)~System.SByte">
            <summary>
            Converts an <see cref="T:Splunk.Event.FieldValue"/> to a <c>sbyte</c>.
            </summary>
            <param name="value">The field value.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Splunk.Event.FieldValue.op_Explicit(Splunk.Event.FieldValue)~System.Int16">
            <summary>
            Converts an <see cref="T:Splunk.Event.FieldValue"/> to a <c>short</c>/.
            </summary>
            <param name="value">The field value.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Splunk.Event.FieldValue.op_Explicit(Splunk.Event.FieldValue)~System.Int32">
            <summary>
            Converts an <see cref="T:Splunk.Event.FieldValue"/> to a <c>int</c>.
            </summary>
            <param name="value">The field value.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Splunk.Event.FieldValue.op_Explicit(Splunk.Event.FieldValue)~System.Int64">
            <summary>
            Converts an <see cref="T:Splunk.Event.FieldValue"/> to a <c>ulong</c>.
            </summary>
            <param name="value">The field value.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Splunk.Event.FieldValue.ToByte">
            <summary>
            Converts to a <c>byte</c>.
            </summary>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Splunk.Event.FieldValue.ToUInt16">
            <summary>
            Converts to a <c>ushort</c>.
            </summary>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Splunk.Event.FieldValue.ToUInt32">
            <summary>
            Converts to a <c>uint</c>.
            </summary>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Splunk.Event.FieldValue.ToUInt64">
            <summary>
            Converts to a <c>ulong</c>.
            </summary>
            <returns>The converted value</returns>
        </member>
        <member name="M:Splunk.Event.FieldValue.ToSByte">
            <summary>
            Converts to a <c>sbyte</c>.
            </summary>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Splunk.Event.FieldValue.ToInt16">
            <summary>
            Converts to a <c>short</c>/.
            </summary>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Splunk.Event.FieldValue.ToInt32">
            <summary>
            Converts to a <c>int</c>.
            </summary>
            <returns>The converted value</returns>
        </member>
        <member name="M:Splunk.Event.FieldValue.ToInt64">
            <summary>
            Converts to a <c>ulong</c>.
            </summary>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Splunk.EventTypeArgs">
            <summary>
            The <see cref="T:Splunk.EventTypeArgs"/> class extends <see cref="T:Splunk.Args"/> for
            <see cref="T:Splunk.EventType"/> creation setters.
            </summary>
        </member>
        <member name="P:Splunk.EventTypeArgs.Description">
            <summary>
            Sets the description of this event type.
            </summary>
        </member>
        <member name="P:Splunk.EventTypeArgs.Disabled">
            <summary>
            Sets a value indicating whether the event type is disabled.
            Note that changing the setting does not take effect until Splunk is
            restarted.
            </summary>
        </member>
        <member name="P:Splunk.EventTypeArgs.Priority">
            <summary>
            Sets the priority of this event type. The priority range is 1 to 
            10, with 1 being the highest priority.
            </summary>
        </member>
        <member name="T:Splunk.ConfCollection">
            <summary>
            The <see cref="T:Splunk.ConfCollection"/> class represents the collection of 
            configuration files.
            </summary>
        </member>
        <member name="T:Splunk.ResourceCollection`1">
            <summary>
            The <see cref="T:Splunk.ResourceCollection`1"/> class represents the base class
            of all collections.
            </summary>
            <typeparam name="T">The generic parameter derived from <see cref="T:Splunk.Resource"/>.
            </typeparam>
        </member>
        <member name="F:Splunk.ResourceCollection`1.itemClass">
            <summary>
            The object type of the class, a derived class of 
            <see cref="T:Splunk.Resource"/>.
            </summary>
        </member>
        <member name="F:Splunk.ResourceCollection`1.itemSig">
            <summary>
            The item signature of the constructors.
            </summary>
        </member>
        <member name="M:Splunk.ResourceCollection`1.#ctor(Splunk.Service,System.String,System.Type)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Splunk.ResourceCollection`1"/> 
            class.
            </summary>
            <param name="service">The service.</param>
            <param name="path">The path of the resource.</param>
            <param name="itemClass">The object type.</param>
        </member>
        <member name="M:Splunk.ResourceCollection`1.#ctor(Splunk.Service,System.String,Splunk.Args,System.Type)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Splunk.ResourceCollection`1"/> 
            class.
            </summary>
            <param name="service">The service.</param>
            <param name="path">The path of the resource.</param>
            <param name="args">The variable arguments.</param>
            <param name="itemClass">The object type.</param>
        </member>
        <member name="M:Splunk.ResourceCollection`1.Add(System.Object,`0)">
            <summary>
            Not supported. Adds a value to the dictionary.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Splunk.ResourceCollection`1.GetEnumerator">
            <summary>
            Returns the typed enumerator for this collection.
            </summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="M:Splunk.ResourceCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns the generic enumerator for this collection.
            </summary>
            <returns>The enumerator</returns>
        </member>
        <member name="M:Splunk.ResourceCollection`1.Clear">
            <summary>
            Unsupported. Clears the collection.
            </summary>
        </member>
        <member name="M:Splunk.ResourceCollection`1.ContainsKey(System.Object)">
            <summary>
            Returns a value indicating whether the collection of 
            resources contains the desired key.
            </summary>
            <param name="key">The key.</param>
            <returns>Whether the key is present.</returns>
        </member>
        <member name="M:Splunk.ResourceCollection`1.ContainsKey(System.Object,Splunk.Args)">
            <summary>
            Returns a value that indicating whether the collection of 
            resources contains the desired key, qualified by namespace.
            </summary>
            <param name="key">The key.</param>
            <param name="splunkNamespace">The namespace.</param>
            <returns>Whether the key is present.</returns>
        </member>
        <member name="M:Splunk.ResourceCollection`1.ContainsValue(`0)">
            <summary>
            Returns a value indicating whether the value exists in
            the collection. 
            </summary>
            <param name="value">The value.</param>
            <returns>Whether the value is present.</returns>
        </member>
        <member name="M:Splunk.ResourceCollection`1.CreateItem(System.Type,System.String,Splunk.Args)">
            <summary>
            Creates a collection member.
            </summary>
            <param name="itemClass">The object type being created.</param>
            <param name="path">The path to the resource.</param>
            <param name="splunkNamespace">The namespace.</param>
            <returns>The new object.</returns>
        </member>
        <member name="M:Splunk.ResourceCollection`1.CreateItem(Splunk.AtomEntry)">
            <summary>
            Creates a collection member corresponding to a given
            Atom entry. 
            </summary>
            <remarks>
            This base implementation uses the class object that was
            passed in when the generic <see cref="T:Splunk.ResourceCollection`1"/> was
            created. Subclasses may override this method to provide alternative
            means of instantiating collection items.
            </remarks>
            <param name="entry">The <see cref="T:Splunk.AtomEntry"/>.</param>
            <returns>The new object.</returns>
        </member>
        <member name="M:Splunk.ResourceCollection`1.Equals(System.Object)">
            <summary>
            Returns a value indicating whether the collections are equal.
            </summary>
            <param name="o">The object to compare against.</param>
            <returns>Whether the collections are equal.</returns>
        </member>
        <member name="M:Splunk.ResourceCollection`1.Get(System.Object)">
            <summary>
            Gets the object in the collection, given the key. 
            </summary>
            <remarks>
            If there is more than one resource identified by the key, a
            <see cref="F:Splunk.SplunkException.AMBIGUOUS"/> exception is thrown. In
            order to disambiguate resources, a namespace must be supplied.
            </remarks>
            <param name="key">The key</param>
            <returns>The object, or default(object) if not found.</returns>
        </member>
        <member name="M:Splunk.ResourceCollection`1.Get(System.Object,Splunk.Args)">
            <summary>
            Gets the object in the collection, given the key, with a scoped
            name-spaced constraint.
            </summary>
            <param name="key">The key.</param>
            <param name="splunkNamespace">The namespace.</param>
            <returns>The object, or default(object) if not found.</returns>
        </member>
        <member name="M:Splunk.ResourceCollection`1.GetHashCode">
            <summary>
            Returns an up-to-date hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Splunk.ResourceCollection`1.ItemKey(Splunk.AtomEntry)">
            <summary>
            Returns the value to use as the item key from a given Atom entry.
            </summary>
            <remarks>
            Subclasses may override this value for collections that use 
            something other than title as the key.
            </remarks>
            <param name="entry">The <see cref="T:Splunk.AtomEntry"/>.</param>
            <returns>The title.</returns>
        </member>
        <member name="M:Splunk.ResourceCollection`1.ItemPath(Splunk.AtomEntry)">
            <summary>
            Returns the value to use as the item path from a given Atom entry.
            </summary>
            <remarks>
            Subclasses may override this value to support alternative methods 
            of determining a member's path.
            </remarks>
            <param name="entry">The <see cref="T:Splunk.AtomEntry"/>.</param>
            <returns>The alternate path.</returns>
        </member>
        <member name="M:Splunk.ResourceCollection`1.SplunkNamespace(Splunk.AtomEntry)">
            <summary>
            Returns the namespace of an <see cref="T:Splunk.AtomEntry"/> based on the
            eai::acl field.
            </summary>
            <param name="entry">The <see cref="T:Splunk.AtomEntry"/>.</param>
            <returns>The namespace.</returns>
        </member>
        <member name="M:Splunk.ResourceCollection`1.List">
            <summary>
            Issues an HTTP request to list the contents of the collection 
            resource.
            </summary>
            <returns>The contents of the collection <see cref="T:Splunk.ResponseMessage"/> format.
            </returns>
        </member>
        <member name="M:Splunk.ResourceCollection`1.Load(Splunk.AtomFeed)">
            <summary>
            Loads the collection resource from a given Atom feed.
            </summary>
            <param name="value">The <see cref="T:Splunk.AtomFeed"/>.</param>
            <returns>The <see cref="T:Splunk.ResourceCollection`1"/>.</returns>
        </member>
        <member name="M:Splunk.ResourceCollection`1.Refresh">
            <summary>
            Refreshes the resource collection.
            </summary>
            <returns>The <see cref="T:Splunk.Resource"/>.</returns>
        </member>
        <member name="M:Splunk.ResourceCollection`1.Remove(System.Object)">
            <summary>
            Not supported. Removes an element from the resource collection.
            </summary>
            <param name="key">The key.</param>
            <returns>Throws an exception.</returns>
        </member>
        <member name="M:Splunk.ResourceCollection`1.Validate">
            <summary>
            Validates the collection. If "dirty," will refresh.
            </summary>
            <returns>The collection.</returns>
        </member>
        <member name="M:Splunk.ResourceCollection`1.ValueSize(System.Object)">
            <summary>
            Returns the number of elements in the list of a
            specific key in the collection.
            </summary>
            <param name="key">The key.</param>
            <returns>The number of elements.</returns>
        </member>
        <member name="P:Splunk.ResourceCollection`1.IsFixedSize">
            <summary>
            Gets a value indicating whether the IDictionary has a fixed size.
            </summary>
        </member>
        <member name="P:Splunk.ResourceCollection`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the IDictionary is read-only. 
            </summary>
        </member>
        <member name="P:Splunk.ResourceCollection`1.Items">
            <summary>
            Gets the items in the collection. 
            </summary>
            <remarks>
            Because of namespace rules, a key-name may result in multiple 
            entities; thus the key resolves to a list of one or more entities.
            </remarks>
        </member>
        <member name="P:Splunk.ResourceCollection`1.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.IEnumerable"/> of keys in the collection of
            resources. 
            </summary>
            <remarks>
            Be aware that if the local resource collection is "dirty," this
            property will refresh an up-to-date copy from the server.
            </remarks>
        </member>
        <member name="P:Splunk.ResourceCollection`1.Size">
            <summary>
            Gets the number of elements in the collection.
            </summary>
        </member>
        <member name="P:Splunk.ResourceCollection`1.Values">
            <summary>
            Gets an <see cref="T:System.Collections.IEnumerable"/> of values in the collection of
            resources. 
            </summary>
            <remarks>
            Be aware that if the local resource collection is "dirty," 
            this will refresh an up-to-date copy from the server.
            </remarks>
        </member>
        <member name="P:Splunk.ResourceCollection`1.IsEmpty">
            <summary>
            Gets a value indicating whether the up-to-date resource count
            is 0.
            </summary>
            <returns>Whether the count is 0.</returns>
        </member>
        <member name="T:Splunk.ResourceCollection`1.OrderedResourceDictionary">
            <summary>
            Wrapper to preserve order with an unordered base dictionary.
            </summary>
            <remarks>
            You can't use System.Collections.Specialized.OrderedDictionary
            directly since you want a typed interface from IDictionary 
            generics.
            </remarks>
        </member>
        <member name="F:Splunk.ResourceCollection`1.OrderedResourceDictionary.linkedList">
            <summary>
            A linked list for ordering.
            </summary>
        </member>
        <member name="M:Splunk.ResourceCollection`1.OrderedResourceDictionary.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Splunk.ResourceCollection`1.OrderedResourceDictionary"/> class.
            </summary>
        </member>
        <member name="M:Splunk.ResourceCollection`1.OrderedResourceDictionary.System#Collections#Generic#IDictionary{System#String@System#Collections#Generic#List{T}}#Add(System.String,System.Collections.Generic.List{`0})">
            <summary>
            Adds to the dictionary and the end of enumeration.
            </summary>
            <param name="key">Key of the element to add.</param>
            <param name="value">Value of the element to add.</param>
        </member>
        <member name="M:Splunk.ResourceCollection`1.OrderedResourceDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Collections#Generic#List{T}}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.List{`0}})">
            <summary>
            Not supported. Use a dictionary instead.
            </summary>
            <param name="item">The element to add.</param>
        </member>
        <member name="M:Splunk.ResourceCollection`1.OrderedResourceDictionary.System#Collections#Generic#IDictionary{System#String@System#Collections#Generic#List{T}}#Remove(System.String)">
            <summary>
            Not supported. Removes an element using a key.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns>Not supported.</returns>
        </member>
        <member name="M:Splunk.ResourceCollection`1.OrderedResourceDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Collections#Generic#List{T}}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.List{`0}})">
            <summary>
            Not supported. Removes an element using an item. 
            </summary>
            <param name="item">The element to remove.</param>
            <returns>Not supported.</returns>
        </member>
        <member name="M:Splunk.ResourceCollection`1.OrderedResourceDictionary.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Collections#Generic#List{T}}}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through 
            the collection in order.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="M:Splunk.ResourceCollection`1.OrderedResourceDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through 
            the collection in order.
            </summary>
            <returns>An enumerator</returns>
        </member>
        <member name="M:Splunk.ResourceCollection`1.OrderedResourceDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Collections#Generic#List{T}}}#Clear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="P:Splunk.ResourceCollection`1.OrderedResourceDictionary.System#Collections#Generic#IDictionary{System#String@System#Collections#Generic#List{T}}#Keys">
            <summary>
            Gets an ordered Keys collection.
            </summary>
        </member>
        <member name="P:Splunk.ResourceCollection`1.OrderedResourceDictionary.System#Collections#Generic#IDictionary{System#String@System#Collections#Generic#List{T}}#Values">
            <summary>
            Gets an ordered Values collection.
            </summary>
        </member>
        <member name="M:Splunk.ConfCollection.#ctor(Splunk.Service)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.ConfCollection"/> 
            class.
            </summary>
            <param name="service">The connected service.</param>
        </member>
        <member name="M:Splunk.ConfCollection.#ctor(Splunk.Service,Splunk.Args)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.ConfCollection"/> 
            class.
            </summary>
            <param name="service">The connected service.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Splunk.ConfCollection.Create(System.String)">
            <summary>
            Creates a new stanza in the current configuration file.
            </summary>
            <param name="name">The stanza name.</param>
            <returns>The stanza.</returns>
        </member>
        <member name="M:Splunk.ConfCollection.Create(System.String,Splunk.Args)">
            <summary>
            Creates a new stanza in the current configuration file with 
            attributes.
            </summary>
            <param name="name">The stanza name.</param>
            <param name="args">The arguments.</param>
            <returns>The stanza.</returns>
        </member>
        <member name="M:Splunk.ConfCollection.ItemPath(Splunk.AtomEntry)">
            <summary>
            Returns the endpoint path for this configuration stanza.
            </summary>
            <param name="entry">The Atom entry.</param>
            <returns>The item path.</returns>
        </member>
        <member name="T:Splunk.EntityMetadata">
            <summary>
            The <see cref="T:Splunk.EntityMetadata"/> class provides access to the metadata
            properties of a corresponding entity. Use the 
            <see cref="M:Splunk.Entity.GetMetadata"/> method to obtain an instance of this 
            class.
            </summary>
        </member>
        <member name="F:Splunk.EntityMetadata.entity">
            <summary>
            The entity.
            </summary>
        </member>
        <member name="M:Splunk.EntityMetadata.#ctor(Splunk.Entity)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.EntityMetadata"/> 
            class.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Splunk.EntityMetadata.GetEaiAcl">
            <summary>
            Returns a record containing all of the metadata information 
            for this resource.
            </summary>
            <returns>The metadata record.</returns>
        </member>
        <member name="P:Splunk.EntityMetadata.CanChangePermissions">
            <summary>
            Gets a value indicating whether this entity's permission can be 
            changed.
            </summary>
        </member>
        <member name="P:Splunk.EntityMetadata.CanShareApp">
            <summary>
            Gets a value indicating whether this resource can be shared via 
            an app.
            </summary>
        </member>
        <member name="P:Splunk.EntityMetadata.CanShareGlobal">
            <summary>
            Gets a value indicating whether the resource can be shared
            globally.
            </summary>
        </member>
        <member name="P:Splunk.EntityMetadata.CanShareUser">
            <summary>
            Gets a value indicating whether the resource can be shared to a 
            specific user.
            </summary>
        </member>
        <member name="P:Splunk.EntityMetadata.CanWrite">
            <summary>
            Gets a value indicating whether his entity can be modified.
            </summary>
        </member>
        <member name="P:Splunk.EntityMetadata.App">
            <summary>
            Gets the app context of this resource.
            </summary>
        </member>
        <member name="P:Splunk.EntityMetadata.Owner">
            <summary>
            Gets the username of the resource owner.
            </summary>
        </member>
        <member name="P:Splunk.EntityMetadata.Permissions">
            <summary>
            Gets this entity's permissions, which represent an
            allowable inclusive action:list-of-roles map.
            </summary>
        </member>
        <member name="P:Splunk.EntityMetadata.Sharing">
            <summary>
            Gets how this resource is shared (app, global, and/or user).
            </summary>
        </member>
        <member name="P:Splunk.EntityMetadata.IsModifiable">
            <summary>
            Gets a value indicating whether this entity can be modified.
            </summary>
        </member>
        <member name="T:Splunk.EventType">
            <summary>
            The <see cref="T:Splunk.EventType"/> class represents an event type.
            </summary>
        </member>
        <member name="M:Splunk.EventType.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.EventType"/> class.
            </summary>
            <param name="service">The connected service.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Splunk.EventType.Update(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Updates the event type with the values you previously set using 
            the class properties, and any additional specified arguments. The 
            specified arguments take precedence over the values that were set 
            using the properties.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Splunk.EventType.Update">
            <summary>
            Updates the event type with the accumulated arguments, established 
            by the individual properties for each specific entity class.
            </summary>
        </member>
        <member name="P:Splunk.EventType.Description">
            <summary>
            Gets or sets the description of this event type.
            </summary>
        </member>
        <member name="P:Splunk.EventType.Priority">
            <summary>
            Gets or sets the priority of this event type. The range is 1 to 10, 
            with 1 being the highest priority.
            </summary>
        </member>
        <member name="P:Splunk.EventType.Search">
            <summary>
            Gets or sets the search terms for this event type.
            </summary>
        </member>
        <member name="P:Splunk.EventType.Disabled">
            <summary>
            Sets a value indicating whether the event type is disabled.
            </summary>
            <remarks>
            Be aware that changing the setting does not take effect until 
            Splunk is restarted.
            </remarks>
        </member>
        <member name="T:Splunk.EventTypeCollection">
            <summary>
            The <see cref="T:Splunk.EventTypeCollection"/> class represents the collection
            of <see cref="T:Splunk.EventType"/>s.
            </summary>
        </member>
        <member name="T:Splunk.EntityCollection`1">
            <summary>
            The <see cref="T:Splunk.EntityCollection`1"/> class represents a collection of
            <see cref="T:Splunk.Entity"/>s.
            </summary>
            <typeparam name="T">The Generic parameter that matches the
            <see cref="T:Splunk.Entity"/> class, or any class derived from 
            <see cref="T:Splunk.Entity"/>.</typeparam>
        </member>
        <member name="M:Splunk.EntityCollection`1.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.EntityCollection`1"/> 
            class.
            </summary>
            <param name="service">The service.</param>
            <param name="path">The endpoint for this collection.</param>
        </member>
        <member name="M:Splunk.EntityCollection`1.#ctor(Splunk.Service,System.String,Splunk.Args)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.EntityCollection`1"/> 
            class.
            </summary>
            <param name="service">The service.</param>
            <param name="path">The endpoint for this collection.</param>
            <param name="args">The variable argument list.</param>
        </member>
        <member name="M:Splunk.EntityCollection`1.#ctor(Splunk.Service,System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.EntityCollection`1"/> 
            class.
            </summary>
            <param name="service">The service.</param>
            <param name="path">The endpoint for this collection.</param>
            <param name="itemClass">The type of this entity.</param>
        </member>
        <member name="M:Splunk.EntityCollection`1.#ctor(Splunk.Service,System.String,Splunk.Args,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.EntityCollection`1"/> 
            class.
            </summary>
            <param name="service">The service.</param>
            <param name="path">The endpoint for this collection.</param>
            <param name="args">The variable argument list.</param>
            <param name="itemClass">The type of this entity.</param>
        </member>
        <member name="M:Splunk.EntityCollection`1.Create(System.String)">
            <summary>
            Creates an <see cref="T:Splunk.Entity"/> in this collection.
            </summary>
            <param name="name">The name of this entity.</param>
            <returns>The entity.</returns>
        </member>
        <member name="M:Splunk.EntityCollection`1.Create(System.String,Splunk.Args)">
            <summary>
            Creates an <see cref="T:Splunk.Entity"/> in this collection.
            </summary>
            <param name="name">The name of this entity.</param>
            <param name="args">The variable argument list.</param>
            <returns>The entity.</returns>
        </member>
        <member name="M:Splunk.EntityCollection`1.Remove(System.String)">
            <summary>
            Removes an <see cref="T:Splunk.Entity"/> from this collection. 
            </summary>
            <param name="key">The name of this entity.</param>
            <returns>The removed entity.</returns>
            <remarks>
            Be aware that this method can throw the SplunkException
            "AMBIGUOUS" if the collection contains more than one entity with
            the specified key.
            Disambiguation is done through the similar method 
            <see cref="M:Splunk.EntityCollection`1.Remove(System.String,Splunk.Args)"/>, which uses the namespace to 
            perform the disambiguation.
            </remarks>
        </member>
        <member name="M:Splunk.EntityCollection`1.Remove(System.String,Splunk.Args)">
            <summary>
            Removes an entity from this collection, with a namespace 
            restriction.
            </summary>
            <param name="key">The name of this entity.</param>
            <param name="splunkNamespace">The namespace.</param>
            <returns>The removed entity.</returns>
        </member>
        <member name="M:Splunk.EventTypeCollection.#ctor(Splunk.Service)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.EventTypeCollection"/> 
            class.
            </summary>
            <param name="service">The connected service.</param>
        </member>
        <member name="M:Splunk.EventTypeCollection.#ctor(Splunk.Service,Splunk.Args)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.EventTypeCollection"/> 
            class.
            </summary>
            <param name="service">The connected service.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Splunk.EventTypeCollection.Create(System.String,System.String)">
            <summary>
            Creates an event type.
            </summary>
            <param name="name">The name of the event.</param>
            <param name="search">The search string.</param>
            <returns>The EventType.</returns>
        </member>
        <member name="M:Splunk.EventTypeCollection.Create(System.String,System.String,Splunk.Args)">
            <summary>
            Creates an event type.
            </summary>
            <param name="name">The name of the event.</param>
            <param name="search">The search string.</param>
            <param name="args">The arguments.</param>
            <returns>The event type.</returns>
        </member>
        <member name="T:Splunk.FiredAlert">
            <summary>
            The <see cref="T:Splunk.FiredAlert"/> class represents a fired alert.
            </summary>
        </member>
        <member name="M:Splunk.FiredAlert.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.FiredAlert"/> class.
            </summary>
            <param name="service">The service.</param>
            <param name="path">The path.</param>
        </member>
        <member name="P:Splunk.FiredAlert.AlertActions">
            <summary>
            Gets this alert's actions (such as notifying by email, running a 
            script, adding to RSS, tracking in Alert Manager, and enabling 
            summary indexing). 
            </summary>
        </member>
        <member name="P:Splunk.FiredAlert.AlertType">
            <summary>
            Gets this alert's type.
            </summary>
        </member>
        <member name="P:Splunk.FiredAlert.ExpirationTimeRendered">
            <summary>
            Gets the rendered expiration time for this alert. 
            </summary>
            <remarks>
            This property is available in Splunk 4.3 and later.
            </remarks>
        </member>
        <member name="P:Splunk.FiredAlert.IsDigestMode">
            <summary>
            Gets a value indicating whether the result is a set of events 
            (digest) or a single event (per result). 
            </summary>
            <remarks>
            This property is available in Splunk 4.3 and later.
            </remarks>
        </member>
        <member name="P:Splunk.FiredAlert.SavedSearchName">
            <summary>
            Gets the saved search name for this alert.
            </summary>
        </member>
        <member name="P:Splunk.FiredAlert.Severity">
            <summary>
            Gets this alert's severity on a scale of 1 to 10, with 1 being the
            the most severe.
            </summary>
        </member>
        <member name="P:Splunk.FiredAlert.Sid">
            <summary>
            Gets this alert's search ID (SID).
            </summary>
        </member>
        <member name="P:Splunk.FiredAlert.TriggeredAlertCount">
            <summary>
            Gets the count of triggered alerts. 
            </summary>
            <remarks>
            This property is available in Splunk 4.3 and later.
            </remarks>
        </member>
        <member name="P:Splunk.FiredAlert.TriggerTime">
            <summary>
            Gets this alert's trigger time.
            </summary>
        </member>
        <member name="P:Splunk.FiredAlert.TriggerTimeRendered">
            <summary>
            Gets this alert's rendered trigger time.
            </summary>
        </member>
        <member name="T:Splunk.FiredAlertGroup">
            <summary>
            The <see cref="T:Splunk.FiredAlertGroup"/> class represents a group of fired
            alerts.
            </summary>
        </member>
        <member name="M:Splunk.FiredAlertGroup.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.FiredAlertGroup"/> 
            class.
            </summary>
            <param name="service">The connected service.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Splunk.FiredAlertGroup.Alerts">
            <summary>
            Returns a collection of fired alerts.
            </summary>
            <returns>The collection of fired alerts.</returns>
        </member>
        <member name="T:Splunk.FiredAlertsGroupCollection">
            <summary>
            The <see cref="T:Splunk.FiredAlertsGroupCollection"/> represents a collection
            of alert groups of fired alerts.
            </summary>
        </member>
        <member name="M:Splunk.FiredAlertsGroupCollection.#ctor(Splunk.Service)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Splunk.FiredAlertsGroupCollection"/> class.
            </summary>
            <param name="service">The connected service.</param>
        </member>
        <member name="M:Splunk.FiredAlertsGroupCollection.#ctor(Splunk.Service,Splunk.Args)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Splunk.FiredAlertsGroupCollection"/> class.
            </summary>
            <param name="service">The connected service.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Splunk.Index">
            <summary>
            The <see cref="T:Splunk.Index"/> class represents the Splunk DB/Index object.
            </summary>
        </member>
        <member name="M:Splunk.Index.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Index"/> class.
            </summary>
            <param name="service">The connected service</param>
            <param name="path">The path</param>
        </member>
        <member name="M:Splunk.Index.Attach">
            <summary>
            Creates a writable socket to this index.
            </summary>
            <returns>The network <see cref="T:System.IO.Stream"/>.</returns>
        </member>
        <member name="M:Splunk.Index.Attach(Splunk.Args)">
            <summary>
            Creates a writable socket to this index, adding optional arguments.
            </summary>
            <param name="args">The arguments.</param>
            <returns>The network <see cref="T:System.IO.Stream"/>.</returns>
        </member>
        <member name="M:Splunk.Index.Clean(System.Int32)">
            <summary>
            Cleans this index, removing all events, with specific timeout 
            value.
            </summary>
            <param name="maxSeconds">The maximum number of seconds to wait 
            before returning. A value of "-1" indicates to Splunk that it 
            should wait forever.</param>
            <returns>The <see cref="T:Splunk.Index"/>.</returns>
        </member>
        <member name="M:Splunk.Index.RollHotBuckets">
            <summary>
            Performs rolling hot buckets for this index.
            </summary>
        </member>
        <member name="M:Splunk.Index.Submit(System.String)">
            <summary>
            Submits an event to this index through an HTTP POST request.
            </summary>
            <param name="data">The event data to submit.</param>
        </member>
        <member name="M:Splunk.Index.Submit(Splunk.Args,System.String)">
            <summary>
            Submits an event to this index through an HTTP POST request with
            variable arguments.
            </summary>
            <param name="args">The optional arguments.</param>
            <param name="data">The event data to submit.</param>
        </member>
        <member name="M:Splunk.Index.Upload(System.String)">
            <summary>
            Uploads a file to this index as an event stream. 
            </summary>
            <param name="filepath">The path to the file to upload.</param>
            <remarks>
            Be aware that this file must be directly accessible by the Splunk
            server, at the file path supplied.
            </remarks>
        </member>
        <member name="P:Splunk.Index.AssureUTF8">
            <summary>
            Gets or sets a value indicating whether the data 
            retrieved from this index has been UTF8-encoded. 
            </summary>
            <remarks>
            Indexing performance degrades when this parameter is set to true.
            </remarks>
        </member>
        <member name="P:Splunk.Index.BlockSignatureDatabase">
            <summary>
            Gets the block signature database for this index.
            </summary>
        </member>
        <member name="P:Splunk.Index.BlockSignSize">
            <summary>
            Gets or sets the block sign size for this index. 
            </summary>
            <remarks>
            <para>
            This value defines the number of events that make up a block for 
            block signatures. 
            </para>
            <para>
            If this property is set to "0", block signing is disabled for this 
            index. 
            </para>
            <para>
            This property's recommended value is "100". 
            </para>
            <para>
            This property's default value is "0".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Index.BloomfilterTotalSizeKB">
            <summary>
            Gets the total size of all bloom filter files.
            </summary>
        </member>
        <member name="P:Splunk.Index.BucketRebuildMemoryHint">
            <summary>
            Gets or sets the suggestion Splunk bucket rebuild process for the 
            size of the time-series (tsidx) file to make.
            </summary>
            <remarks>
            <para>
            <b>Caution:</b> This is an advanced parameter. Inappropriate use 
            of this parameter causes splunkd to not start if rebuild is 
            required. Do not set this parameter unless instructed by Splunk
            Support.
            </para>
            <para>
            This property's default value is "auto".
            </para>
            <para>
            This property is available starting in Splunk 5.0.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Index.ColdPath">
            <summary>
            Gets an absolute filesystem path, local to the server, to
            the cold database for the index. The path must be both readable and 
            writable. 
            </summary>
            <remarks>
            <para>
            Cold databases are opened as needed when searching. May be
            defined in terms of a volume definition (see volume). 
            </para>
            <para>
            This property's value may contain shell expansion terms.
            </para>
            <para>
            Be aware that Splunk will not start if an index lacks a valid 
            <see cref="P:Splunk.Index.ColdPath"/>. 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Index.ColdPathExpanded">
            <summary>
            Gets the expanded absolute file path to the cold database for this
            index.
            </summary>
        </member>
        <member name="P:Splunk.Index.ColdToFrozenDir">
            <summary>
            Gets the destination filesystem path, local to the server, for the 
            frozen archive. Splunk automatically puts frozen buckets in this 
            directory.
            </summary>
            <remarks>
            <para>
            Use as an alternative to a <see cref="P:Splunk.Index.ColdToFrozenScript"/>.
            </para>
            <para>
            Bucket freezing policy is as follows:
            </para>
            <list type="bullet">
            <item> 
            New style buckets (4.2 and on): removes all files but the rawdata. 
            To thaw, run splunk rebuild "bucket dir" on the bucket, then move to 
            the thawed directory. 
            </item>
            <item>
            Old style buckets (Pre-4.2): gzip all the 
            .data and .tsidx files. To thaw, gunzip the zipped files and move 
            the bucket into the thawed directory for that index. 
            </item>
            </list>
            <para>
            <b>Note:</b> If both the <see cref="P:Splunk.Index.ColdToFrozenDir"/> 
            and <see cref="P:Splunk.Index.ColdToFrozenScript"/> properties are specified, the
            <see cref="P:Splunk.Index.ColdToFrozenDir"/> property takes precedence.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Index.ColdToFrozenScript">
            <summary>
            Gets the filesystem path, local to the server, that is the archiving
            script. 
            </summary>
            <remarks>
            <para>
            Bucket freezing policy is as follows:
            </para>
            <list type="bullet">
            <item> 
            New style buckets (4.2 and on): removes all files but the rawdata. 
            To thaw, run splunk rebuild "bucket dir" on the bucket, then move to 
            the thawed directory. Use the <see cref="P:Splunk.Index.ColdToFrozenDir"/> unless 
            you need to perform a more advanced operation upon freezing buckets.
            </item>
            <item>
            Old style buckets (Pre-4.2): gzip all the 
            .data and .tsidx files. To thaw, gunzip the zipped files and move 
            the bucket into the thawed directory for that index.
            </item>
            </list>
            </remarks>
        </member>
        <member name="P:Splunk.Index.CompressRawdata">
            <summary>
            Gets a value indicating whether the raw data is 
            compressed.
            </summary>
        </member>
        <member name="P:Splunk.Index.CurrentDBSizeMB">
            <summary>
            Gets the current size of this index.
            </summary>
        </member>
        <member name="P:Splunk.Index.DefaultDatabase">
            <summary>
            Gets the default index name of the Splunk instance.
            </summary>
        </member>
        <member name="P:Splunk.Index.EnableOnlineBucketRepair">
            <summary>
            Gets or sets a value indicating whether asynchronous (online fsck) 
            bucket repair is enabled. When enabled, bucket repair runs 
            concurrently with Splunk.
            </summary>
            <remarks>
            <para>
            When this feature is enabled, you don't have to wait for buckets
            to be repaired before starting Splunk, but you might notice a 
            slight degradation in performance as a result.
            </para>
            <para>
            This property's default value is "enabled".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Index.EnableRealtimeSearch">
            <summary>
            Gets a value indicating whether real-time search is 
            enabled for this index.
            </summary>
        </member>
        <member name="P:Splunk.Index.FrozenTimePeriodInSecs">
            <summary>
            Gets or sets the number of seconds after which indexed data rolls 
            to frozen. 
            </summary>
            <remarks>
            <para>
            Freezing data means it is removed from the index. 
            If archiving is necessary for frozen data, see the ColdToFrozen 
            attributes, <see cref="P:Splunk.Index.ColdToFrozenDir"/> and 
            <see cref="P:Splunk.Index.ColdToFrozenScript"/>.
            </para>
            <para>
            This property's default value is "188697600" (6 years).
            </para>
            </remarks>
            <seealso cref="P:Splunk.Index.ColdToFrozenDir"/>
            <seealso cref="P:Splunk.Index.ColdToFrozenScript"/>
        </member>
        <member name="P:Splunk.Index.HomePath">
            <summary>
            Gets an absolute path that contains the hot and warm buckets for the
            index. The path must be both readable and writable. 
            </summary>
            <remarks>
            <para>
            This property's value may contain shell expansion terms.
            </para>
            <para>
            <b>Note:</b> Splunk will not start if an index lacks a valid 
            <see cref="P:Splunk.Index.HomePath"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Index.HomePathExpanded">
            <summary>
            Gets the expanded absolute path to both hot and warm buckets for 
            this index.
            </summary>
        </member>
        <member name="P:Splunk.Index.IndexThreads">
            <summary>
            Gets the number of threads for this index. 
            </summary>
            <remarks>
            This property's value can be either a number or the keyword "auto".
            </remarks>
        </member>
        <member name="P:Splunk.Index.LastInitTime">
            <summary>
            Gets the last initialization time for this index.
            </summary>
        </member>
        <member name="P:Splunk.Index.MaxBloomBackfillBucketAge">
            <summary>
            Gets or sets a time that indicates a bucket age. When a warm or
            cold bucket is older than this, Splunk does not create or rebuild
            its bloomfilter. 
            </summary>
            <remarks>
            <para>
            The valid format is <i>number</i> followed by a time unit ("s", 
            "m", "h", or "d"). For example, "30d" indicates 30 days.
            </para>
            <para>
            When this property is set to "0", Splunk never rebuilds
            bloom filters.
            </para>
            <para>
            This property's default value is "30d".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Index.MaxConcurrentOptimizes">
            <summary>
            Gets or sets the maximum number of concurrent optimize processes 
            that can run against a hot bucket for this index. 
            </summary>
            <remarks>
            <para>
            This number should be increased from the 
            default only if instructed by Splunk Support.
            </para>
            <para>
            This property's default value is "3".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Index.MaxDataSize">
            <summary>
            Gets or sets the maximum size in megabytes (MB) for a hot database 
            to reach before triggering a roll from hot to warm buckets for this 
            index.
            </summary>
            <remarks>
            <para>
            Acceptable values are also "auto" or "auto_high_volume". 
            </para>
            <list type="bullet">
            <item>"auto" sets the size to 750MB</item>
            <item>"auto_high_volume" sets the size to 10 gigabytes (GB) on
            64-bit, and 1GB on 32-bit systems</item> 
            </list>
            <para>
            A "high volume index" would typically be considered one that gets 
            over 10GB of data per day. 
            </para>
            <para>
            Although the maximum value to which you can set this property is
            1048576MB, which corresponds to 1 terabyte (TB), a reasonable
            number ranges anywhere from 100 to 50000. Any number outside this
            range should be approved by Splunk Support before proceeding. 
            </para>
            <para>
            If you specify an invalid number or string, <see cref="P:Splunk.Index.MaxDataSize"/> will be auto tuned. 
            </para>
            <para>
            <b>Note:</b> The precise size of your warm buckets may 
            vary from <see cref="P:Splunk.Index.MaxDataSize"/>, due to post-processing and 
            timing issues with the rolling policy.
            </para>
            <para>
            This property's default value is "auto".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Index.MaxHotBuckets">
            <summary>
            Gets or sets the maximum number of hot buckets for this index.
            </summary>
            <remarks>
            <para>
            When <see cref="P:Splunk.Index.MaxHotBuckets"/> is exceeded, Splunk rolls the 
            least recently used (LRU) hot bucket to warm. Both normal hot 
            buckets and quarantined hot buckets count towards this total. 
            This setting operates independently of <see cref="P:Splunk.Index.MaxHotIdleSecs"/>, which can also cause hot buckets to roll.
            </para>
            <para>
            This property's default value is "3". 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Index.MaxHotIdleSecs">
            <summary>
            Gets or sets the maximum life of a hot bucket, in seconds. 
            </summary>
            <remarks>
            If a hot bucket exceeds this property's value, Splunk rolls
            the bucket to warm. This setting operates independently of <see cref="P:Splunk.Index.MaxHotBuckets"/>, which can also cause hot buckets to roll.
            <para>
            A value of "0" turns off the idle check, and indicates an
            infinite lifetime.
            </para>
            <para>
            This property's default value is "0". 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Index.MaxHotSpanSecs">
            <summary>
            Gets or sets the upper bound of target maximum timespan of hot 
            and warm buckets for this index, in seconds.
            </summary>
            <remarks>
            <para>
            <b>Note:</b> If you set this property too small, you can get an 
            explosion of hot/warm buckets in the filesystem. The system sets 
            a lower bound implicitly for this parameter at 3600, but this is an 
            advanced parameter that should be set with care and understanding 
            of the characteristics of your data.
            </para>
            <para>
            This property's default value is "7776000" (90 days). 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Index.MaxMemMB">
            <summary>
            Gets or sets the amount of memory, expressed in megabytes (MB), to 
            allocate for buffering a single tsidx file into memory before 
            flushing to disk. 
            </summary>
            <remarks>
            <para>
            This property's default value ("5") is recommended for all 
            environments.
            </para>
            <para>
            <b>Important:</b> Calculate this number carefully. Setting this 
            number incorrectly may have adverse effects on your system's memory 
            and splunkd stability and performance.
            </para>
            <para>
            This property's default value is "5". 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Index.MaxMetaEntries">
            <summary>
            Gets or sets the maximum number of unique lines in .data files in 
            a bucket, which may help to reduce memory consumption. 
            </summary>
            <remarks>
            <para>
            If set to "0", this setting is ignored (it is treated as
            infinite). 
            </para>
            <para>
            If this property's value is exceeded, a hot bucket is rolled to 
            prevent further increase. If your buckets are rolling due to 
            Strings.data hitting this limit, the culprit may be the punct field 
            in your data. If you don't use punct, it may be best to simply 
            disable this (see props.conf.spec in 
            $SPLUNK_HOME/etc/system/README). There is a small time delta 
            between when maximum is exceeded and bucket is rolled. This means
            a bucket may end up with epsilon more lines than specified, but
            this is not a major concern unless the excess is significant.
            </para>
            <para>
            This property's default value is "1000000". 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Index.MaxRunningProcessGroups">
            <summary>
            Gets the maximum number of concurrent helper processes for this 
            index.
            </summary>
        </member>
        <member name="P:Splunk.Index.MaxTime">
            <summary>
            Gets timestamp of the newest event time in the index. 
            </summary>
            <remarks>
            If this value is not available, the system's concept of minimum 
            time is returned.
            </remarks>
        </member>
        <member name="P:Splunk.Index.MaxTimeUnreplicatedNoAcks">
            <summary>
            Gets or sets the upper limit, in seconds, on how long an event can 
            sit in raw slice. 
            </summary>
            <remarks>
            <para>
            This property applies only if replication is enabled for this 
            index; otherwise it is ignored. 
            </para>
            <para>
            If there are any acknowledged events sharing this raw slice, this
            property does not apply, and 
            <see cref="P:Splunk.Index.MaxTimeUnreplicatedWithAcks"/> applies. 
            </para>
            <para>
            This property's highest legal value is "2147483647".
            </para>
            <para> 
            To disable this property, set it to "0".
            </para>
            <para>
            Be aware that this is an advanced parameter. Understand the 
            consequences before changing. 
            </para>
            <para>
            This property is available starting in Splunk 5.0.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Index.MaxTimeUnreplicatedWithAcks">
            <summary>
            Gets or sets the upper limit, in seconds, on how long an event can 
            sit unacknowledged in raw slice. 
            </summary>
            <remarks>
            <para>
            This property applies only when indexer acknowledgement 
            is enabled on forwarders and replication is enabled with clustering.  
            </para>
            <para>
            This property's highest legal value is "2147483647".
            </para>
            <para> 
            To disable this parameter, set this property to "0".
            </para>
            <para>
            Be aware that this is an advanced parameter. Understand the 
            consequences before changing. 
            </para>
            <para>
            This property is available in Splunk 5.0 and later.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Index.MaxTotalDataSizeMB">
            <summary>
            Gets or sets the maximum size of an index, in megabytes (MB).
            </summary>
            <remarks>
            <para>
            If an index grows larger than the maximum size, the oldest data is
            frozen.
            </para>
            <para>
            This property's default value is "500000".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Index.MaxWarmDBCount">
            <summary>
            Gets or sets the maximum number of warm buckets for this index. 
            </summary>
            <remarks>
            <para>
            If this property's value is exceeded, the warm buckets with the 
            lowest value for their latest times are moved to cold.
            </para>
            <para>
            This property's default value is "300".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Index.MemPoolMB">
            <summary>
            Gets the memory pool size for this index. 
            </summary>
            <remarks>
            This property's value can be a number or the keyword "auto".
            </remarks>
        </member>
        <member name="P:Splunk.Index.MinRawFileSyncSecs">
            <summary>
            Gets or sets how frequently splunkd forces a filesystem sync while 
            compressing journal slices for this index. 
            </summary>
            <remarks>
            <para>
            During the interval specified by this property, uncompressed 
            slices are left on disk even after they are compressed. Then 
            splunkd forces a filesystem sync of the compressed journal and
            removes the accumulated uncompressed files.
            </para>
            <para>
            If this property is set to "0", splunkd forces a filesystem sync 
            after every slice completes compressing. 
            </para>
            <para>
            If this property is set to "disable", syncing is disabled entirely;
            uncompressed slices are removed as soon as compression is complete.
            </para>
            <para>
            <b>Note:</b> Some filesystems are very inefficient at performing
            sync operations, so only enable this if you are sure it is needed.
            </para>
            <para>
            This property's default value is "disable".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Index.MinTime">
            <summary>
            Gets the timestamp of the oldest event time in the index.
            </summary>
            <remarks>
            If this value is not available, the system's concept of minimum 
            time is returned.
            </remarks>
        </member>
        <member name="P:Splunk.Index.NumHotBuckets">
            <summary>
            Gets the number of hot buckets that were created for this index.
            </summary>
        </member>
        <member name="P:Splunk.Index.NumWarmBuckets">
            <summary>
            Gets the umber of warm buckets that were created for this index.
            </summary>
        </member>
        <member name="P:Splunk.Index.NumBloomfilters">
            <summary>
            Gets the number of bloom filters that were created for this index.
            </summary>
        </member>
        <member name="P:Splunk.Index.PartialServiceMetaPeriod">
            <summary>
            Gets or sets the frequency, in seconds, at which metadata is  
            partially synced (synced in-place) for this index. 
            </summary>
            <remarks>
            <para>
            If set, this property's value indicates the frequency at which 
            metadata is synchronized, but only for records where the sync can
            be done efficiently in place, without requiring a full rewrite of
            the metadata file. Records that require a full rewrite are 
            synchronized at an interval defined by the <see cref="P:Splunk.Index.ServiceMetaPeriod"/> property.
            </para>
            <para>
            When this property is set to a value of "0", partial syncing is
            disabled, so metadata is only synced on an interval defined by the
            <see cref="P:Splunk.Index.ServiceMetaPeriod"/> property.
            </para>
            <para>
            If the value of this property is greater than that of the 
            <see cref="P:Splunk.Index.ServiceMetaPeriod"/> property, then this property has no
            effect.
            </para>
            <para>
            This property's default value is "0".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Index.QuarantineFutureSecs">
            <summary>
            Gets or sets the future event-time quarantine for this index. 
            Events that are newer than now plus this value are quarantined.
            </summary>
            <remarks>
            This property's default value is "2592000" (30 days).
            </remarks>
        </member>
        <member name="P:Splunk.Index.QuarantinePastSecs">
            <summary>
            Gets or sets the past event-time quarantine for this index. 
            Events that are older than now minus this value are quarantined.
            </summary>
            <remarks>
            This property's default value is "77760000" (900 days).
            </remarks>
        </member>
        <member name="P:Splunk.Index.RawChunkSizeBytes">
            <summary>
            Gets or sets the target uncompressed size of individual raw slices 
            in the raw data journal for this index. 
            </summary>
            <remarks>
            <para>
            <b>Warning:</b> This is an advanced property. Only change it if 
            you are instructed to do so by Splunk Support.
            </para>
            <para>
            This property only specifies a target chunk size. The actual chunk
            size may be slightly larger by an amount proportional to an
            individual event size.
            </para>
            <para>
            This property's default value is 131072 (128 kilobytes (KB)).
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Index.ReplicationFactor">
            <summary>
            Gets or sets the replication factor. 
            </summary>
            <remarks>
            <para>
            Valid values for this property are either a non-negative number
            or the "auto" keyword. 
            </para>
            <para>
            A value of "auto" instructs Splunk to use the value as configured
            with the master. 
            </para>
            <para>
            A value of "0" turns off replication for this index. 
            </para>
            <para>
            This parameter only applies to Splunk clustering slaves. 
            </para>
            <para>
            This property is available starting in Splunk 5.0.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Index.RotatePeriodInSecs">
            <summary>
            Gets or sets the frequency to check for the need to create a new 
            hot bucket and the need to roll or freeze any warm or cold buckets 
            for this index.
            </summary>
        </member>
        <member name="P:Splunk.Index.ServiceMetaPeriod">
            <summary>
            Gets or sets the frequency, in seconds, at which metadata is 
            synced to disk for this index.
            </summary>
            <remarks>
            <para>
            You may want to set this to a larger value if the sum of your
            metadata file sizes is larger than many tens of megabytes, to
            avoid the hit on I/O in the indexing fast path.
            </para>
            <para>
            This property's default value is "25".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Index.SuppressBannerList">
            <summary>
            Gets a comma separated list of indexes that suppress "index missing"
            messages.
            </summary>
        </member>
        <member name="P:Splunk.Index.Sync">
            <summary>
            Gets a value that specifies the number of events that trigger the 
            indexer to sync events.
            </summary>
        </member>
        <member name="P:Splunk.Index.SyncMeta">
            <summary>
            Gets or sets a value indicating whether the sync 
            operation is invoked before the file descriptor is closed on 
            metadata updates. 
            </summary>
            <remarks>
            <para>
            This functionality improves integrity of metadata files, especially
            in regards to operating system crashes or machine failures.
            </para>
            <para>
            <b>Warning:</b> This is an advanced parameter. Only change it if
            you are instructed to do so by Splunk Support.
            </para>
            <para>
            This property's default value is true.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Index.ThawedPath">
            <summary>
            Gets an absolute filesystem path, local to the server, that 
            contains the thawed (resurrected) databases for the index. 
            </summary>
            <remarks>
            <para>
            Be aware that Splunk will not start if an index lacks a 
            valid <see cref="P:Splunk.Index.ThawedPath"/>. 
            </para>
            <para>
            This property's value may contain shell expansion terms.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Index.ThawedPathExpanded">
            <summary>
            Gets the expanded absolute path to the thawed index for this index.
            </summary>
        </member>
        <member name="P:Splunk.Index.ThrottleCheckPeriod">
            <summary>
            Gets or sets the frequency at which Splunk checks for an index 
            throttling condition.
            </summary>
            <remarks>
            <para>
            This property's value should be changed from the default only 
            if instructed by Splunk Support.
            </para>
            <para>
            This property's default value is "15".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Index.TotalEventCount">
            <summary>
            Gets the total event count for this index.
            </summary>
        </member>
        <member name="P:Splunk.Index.IsInternal">
            <summary>
            Gets a value indicating whether this index is an 
            internal index.
            </summary>
        </member>
        <member name="T:Splunk.IndexArgs">
            <summary>
            The <see cref="T:Splunk.IndexArgs"/> class extends <see cref="T:Splunk.Args"/> for <see cref="T:Splunk.Index"/> creation-specific properties.
            </summary>
        </member>
        <member name="P:Splunk.IndexArgs.AssureUTF8">
            <summary>
            Sets a value indicating whether all data retrieved from the index
            is proper UTF8. 
            </summary>
            <remarks>
            <para>
            <b>Note:</b> When enabled indexing, performance will degrade. 
            </para>
            <para>
            This property's default value is false.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.BlockSignSize">
            <summary>
            Sets the block sign size for this index. 
            </summary>
            <remarks>
            <para>
            This value defines the number of events that make up a block for 
            block signatures. 
            </para>
            <para>
            If this property is set to "0", block signing is disabled for this 
            index. 
            </para>
            <para>
            This property's recommended value is "100". 
            </para>
            <para>
            This property's default value is "0".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.BucketRebuildMemoryHint">
            <summary>
            Sets the suggested Splunk bucket rebuild process for the size of 
            the time-series (tsidx) file to make.
            </summary>
            <remarks>
            <para>
            <b>Caution:</b> This is an advanced parameter. Inappropriate use 
            of this parameter causes splunkd to not start if rebuild is 
            required. Do not set this parameter unless instructed by Splunk 
            Support.
            </para>
            <para>
            This property's default value is "auto". 
            </para>
            <para>
            This property is available starting in Splunk 5.0. 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.ColdPath">
            <summary>
            Sets an absolute filesystem path, local to the server, to
            the cold database for the index. The path must be both readable and 
            writable. 
            </summary>
            <remarks>
            <para>
            Cold databases are opened as needed when searching. May be
            defined in terms of a volume definition (see volume). 
            </para>
            <para>
            This property's value may contain shell expansion terms.
            </para>
            <para>
            Be aware that Splunk will not start if an index lacks a valid 
            <see cref="P:Splunk.IndexArgs.ColdPath"/>. 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.ColdToFrozenDir">
            <summary>
            Sets the destination filesystem path, local to the server, for the 
            frozen archive. Splunk automatically puts frozen buckets in this 
            directory.
            </summary>
            <remarks>
            <para>
            Use as an alternative to a <see cref="P:Splunk.IndexArgs.ColdToFrozenScript"/>.
            </para>
            <para>
            Bucket freezing policy is as follows:
            </para>
            <list type="bullet">
            <item> 
            New style buckets (4.2 and on): removes all files but the rawdata. 
            To thaw, run splunk rebuild "bucket dir" on the bucket, then move to 
            the thawed directory. 
            </item>
            <item>
            Old style buckets (Pre-4.2): gzip all the 
            .data and .tsidx files. To thaw, gunzip the zipped files and move 
            the bucket into the thawed directory for that index. 
            </item>
            </list>
            <para>
            <b>Note:</b> If both the <see cref="P:Splunk.IndexArgs.ColdToFrozenDir"/> 
            and <see cref="P:Splunk.IndexArgs.ColdToFrozenScript"/> properties are specified, the
            <see cref="P:Splunk.IndexArgs.ColdToFrozenDir"/> property takes precedence.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.ColdToFrozenScript">
            <summary>
            Sets the filesystem path, local to the server, that is the archiving
            script. 
            </summary>
            <remarks>
            <para>
            Bucket freezing policy is as follows:
            </para>
            <list type="bullet">
            <item> 
            New style buckets (4.2 and on): removes all files but the rawdata. 
            To thaw, run splunk rebuild "bucket dir" on the bucket, then move to 
            the thawed directory. Use the <see cref="P:Splunk.IndexArgs.ColdToFrozenDir"/> unless 
            you need to perform a more advanced operation upon freezing buckets.
            </item>
            <item>
            Old style buckets (Pre-4.2): gzip all the 
            .data and .tsidx files. To thaw, gunzip the zipped files and move 
            the bucket into the thawed directory for that index.
            </item>
            </list>
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.EnableOnlineBucketRepair">
            <summary>
            Sets a value indicating whether asynchronous (online fsck) bucket 
            repair is enabled. When enabled, bucket repair runs concurrently 
            with Splunk. 
            </summary>
            <remarks>
            <para>
            When this feature is enabled, you don't have to wait for buckets
            to be repaired before starting Splunk, but you might notice a 
            slight degradation in performance as a result.
            </para>
            <para>
            This property's default value is "enabled".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.FrozenTimePeriodInSecs">
            <summary>
            Sets the number of seconds after which indexed data rolls to frozen. 
            </summary>
            <remarks>
            <para>
            Freezing data means it is removed from the index. 
            If archiving is necessary for frozen data, see the ColdToFrozen 
            attributes, <see cref="P:Splunk.IndexArgs.ColdToFrozenDir"/> and 
            <see cref="P:Splunk.IndexArgs.ColdToFrozenScript"/>.
            </para>
            <para>
            This property's default value is "188697600" (6 years).
            </para>
            </remarks>
            <seealso cref="P:Splunk.IndexArgs.ColdToFrozenDir"/>
            <seealso cref="P:Splunk.IndexArgs.ColdToFrozenScript"/>
        </member>
        <member name="P:Splunk.IndexArgs.HomePath">
            <summary>
            Sets an absolute path that contains the hot and warm buckets for the
            index. The path must be both readable and writable. 
            </summary>
            <remarks>
            <para>
            This property's value may contain shell expansion terms.
            </para>
            <para>
            <b>Note:</b> Splunk will not start if an index lacks a valid 
            <see cref="P:Splunk.IndexArgs.HomePath"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.MaxBloomBackfillBucketAge">
            <summary>
            Sets a time that indicates a bucket age. When a warm or
            cold bucket is older than this, Splunk does not create or rebuild
            its bloomfilter. 
            </summary>
            <remarks>
            <para>
            The valid format is <i>number</i> followed by a time unit ("s", 
            "m", "h", or "d"). For example, "30d" indicates 30 days.
            </para>
            <para>
            When this property is set to "0", Splunk never rebuilds
            bloom filters.
            </para>
            <para>
            This property's default value is "30d".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.MaxConcurrentOptimizes">
            <summary>
            Sets the  maximum number of concurrent optimize processes 
            that can run against a hot bucket for this index.
            </summary>
            <remarks>
            <para>
            This number should be increased from the 
            default only if instructed by Splunk Support.
            </para>
            <para>
            This property's default value is "3".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.MaxDataSize">
            <summary>
            Sets the maximum size in megabytes (MB) for a hot database to reach
            before triggering a roll from hot to warm buckets for this index.
            </summary>
            <remarks>
            <para>
            Acceptable values are also "auto" or "auto_high_volume". 
            </para>
            <list type="bullet">
            <item>"auto" sets the size to 750MB</item>
            <item>"auto_high_volume" sets the size to 10 gigabytes (GB) on
            64-bit, and 1GB on 32-bit systems</item> 
            </list>
            <para>
            A "high volume index" would typically be considered one that gets 
            over 10GB of data per day. 
            </para>
            <para>
            Although the maximum value to which you can set this property is
            1048576MB, which corresponds to 1 terabyte (TB), a reasonable
            number ranges anywhere from 100 to 50000. Any number outside this
            range should be approved by Splunk Support before proceeding. 
            </para>
            <para>
            If you specify an invalid number or string, <see cref="P:Splunk.IndexArgs.MaxDataSize"/> will be auto tuned. 
            </para>
            <para>
            <b>Note:</b> The precise size of your warm buckets may 
            vary from <see cref="P:Splunk.IndexArgs.MaxDataSize"/>, due to post-processing and 
            timing issues with the rolling policy.
            </para>
            <para>
            This property's default value is "auto".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.MaxHotBuckets">
            <summary>
            Sets the maximum number of hot buckets for this index.
            </summary>
            <remarks>
            <para>
            When <see cref="P:Splunk.IndexArgs.MaxHotBuckets"/> is exceeded, Splunk rolls the 
            least recently used (LRU) hot bucket to warm. Both normal hot 
            buckets and quarantined hot buckets count towards this total. 
            This setting operates independently of <see cref="P:Splunk.IndexArgs.MaxHotIdleSecs"/>, which can also cause hot buckets to roll.
            </para>
            <para>
            This property's default value is "3". 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.MaxHotIdleSecs">
            <summary>
            Sets the maximum life of a hot bucket, in seconds. 
            </summary>
            <remarks>
            If a hot bucket exceeds this property's value, Splunk rolls
            the bucket to warm. This setting operates independently of <see cref="P:Splunk.IndexArgs.MaxHotBuckets"/>, which can also cause hot buckets to roll.
            <para>
            A value of "0" turns off the idle check, and indicates an
            infinite lifetime.
            </para>
            <para>
            This property's default value is "0". 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.MaxHotSpanSecs">
            <summary>
            Sets the upper bound of target maximum timespan of hot and warm
            buckets for this index, in seconds.
            </summary>
            <remarks>
            <para>
            <b>Note:</b> If you set this property too small, you can get an 
            explosion of hot/warm buckets in the filesystem. The system sets 
            a lower bound implicitly for this parameter at 3600, but this is an 
            advanced parameter that should be set with care and understanding 
            of the characteristics of your data.
            </para>
            <para>
            This property's default value is "7776000" (90 days). 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.MaxMemMB">
            <summary>
            Sets the amount of memory, expressed in megabytes (MB), to 
            allocate for buffering a single tsidx file into memory before 
            flushing to disk. 
            </summary>
            <remarks>
            <para>
            This property's default value ("5") is recommended for all 
            environments.
            </para>
            <para>
            <b>Important:</b> Calculate this number carefully. Setting this 
            number incorrectly may have adverse effects on your system's memory 
            and splunkd stability and performance.
            </para>
            <para>
            This property's default value is "5". 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.MaxMetaEntries">
            <summary>
            Sets the maximum number of unique lines in .data files in a bucket,
            which may help to reduce memory consumption. 
            </summary>
            <remarks>
            <para>
            If set to "0", this setting is ignored (it is treated as
            infinite). 
            </para>
            <para>
            If this property's value is exceeded, a hot bucket is rolled to 
            prevent further increase. If your buckets are rolling due to 
            Strings.data hitting this limit, the culprit may be the punct field 
            in your data. If you don't use punct, it may be best to simply 
            disable this (see props.conf.spec in 
            $SPLUNK_HOME/etc/system/README). There is a small time delta 
            between when maximum is exceeded and bucket is rolled. This means
            a bucket may end up with epsilon more lines than specified, but
            this is not a major concern unless the excess is significant.
            </para>
            <para>
            This property's default value is "1000000". 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.MaxTotalDataSizeMB">
            <summary>
            Sets the maximum size of an index, in megabytes (MB).
            </summary>
            <remarks>
            <para>
            If an index grows larger than the maximum size, the oldest data is
            frozen.
            </para>
            <para>
            This property's default value is "500000".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.MaxTimeUnreplicatedNoAcks">
            <summary>
            Sets the upper limit, in seconds, on how long an event can sit in 
            raw slice. 
            </summary>
            <remarks>
            <para>
            This property applies only if replication is enabled for this 
            index; otherwise it is ignored. 
            </para>
            <para>
            If there are any acknowledged events sharing this raw slice, this
            property does not apply. 
            </para>
            <para>
            This property's highest legal value is "2147483647".
            </para>
            <para>
            To disable this property, set it to "0".
            </para>
            <para>
            <b>Note:</b> This is an advanced property. Understand the 
            consequences before changing it. 
            </para>
            <para>
            This property is available starting in Splunk 5.0. 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.MaxWarmDBCount">
            <summary>
            Sets the maximum number of warm buckets for this index. 
            </summary>
            <remarks>
            <para>
            If this property's value is exceeded, the warm buckets with the 
            lowest value for their latest times are moved to cold.
            </para>
            <para>
            This property's default value is "300".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.MinRawFileSyncSecs">
            <summary>
            Sets how frequently splunkd forces a filesystem sync while 
            compressing journal slices. 
            </summary>
            <remarks>
            <para>
            During the interval specified by this property, uncompressed 
            slices are left on disk even after they are compressed. Then 
            splunkd forces a filesystem sync of the compressed journal and
            removes the accumulated uncompressed files.
            </para>
            <para>
            If this property is set to "0", splunkd forces a filesystem sync 
            after every slice completes compressing. 
            </para>
            <para>
            If this property is set to "disable", syncing is disabled entirely;
            uncompressed slices are removed as soon as compression is complete.
            </para>
            <para>
            <b>Note:</b> Some filesystems are very inefficient at performing
            sync operations, so only enable this if you are sure it is needed.
            </para>
            <para>
            This property's default value is "disable".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.PartialServiceMetaPeriod">
            <summary>
            Gets or sets the frequency, in seconds, at which metadata is  
            partially synced (synced in-place) for this index. 
            </summary>
            <remarks>
            <para>
            If set, this property's value indicates the frequency at which 
            metadata is synchronized, but only for records where the sync can
            be done efficiently in place, without requiring a full rewrite of
            the metadata file. Records that require a full rewrite are 
            synchronized at an interval defined by the <see cref="P:Splunk.IndexArgs.ServiceMetaPeriod"/> property.
            </para>
            <para>
            When this property is set to a value of "0", partial syncing is
            disabled, so metadata is only synced on an interval defined by the
            <see cref="P:Splunk.IndexArgs.ServiceMetaPeriod"/> property.
            </para>
            <para>
            If the value of this property is greater than that of the 
            <see cref="P:Splunk.IndexArgs.ServiceMetaPeriod"/> property, then this property has no
            effect.
            </para>
            <para>
            This property's default value is "0".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.QuarantineFutureSecs">
            <summary>
            Sets the future event-time quarantine for this index. 
            Events that are newer than now plus this value are quarantined.
            </summary>
            <remarks>
            This property's default value is "2592000" (30 days).
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.QuarantinePastSecs">
            <summary>
            Sets the past event-time quarantine for this index. 
            Events that are older than now minus this value are quarantined.
            </summary>
            <remarks>
            This property's default value is "77760000" (900 days).
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.RawChunkSizeBytes">
            <summary>
            Sets the target uncompressed size of individual raw slices 
            in the raw data journal for this index. 
            </summary>
            <remarks>
            <para>
            <b>Warning:</b> This is an advanced property. Only change it if 
            you are instructed to do so by Splunk Support.
            </para>
            <para>
            This property only specifies a target chunk size. The actual chunk
            size may be slightly larger by an amount proportional to an
            individual event size.
            </para>
            <para>
            This property's default value is 131072 (128 kilobytes (KB)).
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.ReplicationFactor">
            <summary>
            Sets the replication factor. 
            </summary>
            <remarks>
            <para>
            Valid values for this property are either a non-negative number
            or the "auto" keyword. 
            </para>
            <para>
            A value of "auto" instructs Splunk to use the value as configured
            with the master. 
            </para>
            <para>
            A value of "0" turns off replication for this index. 
            </para>
            <para>
            This parameter only applies to Splunk clustering slaves. 
            </para>
            <para>
            This property is available starting in Splunk 5.0.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.RotatePeriodInSecs">
            <summary>
            Sets or sets the frequency to check for the need to create a new 
            hot bucket and the need to roll or freeze any warm or cold buckets 
            for this index.
            </summary>
        </member>
        <member name="P:Splunk.IndexArgs.ServiceMetaPeriod">
            <summary>
            Sets the frequency, in seconds, at which metadata is synced to 
            disk for this index.
            </summary>
            <remarks>
            <para>
            You may want to set this to a larger value if the sum of your
            metadata file sizes is larger than many tens of megabytes, to
            avoid the hit on I/O in the indexing fast path.
            </para>
            <para>
            This property's default value is "25".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.SyncMeta">
            <summary>
            Sets a value indicating whether the sync 
            operation is invoked before the file descriptor is closed on 
            metadata updates. 
            </summary>
            <remarks>
            <para>
            This functionality improves integrity of metadata files, especially
            in regards to operating system crashes or machine failures.
            </para>
            <para>
            <b>Warning:</b> This is an advanced parameter. Only change it if
            you are instructed to do so by Splunk Support.
            </para>
            <para>
            This property's default value is true.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.ThawedPath">
            <summary>
            Sets an absolute filesystem path, local to the server, that 
            contains the thawed (resurrected) databases for the index. 
            </summary>
            <remarks>
            <para>
            Be aware that Splunk will not start if an index lacks a 
            valid <see cref="P:Splunk.IndexArgs.ThawedPath"/>. 
            </para>
            <para>
            This property's value may contain shell expansion terms.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.IndexArgs.ThrottleCheckPeriod">
            <summary>
            Sets the frequency at which Splunk checks for an index 
            throttling condition. 
            </summary>
            <remarks>
            <para>
            This property's value should be changed from the default only 
            if instructed by Splunk Support.
            </para>
            <para>
            This property's default value is "15".
            </para>
            </remarks>
        </member>
        <member name="T:Splunk.Input">
            <summary>
            The <see cref="T:Splunk.Input"/> class is the base class from which all specific
            inputs are derived.
            </summary>
        </member>
        <member name="M:Splunk.Input.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Input"/> class.
            </summary>
            <param name="service">The connected service.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Splunk.Input.GetKind">
            <summary>
            Gets the unknown input kind. Must be overridden in sub-classes.
            </summary>
            <returns>The input kind.</returns>
        </member>
        <member name="T:Splunk.InputCollection">
            <summary>
            The <see cref="T:Splunk.InputCollection"/> class represents a collection of 
            inputs. The collection is heterogeneous and each member contains an 
            <see cref="T:Splunk.InputKind"/> value indicating the specific type of 
            input.
            </summary>
            <typeparam name="Input">The Input class and its derived
            classes.</typeparam>
        </member>
        <member name="F:Splunk.InputCollection.inputKinds">
            <summary>
            The dynamic list of input kinds. The list is dynamic to deal with
            modular inputs.
            </summary>
        </member>
        <member name="M:Splunk.InputCollection.#ctor(Splunk.Service)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.InputCollection"/> 
            class.
            </summary>
            <param name="service">The connected service.</param>
        </member>
        <member name="M:Splunk.InputCollection.#ctor(Splunk.Service,Splunk.Args)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.InputCollection"/> 
            class.
            </summary>
            <param name="service">The connected service.</param>
            <param name="args">The parameters.</param>
        </member>
        <member name="M:Splunk.InputCollection.AssembleInputKindList(System.Collections.ArrayList)">
            <summary>
            Assembles the input kind list by refreshing from the server.
            </summary>
            <param name="subPath">The sub path.</param>
            <returns>The list of input kinds.</returns>
        </member>
        <member name="M:Splunk.InputCollection.ContainsKey(System.Object)">
            <summary>
            Returns a value indicating whether this key is in the current
            list of Inputs.
            </summary>
            <param name="key">The name.</param>
            <returns>Whether this key is in the current list of inputs.
            </returns>
        </member>
        <member name="M:Splunk.InputCollection.Create(System.String)">
            <summary>
            Not supported. Creates a stub for a new data input.
            </summary>
            <param name="name">The name.</param>
            <returns>Will not return, but throw an exception.</returns>
        </member>
        <member name="M:Splunk.InputCollection.Create(System.String,Splunk.Args)">
            <summary>
            Not supported. A stub for create.
            </summary>
            <param name="name">The name.</param>
            <param name="args">The args.</param>
            <returns>Will not return, but throw an exception.</returns>
        </member>
        <member name="M:Splunk.InputCollection.Create(System.String,Splunk.InputKind)">
            <summary>
            Creates a new data input based on the input kind.
            </summary>
            <param name="name">The input name.</param>
            <param name="kind">The kind of input to create.</param>
            <returns>The new input object.</returns>
        </member>
        <member name="M:Splunk.InputCollection.Create(System.String,Splunk.InputKind,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Creates a new data input based on the input kind and additional 
            arguments.
            </summary>
            <param name="name">The input name.</param>
            <param name="kind">The kind of input to create.</param>
            <param name="args">The new input object.</param>
            <returns>The new input object.</returns>
        </member>
        <member name="M:Splunk.InputCollection.CreateItem(Splunk.AtomEntry)">
            <summary>
            Creates a new data input based on an Atom entry.
            </summary>
            <param name="entry">The Atom data representing the object.</param>
            <returns>The new input object.</returns>
        </member>
        <member name="M:Splunk.InputCollection.Get(System.Object)">
            <summary>
            Returns an Input from the current list of inputs.
            </summary>
            <param name="key">The key.</param>
            <returns>The input.</returns>
        </member>
        <member name="M:Splunk.InputCollection.Get(System.Object,Splunk.Args)">
            <summary>
            Returns a scoped, namespace-constrained input from the current list
            of inputs.
            </summary>
            <param name="key">The name.</param>
            <param name="splunkNamespace">The namespace.</param>
            <returns>The input.</returns>
        </member>
        <member name="M:Splunk.InputCollection.ItemKind(System.String)">
            <summary>
            Returns the input kind for a given path.
            </summary>
            <param name="path">The path.</param>
            <returns>The input kind.</returns>
        </member>
        <member name="M:Splunk.InputCollection.MatchesInputName(Splunk.InputKind,System.String,System.String)">
            <summary>
            Indicates whether a given string matches the input name (string 
            equality). For scripted inputs, which are listed by their full 
            path, this method compares only the final component of the 
            filename for a match.
            </summary>
            <param name="kind">The input kind.</param>
            <param name="searchFor">What to search for.</param>
            <param name="searchIn">The path to search.</param>
            <returns>Whether the match succeeded or failed.</returns>
        </member>
        <member name="M:Splunk.InputCollection.Refresh">
            <summary>
            Refreshes this input collection.
            </summary>
            <returns>The refreshed input collection.</returns>
        </member>
        <member name="M:Splunk.InputCollection.RefreshInputKinds">
            <summary>
            Refreshes the inputs from the server.
            </summary>
        </member>
        <member name="M:Splunk.InputCollection.Remove(System.String)">
            <summary>
            Removes an input from the collection.
            </summary>
            <param name="key">The name of the input.</param>
            <returns>The input that was removed.</returns>
        </member>
        <member name="M:Splunk.InputCollection.Remove(System.String,Splunk.Args)">
            <summary>
            Removes a scoped, namespace-constrained input from the collection.
            </summary>
            <param name="key">The name of the input.</param>
            <param name="splunkNamespace">The namespace.</param>
            <returns>The input that was removed.</returns>
        </member>
        <member name="M:Splunk.InputCollection.RetrieveInput(System.String)">
            <summary>
            Retrieves the named input from the list, or null if it
            does not exist.
            </summary>
            <param name="key">The name of the input.</param>
            <returns>The retrieved input.</returns>
        </member>
        <member name="M:Splunk.InputCollection.RetrieveInput(System.String,Splunk.Args)">
            <summary>
            Retrieves the named, scoped, and namespace-constrained input from
            the list, or null if it does not exist.
            </summary>
            <param name="key">The name of the input.</param>
            <param name="splunkNamespace">The namespace.</param>
            <returns>The retrieved input.</returns>
        </member>
        <member name="T:Splunk.InputKind">
            <summary>
            The <see cref="T:Splunk.InputKind"/> class represents the set of specific Splunk
            input kinds.
            </summary>
        </member>
        <member name="F:Splunk.InputKind.knownRelativePaths">
            <summary>
            The map of known inputs, also known as relative paths.
            </summary>
        </member>
        <member name="F:Splunk.InputKind.kind">
            <summary>
            The kind of input.
            </summary>
        </member>
        <member name="F:Splunk.InputKind.relpath">
            <summary>
            The relative path from the inputs endpoint.
            </summary>
        </member>
        <member name="F:Splunk.InputKind.inputClass">
            <summary>
            The input class type.
            </summary>
        </member>
        <member name="F:Splunk.InputKind.Unknown">
            <summary>
            The basic, unknown input type.
            </summary>
        </member>
        <member name="F:Splunk.InputKind.Monitor">
            <summary>
            The monitor input.
            </summary>
        </member>
        <member name="F:Splunk.InputKind.Script">
            <summary>
            The script input.
            </summary>
        </member>
        <member name="F:Splunk.InputKind.Tcp">
            <summary>
            The raw TCP input.
            </summary>
        </member>
        <member name="F:Splunk.InputKind.TcpSplunk">
            <summary>
            The cooked TCP input.
            </summary>
        </member>
        <member name="F:Splunk.InputKind.Udp">
            <summary>
            The UDP nput.
            </summary>
        </member>
        <member name="F:Splunk.InputKind.WindowsActiveDirectory">
            <summary>
            The Windows Active Directory input.
            </summary>
        </member>
        <member name="F:Splunk.InputKind.WindowsEventLog">
            <summary>
            The Windows event log input.
            </summary>
        </member>
        <member name="F:Splunk.InputKind.WindowsPerfmon">
            <summary>
            The Windows performance monitor input.
            </summary>
        </member>
        <member name="F:Splunk.InputKind.WindowsRegistry">
            <summary>
            The Windows Registry input.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Splunk.InputKind.WindowsWmi" -->
        <member name="M:Splunk.InputKind.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.InputKind"/> class. 
            </summary>
            <param name="relpath">The relative input path.</param>
            <param name="inputClass">The input class.</param>
        </member>
        <member name="M:Splunk.InputKind.#ctor(System.String,System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.InputKind"/> class. 
            </summary>
            <param name="relpath">The relative input path.</param>
            <param name="inputClass">The input class.</param>
            <param name="kind">The kind.</param>
        </member>
        <member name="M:Splunk.InputKind.Create(System.String)">
            <summary>
            Creates an input.
            </summary>
            <param name="relPath">The relative path.</param>
            <returns>The input kind.</returns>
        </member>
        <member name="P:Splunk.InputKind.Values">
            <summary>
            Gets the IEnumerable list of inputs.
            </summary>
        </member>
        <member name="P:Splunk.InputKind.Kind">
            <summary>
            Gets the kind of this input.
            </summary>
        </member>
        <member name="P:Splunk.InputKind.RelPath">
            <summary>
            Gets the relative path of this input.
            </summary>
        </member>
        <member name="P:Splunk.InputKind.InputClass">
            <summary>
            Gets the class type of this input.
            </summary>
        </member>
        <member name="T:Splunk.ISearchResults">
            <summary>
            The <see cref="T:Splunk.ISearchResults"/> interface represents Splunk search
            results.
            </summary>
        </member>
        <member name="P:Splunk.ISearchResults.IsPreview">
            <summary>
            Gets a value indicating whether the results are
            a preview from an unfinished search.
            </summary>
        </member>
        <member name="P:Splunk.ISearchResults.Fields">
            <summary>
            Gets all the fields that may appear in each result.
            </summary>
            <remarks>
            Be aware that any given result will contain a subset of these 
            fields.
            </remarks>
        </member>
        <member name="T:Splunk.JobArgs">
            <summary>
            The <see cref="T:Splunk.JobArgs"/> class extends <see cref="T:Splunk.Args"/> for <see cref="T:Splunk.Job"/> creation properties.
            </summary>
        </member>
        <member name="P:Splunk.JobArgs.AutoCancel">
            <summary>
            Sets the auto-cancel frequency check, in seconds. 
            </summary>
            <remarks>
            <para>
            Setting this property to "0" indicates never auto-cancel.
            </para>
            <para>
            This property's default value is "0". 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.JobArgs.AutoFinalizeEventCount">
            <summary>
            Sets the auto-finalize counter. 
            </summary>
            <remarks>
            <para>
            When at least these many events have been processed, the
            job is finalized. 
            </para>
            <para>
            Setting this property to "0" indicates there is no limit.
            </para>
            <para>
            This property's default value is "0". 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.JobArgs.AutoPause">
            <summary>
            Sets the auto-pause frequency check, in seconds. 
            </summary>
            <remarks>
            <para>
            Setting this property to "0" indicates never auto-pause.
            </para>
            <para>
            This property's default value is "0". 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.JobArgs.EarliestTime">
            <summary>
            Sets the inclusive earliest time bounds for the search. 
            </summary>
            <remarks>
            Be aware that although this property's value is a time stamp,
            it is left as a string to support Splunk relative time format--
            for instance, "+2d", which specifies two days from now.
            </remarks>
        </member>
        <member name="P:Splunk.JobArgs.EnableLookups">
            <summary>
            Sets a value indicating whether lookups should be applied to
            events.
            </summary>
            <remarks>
            <para>
            Setting this propery to true may slow searches
            significantly, depending on the nature of the lookups.
            </para>
            <para>
            This property's default value is true. 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.JobArgs.ExecutionMode">
            <summary>
            Sets the search execution mode. 
            </summary>
            <remarks>
            This property's valid values are any of the following keywords: 
            "blocking", "oneshot", "normal".
            </remarks>
        </member>
        <member name="P:Splunk.JobArgs.ForceBundleReplication">
            <summary>
            Sets a value indicating whether this search should cause (and
            wait depending on the value of sync_bundle_replication) bundle 
            synchronization with all search peers. 
            </summary>
            <remarks>
            This property's default value is false.
            </remarks>
        </member>
        <member name="P:Splunk.JobArgs.Id">
            <summary>
            Sets the search ID. 
            </summary>
            <remarks>
            If this property is not set, a random ID is generated.
            </remarks>
        </member>
        <member name="P:Splunk.JobArgs.LatestTime">
            <summary>
            Sets the exclusive latest time bounds for the search. 
            </summary>
            <remarks>
            Be aware that although this property's value is a time stamp,
            it is left as a string to support Splunk relative time format--
            for instance, "+2d", which specifies two days from now.
            </remarks>
        </member>
        <member name="P:Splunk.JobArgs.MaxCount">
            <summary>
            Sets the number of events that can be accessible in any given status 
            bucket. 
            </summary>
            <remarks>
            <para>
            When a search is transformed, this property indicates the maximum 
            number of events to store. Specifically, in all calls, 
            <i>codeoffset</i> + <i>count</i> &lt;= max_count. 
            </para>
            <para>
            This property's default value is "1000". 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.JobArgs.Now">
            <summary>
            Sets the absolute time for any relative time specifier in the 
            search. 
            </summary>
            <remarks>
            <para>
            Be aware that although this property's value is a time stamp,
            it is left as a string to support Splunk relative time format--
            for instance, "+2d", which specifies two days from now.
            </para>
            <para>
            This property's default value is the current system time. 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.JobArgs.ReduceFreq">
            <summary>
            Sets the MapReduce reduce phase on accumulated map values frequency,
            in seconds.
            </summary>
        </member>
        <member name="P:Splunk.JobArgs.ReloadMacros">
            <summary>
            Sets a value indicating whether to reload macro definitions from
            macros.conf. 
            </summary>
            <remarks>
            This property's default value is true.
            </remarks>
        </member>
        <member name="P:Splunk.JobArgs.RemoteServerList">
            <summary>
            Sets a list of (possibly wildcarded) servers from which to pull 
            raw events. 
            </summary>
            <remarks>
            This same server list is used in subsearches.
            </remarks>
        </member>
        <member name="P:Splunk.JobArgs.Rf">
            <summary>
            Sets the list of required fields returned in the search.
            </summary>
        </member>
        <member name="P:Splunk.JobArgs.RtBlocking">
            <summary>
            Sets a value indicating whether the indexer blocks if the queue
            for this search is full. 
            </summary>
            <remarks>
            <para>
            This property only applies to real-time searches.
            </para>
            <para>
            This property's default value is false.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.JobArgs.RtIndexfilter">
            <summary>
            Sets a value indicating whether the indexer prefilters the
            events. 
            </summary>
            <remarks>
            <para>
            This property only applies to real-time searches.
            </para>
            <para>
            This property's default value is false.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.JobArgs.RtMaxblockSeconds">
            <summary>
            Sets the maximum time to block, in seconds. 
            </summary>
            <remarks>
            <para>
            This property only applies to real-time searches when the 
            <see cref="P:Splunk.JobArgs.RtBlocking"/> property is set to true.
            </para>
            <para>
            This property's default value is "60".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.JobArgs.RtQueueSize">
            <summary>
            Sets the queue size, in number of events, the indexer should use for
            this search. 
            </summary>
            <para>
            This property only applies to real-time searches.
            </para>
            <para>
            This property's default value is "10000".
            </para>
        </member>
        <member name="P:Splunk.JobArgs.SearchListener">
            <summary>
            Sets a search state listener with the search. 
            </summary>
            <remarks>
            The format of this string is:
            <para>
            search_state;results_condition;http_method;uri;
            </para>
            For example:
            <c>"onResults;true;POST;/servicesNS/admin/search/saved/search/foobar/notify;"</c>
            </remarks>
        </member>
        <member name="P:Splunk.JobArgs.SearchMode">
            <summary>
            Sets the search mode.
            </summary>
        </member>
        <member name="P:Splunk.JobArgs.SpawnProcess">
            <summary>
            Sets a value indicating whether the search should run in a
            separate spawned process. 
            </summary>
            <remarks>
            <para>
            Be aware that searches against indexes must run in a separate process.
            </para>
            <para>
            This property's default value is true.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.JobArgs.StatusBuckets">
            <summary>
            Sets the maximum number of buckets to create.
            </summary>
            <remarks>
            <para>
            Setting this property to "0" causes no timeline information to be
            generated.
            </para>
            <para>
            This property's default value is "0".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.JobArgs.SyncBundleReplication">
            <summary>
            Sets a value indicating whether this search should wait for
            bundle replication to complete.
            </summary>
        </member>
        <member name="P:Splunk.JobArgs.TimeFormat">
            <summary>
            Sets the time format string, used to convert a formatted time string 
            from {start,end}_time into UTC seconds. 
            </summary>
            <remarks>
            This property's default value is "ISO-8601".
            </remarks>
        </member>
        <member name="P:Splunk.JobArgs.Timeout">
            <summary>
            Sets the number of seconds to keep this search after processing has 
            stopped. 
            </summary>
            <remarks>
            This property's default value is "86400" (24 hours).
            </remarks>
        </member>
        <member name="T:Splunk.JobArgs.ExecutionModeEnum">
            <summary>
            Specifies how to create a job using the 
            <see cref="M:Splunk.JobCollection.Create(System.String,Splunk.JobArgs)"/>
            method.       
            </summary>
        </member>
        <member name="F:Splunk.JobArgs.ExecutionModeEnum.Normal">
            <summary>
            Runs a search asynchronously and returns a search job immediately.
            </summary>
        </member>
        <member name="F:Splunk.JobArgs.ExecutionModeEnum.Blocking">
            <summary>
            Runs a search synchronously and does not return a search job until 
            the search has finished.
            </summary>
        </member>
        <member name="F:Splunk.JobArgs.ExecutionModeEnum.Oneshot">
            <summary>
            Runs a blocking search that is scheduled to run immediately, and then 
            returns the results of the search once completed. 
            </summary>
        </member>
        <member name="T:Splunk.JobArgs.SearchModeEnum">
            <summary>
            Specifies how to create a job using the 
            <see cref="M:Splunk.JobCollection.Create(System.String,Splunk.JobArgs)"/>
            method.       
            </summary>
        </member>
        <member name="F:Splunk.JobArgs.SearchModeEnum.Normal">
            <summary>
            Searches historical data.
            </summary>
        </member>
        <member name="F:Splunk.JobArgs.SearchModeEnum.Realtime">
            <summary>
            <para>
            Searches live data. A realtime search may also be specified by 
            setting the <see cref="P:Splunk.JobArgs.EarliestTime"/> and <see cref="P:Splunk.JobArgs.LatestTime"/> properties to begin with "rt", even if the 
            <see cref="P:Splunk.JobArgs.SearchMode"/> is set to "normal" or is not set. 
            </para>
            <para>
            If both the <see cref="P:Splunk.JobArgs.EarliestTime"/> and <see cref="P:Splunk.JobArgs.LatestTime"/> properties are set to "rt", the search
            represents all appropriate live data that was received since 
            the start of the search.
            </para>
            <para>
            If both the <see cref="P:Splunk.JobArgs.EarliestTime"/> and <see cref="P:Splunk.JobArgs.LatestTime"/> properties are set to "rt" followed by a
            relative time specifier, a sliding window is used where the 
            time bounds of the window are determined by the relative 
            time specifiers and are continuously updated based on current 
            time.   
            </para>         
            </summary>
        </member>
        <member name="T:Splunk.JobEventsArgs">
            <summary>
            The <see cref="T:Splunk.JobEventsArgs"/> class contains arguments for 
            getting job results using the <see cref="M:Splunk.Job.Events(Splunk.JobEventsArgs)"/>
            method.
            </summary>
        </member>
        <member name="P:Splunk.JobEventsArgs.Count">
            <summary>
            Sets the maximum number of results to return.  
            </summary>
            <remarks>
            <para>
            To return all available results, set this property to "0".
            </para>
            <para>
            This property's default value is "100".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.JobEventsArgs.EarliestTime">
            <summary>
            Sets the earliest time in the time range to search. 
            </summary>
            <remarks>
            <para>
            This property's value is a time string. The time string can be a 
            UTC time (with fractional seconds), a relative time specifier (to
            now), or a formatted time string.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.JobEventsArgs.FieldList">
            <summary>
            Sets a list of fields to return for the event set.
            </summary>
        </member>
        <member name="P:Splunk.JobEventsArgs.LatestTime">
            <summary>
            Sets the latest time in the time range to search. 
            </summary>
            <remarks>
            <para>
            This property's value is a time string. The time string can be a UTC
            time (with fractional seconds), a relative time specifier (to now),
            or a formatted time string.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.JobEventsArgs.MaximumLines">
            <summary>
            Sets the maximum number of lines that any single event's 
            <b>_raw</b> field should contain.
            </summary>
        </member>
        <member name="P:Splunk.JobEventsArgs.Offset">
            <summary>
            Sets the index of the first result (inclusive) from which to begin
            returning data. This value is 0-indexed.
            </summary>
            <remarks>
            <para>
            Starting in Splunk 4.1, negative offsets are allowed and are added 
            to the count to compute the absolute offset (for example, offset=-1 
            is the last available offset). Offsets in the results are always 
            absolute and never negative. 
            </para>
            <para>
            This property's default value is "0".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.JobEventsArgs.OutputMode">
            <summary>
            Sets the format of the output.
            </summary>
        </member>
        <member name="P:Splunk.JobEventsArgs.OutputTimeFormat">
            <summary>
            Sets a UTC time format.
            </summary>
        </member>
        <member name="P:Splunk.JobEventsArgs.Search">
            <summary>
            Sets the post-processing search to apply to results.
            </summary>
        </member>
        <member name="P:Splunk.JobEventsArgs.Segmentation">
            <summary>
            Sets the type of segmentation to perform on the data, including
            an option to perform key/value segmentation.
            </summary>
        </member>
        <member name="P:Splunk.JobEventsArgs.TimeFormat">
            <summary>
            Sets an expression to convert a formatted time string from 
            {start,end}_time into UTC seconds. 
            The default format is "%m/%d/%Y:%H:%M:%S".
            </summary>
        </member>
        <member name="P:Splunk.JobEventsArgs.TruncationMode">
            <summary>
            Sets how to truncate lines to achieve the value in <see cref="P:Splunk.JobEventsArgs.MaximumLines"/>.
            </summary>
        </member>
        <member name="T:Splunk.JobEventsArgs.OutputModeEnum">
            <summary>
            Specifies the format for the returned output.
            </summary>
        </member>
        <member name="F:Splunk.JobEventsArgs.OutputModeEnum.Atom">
            <summary>
            Returns output in Atom format.
            </summary>
        </member>
        <member name="F:Splunk.JobEventsArgs.OutputModeEnum.Csv">
            <summary>
            Returns output in CSV format.
            </summary>
        </member>
        <member name="F:Splunk.JobEventsArgs.OutputModeEnum.Json">
            <summary>
            Returns output in JSON format.
            </summary>
        </member>
        <member name="F:Splunk.JobEventsArgs.OutputModeEnum.JsonColumns">
            <summary>
            Returns output in JSON_COLS format.
            </summary>
        </member>
        <member name="F:Splunk.JobEventsArgs.OutputModeEnum.JsonRows">
            <summary>
            Returns output in JSON_ROWS format.
            </summary>
        </member>
        <member name="F:Splunk.JobEventsArgs.OutputModeEnum.Raw">
            <summary>
            Returns output in raw format.
            </summary>
        </member>
        <member name="F:Splunk.JobEventsArgs.OutputModeEnum.Xml">
            <summary>
            Returns output in XML format.
            </summary>
        </member>
        <member name="T:Splunk.JobEventsArgs.TruncationModeEnum">
            <summary>
            Specifies how to truncate lines to achieve the value in 
            <see cref="P:Splunk.JobEventsArgs.MaximumLines"/>
            </summary>
        </member>
        <member name="F:Splunk.JobEventsArgs.TruncationModeEnum.Abstract">
            <summary>
            Use the "abstract" truncation mode.
            </summary>
        </member>
        <member name="F:Splunk.JobEventsArgs.TruncationModeEnum.Truncate">
            <summary>
            Use the "truncate" truncation mode.
            </summary>
        </member>
        <member name="T:Splunk.JobExportArgs">
            <summary>
            The <see cref="T:Splunk.JobExportArgs"/> class contains arguments for getting results
            using the <see cref="M:Splunk.Service.Export(System.String,Splunk.JobExportArgs)"/> class.
            </summary>
        </member>
        <member name="P:Splunk.JobExportArgs.IndexEarliest">
            <summary>
            Sets the earliest time in the time range to search, based on the index time. 
            </summary>
            <remarks>
            <para>
            This property's value is a time string. The time string can be a UTC
            time (with fractional seconds), a relative time specifier (to now),
            or a formatted time string.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.JobExportArgs.IndexLatest">
            <summary>
            Sets the latest time in the time range to search, based on the index time. 
            </summary>
            <remarks>
            <para>
            This property's value is a time string. The time string can be a UTC
            time (with fractional seconds), a relative time specifier (to now),
            or a formatted time string.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.JobExportArgs.OutputMode">
            <summary>
            Sets the format of the output.
            </summary>
        </member>
        <member name="P:Splunk.JobExportArgs.AutoCancel">
            <summary>
            Sets the number of seconds of inactivity after which to 
            automatically cancel a job. 
            </summary>
        </member>
        <member name="P:Splunk.JobExportArgs.AutoFinalizeEventCount">
            <summary>
            Sets the number of events to process after which to auto-finalize the search. 
            </summary>
            <remarks>
            Setting this property to "0" indicates there is no limit.
            </remarks>
        </member>
        <member name="P:Splunk.JobExportArgs.AutoPause">
            <summary>
            Sets the number of seconds of inactivity after which to automatically pause a job. 
            </summary>
            <remarks>
            Setting this property to "0" indicates never auto-pause.
            </remarks>
        </member>
        <member name="P:Splunk.JobExportArgs.EarliestTime">
            <summary>
            Sets the earliest time in the time range to search. 
            </summary>
            <remarks>
            <para>
            This property's value is a time string. The time string can be a UTC
            time (with fractional seconds), a relative time specifier (to now),
            or a formatted time string.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.JobExportArgs.EnableLookups">
            <summary>
            Sets a value indicating whether to enable lookups for this search. 
            </summary>
            <remarks>
            Enabling lookups might slow searches significantly depending
            on the nature of the lookups.
            </remarks>
        </member>
        <member name="P:Splunk.JobExportArgs.ForceBundleReplication">
            <summary>
            Sets a value indicating whether this search should cause 
            (and wait depending on the value of <see cref="P:Splunk.JobExportArgs.SynchronizeBundleReplication"/>)
            bundle synchronization with all search peers.
            </summary>
        </member>
        <member name="P:Splunk.JobExportArgs.LatestTime">
            <summary>
            Specifies the latest time in the time range to search. 
            </summary>
            <remarks>
            <para>
            This property's value is a time string. The time string can be a UTC
            time (with fractional seconds), a relative time specifier (to now),
            or a formatted time string.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.JobExportArgs.MaximumTime">
            <summary>
            Sets the number of seconds to run this search before finalizing. 
            </summary>
            <remarks>
            Setting this property to "0" indicates never finalize.
            </remarks>
        </member>
        <member name="P:Splunk.JobExportArgs.Namespace">
            <summary>
            Sets the application namespace in which to restrict searches.
            </summary>
        </member>
        <member name="P:Splunk.JobExportArgs.Now">
            <summary>
            Specifies a time string that sets the absolute time used for any relative
            time specifier in the search. 
            </summary>
            <remarks>
            <para> 
            You can specify a relative time modifier for this property. 
            For example, specify +2d to specify the current time plus two days. 
            If you specify a relative time modifier both in this parameter and in 
            the search string, the search string modifier takes precedence.
            </para>
            <para>
            For information about relative time modifiers, see 
            <a href="http://docs.splunk.com/Documentation/Splunk/latest/SearchReference/SearchTimeModifiers" target="_blank">Time
            modifiers for search</a> in the Search Reference.
            </para>
            <para>
            This property's default value is the current system time.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.JobExportArgs.ReduceFrequency">
            <summary>
            Sets the time to wait between running the MapReduce phase on accumulated
            map values.
            </summary>
        </member>
        <member name="P:Splunk.JobExportArgs.ReloadMacros">
            <summary>
            Sets a value indicating whether to reload macro definitions from the
            macros.conf configuration file.
            </summary>
        </member>
        <member name="P:Splunk.JobExportArgs.RemoteServerList">
            <summary>
            Sets a list of (possibly wildcarded) servers from which to pull raw events. 
            </summary>
            <remarks>
            This same server list is used in subsearches.
            </remarks>
        </member>
        <member name="P:Splunk.JobExportArgs.RequiredFieldList">
            <summary>
            Sets one or more required fields to the search. 
            </summary>
            <remarks>
            These fields, even if not referenced or used directly by the search, 
            are still included by the events and summary endpoints. Splunk Web 
            uses these fields to prepopulate panels in the Search view.
            </remarks>
        </member>
        <member name="P:Splunk.JobExportArgs.RealtimeBlocking">
            <summary>
            Sets a value indicating whether the indexer blocks if the queue for
            this search is full. 
            </summary>
            <remarks>
            This property only applies to real-time searches.
            </remarks>
        </member>
        <member name="P:Splunk.JobExportArgs.RealtimeIndexFilter">
            <summary>
            Sets a value indicating whether the indexer pre-filters events. 
            </summary>
            <remarks>
            This property only applies to real-time searches.
            </remarks>
        </member>
        <member name="P:Splunk.JobExportArgs.RealtimeMaximumBlockSeconds">
            <summary>
            Sets the number of seconds indicating the maximum time to block. 
            </summary>
            <remarks>
            Setting this property to "0" indicates no limit. 
            For real-time searches with the <see cref="P:Splunk.JobExportArgs.RealtimeBlocking"/> 
            property set to true.
            </remarks>
        </member>
        <member name="P:Splunk.JobExportArgs.RealtimeQueueSize">
            <summary>
            Sets the queue size (in events) that the indexer should use for this search. 
            </summary>
            <remarks>
            This property only applies to real-time searches.
            </remarks>
        </member>
        <member name="P:Splunk.JobExportArgs.SearchListener">
            <summary>
            Sets a string that registers a search state listener with the search. 
            </summary>
            <remarks>
            <para>
            Use the format: 
            <code>
            search_state;results_condition;http_method;uri;
            </code>
            </para>
            <para>
            For example:
            <code>
            search_listener=onResults;true;POST;/servicesNS/admin/search/saved/search/foobar/notify;
            </code> 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.JobExportArgs.SearchMode">
            <summary>
            Sets the search mode ("normal" or "realtime").
            </summary>
        </member>
        <member name="P:Splunk.JobExportArgs.SynchronizeBundleReplication">
            <summary>
            Sets a value indicating whether this search should wait for bundle 
            replication to complete.
            </summary>
        </member>
        <member name="P:Splunk.JobExportArgs.TimeFormat">
            <summary>
            Sets the format for converting a formatted time string from {start,end}_time 
            into UTC seconds. 
            </summary>
            <remarks>
            This property's default value is "ISO-8601".
            </remarks>
        </member>
        <member name="P:Splunk.JobExportArgs.Timeout">
            <summary>
            Sets the number of seconds to keep this search after processing has stopped.
            </summary>
        </member>
        <member name="P:Splunk.JobExportArgs.MaximumLines">
            <summary>
            Sets the maximum number of lines that any single event's <b>_raw</b> field 
            should contain.
            </summary>
        </member>
        <member name="P:Splunk.JobExportArgs.OutputTimeFormat">
            <summary>
            Sets a UTC time format.
            </summary>
        </member>
        <member name="P:Splunk.JobExportArgs.Segmentation">
            <summary>
            Sets the type of segmentation to perform on the data, 
            including an option to perform key/value segmentation.
            </summary>
        </member>
        <member name="P:Splunk.JobExportArgs.TruncationMode">
            <summary>
            Sets a value indicating how to truncate lines to achieve the 
            value in <see cref="P:Splunk.JobExportArgs.MaximumLines"/>
            </summary>
        </member>
        <member name="T:Splunk.JobExportArgs.OutputModeEnum">
            <summary>
            Specifies the format for the returned output.
            </summary>
        </member>
        <member name="F:Splunk.JobExportArgs.OutputModeEnum.Atom">
            <summary>
            Returns output in Atom format.
            </summary>
        </member>
        <member name="F:Splunk.JobExportArgs.OutputModeEnum.Csv">
            <summary>
            Returns output in CSV format.
            </summary>
        </member>
        <member name="F:Splunk.JobExportArgs.OutputModeEnum.Json">
            <summary>
            Returns output in JSON format.
            </summary>
        </member>
        <member name="F:Splunk.JobExportArgs.OutputModeEnum.JsonColumns">
            <summary>
            Returns output in JSON_COLS format.
            </summary>
        </member>
        <member name="F:Splunk.JobExportArgs.OutputModeEnum.JsonRows">
            <summary>
            Returns output in JSON_ROWS format.
            </summary>
        </member>
        <member name="F:Splunk.JobExportArgs.OutputModeEnum.Raw">
            <summary>
            Returns output in raw format.
            </summary>
        </member>
        <member name="F:Splunk.JobExportArgs.OutputModeEnum.Xml">
            <summary>
            Returns output in XML format.
            </summary>
        </member>
        <member name="T:Splunk.JobExportArgs.SearchModeEnum">
            <summary>
            Specifies how to create a job using the <see cref="M:Splunk.JobCollection.Create(System.String,Splunk.JobArgs)"/>
            method.       
            </summary>
        </member>
        <member name="F:Splunk.JobExportArgs.SearchModeEnum.Normal">
            <summary>
            Searches historical data.
            </summary>
        </member>
        <member name="F:Splunk.JobExportArgs.SearchModeEnum.Realtime">
            <summary>
            Searches live data. A real-time search may also be specified by 
            setting the "earliest_time" and "latest_time" parameters to begin 
            with "rt", even if the search_mode is set to "normal" or is not set. 
            <para>
            If both the "earliest_time" and "latest_time" parameters are set to 
            "rt", the search represents all appropriate live data that was 
            received since the start of the search.
            </para>
            <para>
            If both the "earliest_time" and "latest_time" parameters are set to 
            "rt" followed by a relative time specifier, a sliding window is used 
            where the time bounds of the window are determined by the relative 
            time specifiers and are continuously updated based on current time.   
            </para>         
            </summary>
        </member>
        <member name="T:Splunk.JobExportArgs.TruncationModeEnum">
            <summary>
            Specifies how to truncate lines to achieve the value in 
            <see cref="P:Splunk.JobExportArgs.MaximumLines"/>
            </summary>
        </member>
        <member name="F:Splunk.JobExportArgs.TruncationModeEnum.Abstract">
            <summary>
            Use the "abstract" truncation mode.
            </summary>
        </member>
        <member name="F:Splunk.JobExportArgs.TruncationModeEnum.Truncate">
            <summary>
            Use the "truncate" truncation mode.
            </summary>
        </member>
        <member name="T:Splunk.JobResultsArgs">
            <summary>
            The <see cref="T:Splunk.JobResultsArgs"/> class contains arguments for getting
            job results using the <see cref="T:Splunk.Job"/> class.
            </summary>
        </member>
        <member name="P:Splunk.JobResultsArgs.Count">
            <summary>
            Sets the maximum number of results to return.
            </summary>
        </member>
        <member name="P:Splunk.JobResultsArgs.FieldList">
            <summary>
            Sets a list of fields to return for the event set.
            </summary>
        </member>
        <member name="P:Splunk.JobResultsArgs.Offset">
            <summary>
            Specifies the index of the first result (inclusive) from which to begin returning 
            data. This value is 0-indexed.
            </summary>
            <remarks>
            <para>
            Starting in Splunk 4.1, negative offsets are allowed and are added to the count to 
            compute the absolute offset (for example, offset=-1 is the last available 
            offset). Offsets in the results are always absolute and never negative. 
            </para>
            <para>
            This property's default value is "0".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.JobResultsArgs.OutputMode">
            <summary>
            Sets the format of the output.
            </summary>
        </member>
        <member name="P:Splunk.JobResultsArgs.Search">
            <summary>
            Sets the post-processing search to apply to results.
            </summary>
        </member>
        <member name="T:Splunk.JobResultsArgs.OutputModeEnum">
            <summary>
            Specifies the format for the returned output.
            </summary>
        </member>
        <member name="F:Splunk.JobResultsArgs.OutputModeEnum.Atom">
            <summary>
            Returns output in Atom format.
            </summary>
        </member>
        <member name="F:Splunk.JobResultsArgs.OutputModeEnum.Csv">
            <summary>
            Returns output in CSV format.
            </summary>
        </member>
        <member name="F:Splunk.JobResultsArgs.OutputModeEnum.Json">
            <summary>
            Returns output in JSON format.
            </summary>
        </member>
        <member name="F:Splunk.JobResultsArgs.OutputModeEnum.JsonColumns">
            <summary>
            Returns output in JSON_COLS format.
            </summary>
        </member>
        <member name="F:Splunk.JobResultsArgs.OutputModeEnum.JsonRows">
            <summary>
            Returns output in JSON_ROWS format.
            </summary>
        </member>
        <member name="F:Splunk.JobResultsArgs.OutputModeEnum.Raw">
            <summary>
            Returns output in raw format.
            </summary>
        </member>
        <member name="F:Splunk.JobResultsArgs.OutputModeEnum.Xml">
            <summary>
            Returns output in XML format.
            </summary>
        </member>
        <member name="T:Splunk.JobResultsPreviewArgs">
            <summary>
            The <see cref="T:Splunk.JobResultsPreviewArgs"/> class contains arguments for
            getting a job results preview using the <see cref="T:Splunk.Job"/> class.
            </summary>
        </member>
        <member name="P:Splunk.JobResultsPreviewArgs.Count">
            <summary>
            Sets the maximum number of results to return.
            </summary>
        </member>
        <member name="P:Splunk.JobResultsPreviewArgs.FieldList">
            <summary>
            Sets a list of fields to return for the event set.
            </summary>
        </member>
        <member name="P:Splunk.JobResultsPreviewArgs.Offset">
            <summary>
            Specifies the index of the first result (inclusive) from which to begin returning 
            data. This value is 0-indexed.
            </summary>
            <remarks>
            <para>
            Starting in Splunk 4.1, negative offsets are allowed and are added to the count to 
            compute the absolute offset (for example, offset=-1 is the last available 
            offset). Offsets in the results are always absolute and never negative. 
            </para>
            <para>
            This property's default value is "0".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.JobResultsPreviewArgs.OutputMode">
            <summary>
            Sets the format of the output.
            </summary>
        </member>
        <member name="P:Splunk.JobResultsPreviewArgs.Search">
            <summary>
            Sets the post-processing search to apply to results.
            </summary>
        </member>
        <member name="T:Splunk.JobResultsPreviewArgs.OutputModeEnum">
            <summary>
            Specifies the format for the returned output.
            </summary>
        </member>
        <member name="F:Splunk.JobResultsPreviewArgs.OutputModeEnum.Atom">
            <summary>
            Returns output in Atom format.
            </summary>
        </member>
        <member name="F:Splunk.JobResultsPreviewArgs.OutputModeEnum.Csv">
            <summary>
            Returns output in CSV format.
            </summary>
        </member>
        <member name="F:Splunk.JobResultsPreviewArgs.OutputModeEnum.Json">
            <summary>
            Returns output in JSON format.
            </summary>
        </member>
        <member name="F:Splunk.JobResultsPreviewArgs.OutputModeEnum.JsonColumns">
            <summary>
            Returns output in JSON_COLS format.
            </summary>
        </member>
        <member name="F:Splunk.JobResultsPreviewArgs.OutputModeEnum.JsonRows">
            <summary>
            Returns output in JSON_ROWS format.
            </summary>
        </member>
        <member name="F:Splunk.JobResultsPreviewArgs.OutputModeEnum.Raw">
            <summary>
            Returns output in raw format.
            </summary>
        </member>
        <member name="F:Splunk.JobResultsPreviewArgs.OutputModeEnum.Xml">
            <summary>
            Returns output in XML format.
            </summary>
        </member>
        <member name="T:Splunk.Logger">
            <summary>
            The <see cref="T:Splunk.Logger"/> class represents a specific Splunkd logging 
            category.
            </summary>
        </member>
        <member name="M:Splunk.Logger.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Logger"/> class.
            </summary>
            <param name="service">The service.</param>
            <param name="path">The path.</param>
        </member>
        <member name="P:Splunk.Logger.Level">
            <summary>
            Gets or sets the logging level of this logger. 
            </summary>
            <remarks>
            This property's valid values are:
            <list type="bullet">
            <item>"FATAL"</item>
            <item>"CRIT" (versions of Splunk prior to 4.3.4 only)</item>
            <item>"WARN"</item>
            <item>"INFO"</item>
            <item>"DEBUG"</item>
            </list>
            </remarks>
        </member>
        <member name="T:Splunk.Message">
            <summary>
            The <see cref="T:Splunk.Message"/> class represents a Splunk message.
            </summary>
        </member>
        <member name="M:Splunk.Message.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Message"/> class.
            </summary>
            <param name="service">The service</param>
            <param name="path">The path</param>
        </member>
        <member name="P:Splunk.Message.Key">
            <summary>
            Gets the key of this message, which is also the title.
            </summary>
        </member>
        <member name="P:Splunk.Message.Value">
            <summary>
            Gets the value of this message, based on the key.
            </summary>
        </member>
        <member name="T:Splunk.MessageArgs">
            <summary>
            The <see cref="T:Splunk.MessageArgs"/> class extends <see cref="T:Splunk.Args"/> for
            <see cref="T:Splunk.Message"/> creation properties.
            </summary>
        </member>
        <member name="P:Splunk.MessageArgs.Value">
            <summary>
            Sets the value of the message.
            </summary>
        </member>
        <member name="T:Splunk.MessageCollection">
            <summary>
            The <see cref="T:Splunk.MessageCollection"/> class represents a collection of
            <see cref="T:Splunk.Message"/>s.
            </summary>
        </member>
        <member name="M:Splunk.MessageCollection.#ctor(Splunk.Service)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.MessageCollection"/> 
            class.
            </summary>
            <param name="service">The service</param>
        </member>
        <member name="M:Splunk.MessageCollection.#ctor(Splunk.Service,Splunk.Args)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.MessageCollection"/> 
            class.
            </summary>
            <param name="service">The service</param>
            <param name="args">The optional arguments</param>
        </member>
        <member name="M:Splunk.MessageCollection.Create(System.String,System.String)">
            <summary>
            Creates a new message.
            </summary>
            <param name="name">The key name.</param>
            <param name="value">The value.</param>
            <returns>The new message.</returns>
        </member>
        <member name="T:Splunk.ModularInputs.DataType">
            <summary>
            Enumeration of the valid values for the Endpoint Argument data type.
            </summary>
        </member>
        <member name="F:Splunk.ModularInputs.DataType.Boolean">
            <summary>
            A Boolean value: true or false
            </summary>
        </member>
        <member name="F:Splunk.ModularInputs.DataType.Number">
            <summary>
            A numeric value: regexp = [0-9\.]+
            </summary>
        </member>
        <member name="F:Splunk.ModularInputs.DataType.String">
            <summary>
            A string: virtually everything else
            </summary>
        </member>
        <member name="T:Splunk.ModularInputs.Argument">
            <summary>
            The <see cref="T:Splunk.ModularInputs.Argument"/> class represents an XML entity describing
            an individual argument of a modular input.
            </summary>
            <remarks>
            It corresponds to one of the keys that can be defined for an instance
            of that modular input in a stanza in inputs.conf.
            </remarks>
        </member>
        <member name="M:Splunk.ModularInputs.Argument.#ctor">
            <summary>
            Initializes a new, empty instance of the <see cref="T:Splunk.ModularInputs.Argument"/>
            class.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.Argument.Name">
            <summary>
            The unique name for the parameter.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.Argument.Title">
            <summary>
            The label for the parameter.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.Argument.Description">
            <summary>
            The description of the parameter.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.Argument.Validation">
            <summary>
            The validation rules for arguments passed to an endpoint
            create or edit action.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.Argument.DataType">
            <summary>
            The value for use with scripts that return data in JSON format.
            </summary>
            <remarks>
            <para>
            This property defines the data type of the parameter.  
            </para>
            <para>
            The default data type is "string".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.ModularInputs.Argument.RequiredOnEdit">
            <summary>
            A value indicating whether the parameter is required for edit.
            </summary>
            <remarks>
            <para>
            Set this property to true to make the parameter required for edit.
            </para>
            <para>
            This property's default value is false.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.ModularInputs.Argument.RequiredOnCreate">
            <summary>
            A value indicating whether the parameter is required for create.
            </summary>
            <remarks>
            <para>
            Set this property to false to make the parameter optional.
            </para>
            <para>
            This property's default value is true.
            </para>
            </remarks>
        </member>
        <member name="T:Splunk.ModularInputs.ConfigurationItem">
            <summary>
            The <see cref="T:Splunk.ModularInputs.ConfigurationItem"/> class represents input
            configuration items that Splunk sends to modular inputs to start
            event streaming.
            </summary>
        </member>
        <member name="T:Splunk.ModularInputs.ConfigurationItemBase">
            <summary>
            The <see cref="T:Splunk.ModularInputs.ConfigurationItemBase"/> class is the base class for
            input definition that Splunk sends to modular input to start event
            streaming.
            </summary>
        </member>
        <member name="F:Splunk.ModularInputs.ConfigurationItemBase.parameters">
            <summary>
            Parameter in the input definition item.
            </summary>
        </member>
        <member name="F:Splunk.ModularInputs.ConfigurationItemBase.singleValueParameters">
            <summary>
            Single value parameters keyed 
            by name in the input definition item.
            </summary>
        </member>
        <member name="M:Splunk.ModularInputs.ConfigurationItemBase.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Splunk.ModularInputs.ConfigurationItemBase"/> class.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.ConfigurationItemBase.Name">
            <summary>
            The name of this item.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.ConfigurationItemBase.SingleValueParameterXmlElements">
            <summary>
            The list of parameters for defining this item.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.ConfigurationItemBase.MultiValueParameterXmlElements">
            <summary>
            The list of multi value parameters for defining this stanza.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.ConfigurationItemBase.SingleValueParameters">
            <summary>
            Single value parameters keyed by name in the item.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.ConfigurationItemBase.Parameters">
            <summary>
            Parameters keyed by name in the item.
            </summary>
        </member>
        <member name="T:Splunk.ModularInputs.EventElement">
            <summary>
            The <see cref="T:Splunk.ModularInputs.EventElement"/> class represents an event element
            for XML event streaming.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.EventElement.Data">
            <summary>
            Event data.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.EventElement.Source">
            <summary>
            The event source.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.EventElement.SourceType">
            <summary>
            The source type.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.EventElement.Index">
            <summary>
            The index.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.EventElement.Host">
            <summary>
            The host.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.EventElement.Time">
            <summary>
            The timestamp of the event.
            </summary>
            <remarks>
            If this property is null, Splunk will generate a timestamp
            according to current time, or in case of "unbroken" event, the
            timestamp supplied earlier for the event will be used.
            </remarks>
        </member>
        <member name="P:Splunk.ModularInputs.EventElement.Done">
            <summary>
            A value indicating whether the event stream has
            completed a set of events and can be flushed.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.EventElement.Unbroken">
            <summary>
            A value indicating whether the element contains
            only a part of an event or multiple events. 
            </summary>
            <remarks>
            If this property is false, the element represents a single, 
            whole event.
            </remarks>
        </member>
        <member name="P:Splunk.ModularInputs.EventElement.Stanza">
            <summary>
            The name of the stanza of the input this event belongs to.
            </summary>
        </member>
        <member name="T:Splunk.ModularInputs.EventStreamWriter">
            <summary>
            The <see cref="T:Splunk.ModularInputs.EventStreamWriter"/> class writes an event to stdout
            using the XML streaming mode.
            </summary>
        </member>
        <member name="F:Splunk.ModularInputs.EventStreamWriter.xmlWriter">
            <summary>
            Used to write XML to stdout.
            </summary>
        </member>
        <member name="M:Splunk.ModularInputs.EventStreamWriter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.ModularInputs.EventStreamWriter"/>
            class.
            </summary>
        </member>
        <member name="M:Splunk.ModularInputs.EventStreamWriter.Dispose">
            <summary>
            Writes the last end tag and releases resources.
            </summary>
        </member>
        <member name="M:Splunk.ModularInputs.EventStreamWriter.Write(Splunk.ModularInputs.EventElement)">
            <summary>
            Writes the event element.
            </summary>
            <param name="eventElement">An event element.</param>
        </member>
        <member name="M:Splunk.ModularInputs.EventStreamWriter.WriteElementIfNotNull(System.String,System.String)">
            <summary>
            Writes the element if its content is not null.
            </summary>
            <param name="content">Content of the element.</param>
            <param name="tag">The tag name.</param>
        </member>
        <member name="M:Splunk.ModularInputs.EventStreamWriter.ConvertTimeToUtcUnixTimestamp(System.DateTime)">
            <summary>
            Converts a date-time value to Unix UTC timestamp.
            </summary>
            <param name="dateTime">A date-time value.</param>
            <returns>The UTC timestamp.</returns>
        </member>
        <member name="T:Splunk.ModularInputs.InputDefinition">
            <summary>
            The <see cref="T:Splunk.ModularInputs.InputDefinition"/> class is used to parse and access
            the XML data that defines the input from Splunk.
            </summary>
            <remarks>
            When Splunk executes a modular input script to stream events into
            Splunk, it reads configuration information from inputs.conf files in
            the system. It then passes this configuration in XML format to the
            script. The modular input script reads the configuration information
            from stdin.
            </remarks>
        </member>
        <member name="T:Splunk.ModularInputs.InputDefinitionBase">
            <summary>
            Base class for input definition.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.InputDefinitionBase.ServerHost">
            <summary>
            The hostname for the Splunk server that runs the modular input.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.InputDefinitionBase.ServerUri">
            <summary>
            The management URI for the Splunk server, identified by host, port,
            and protocol.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.InputDefinitionBase.CheckpointDirectory">
            <summary>
            The directory used for a modular input to save checkpoints.  
            </summary>
            <remarks>
            <para>
            This location is where Splunk tracks the input state from sources
            it is reading from.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.ModularInputs.InputDefinitionBase.SessionKey">
            <summary>
            The REST API session key for this modular input.
            </summary>
        </member>
        <member name="F:Splunk.ModularInputs.InputDefinition.stanzas">
            <summary>
            A dictionary of stanzas keyed by stanza name.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.InputDefinition.StanzaXmlElements">
            <summary> 
            The stanza elements in the configuration element.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.InputDefinition.Stanzas">
            <summary>
            Gets a dictionary of stanzas keyed by stanza name.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.InputDefinition.Stanza">
            <summary>
            Gets the stanza in the input definition.
            </summary>
            <remarks>
            <para>If there is more than one stanza, this method will fail.</para>
            </remarks>
        </member>
        <member name="T:Splunk.ModularInputs.Script">
            <summary>
            The <see cref="T:Splunk.ModularInputs.Script"/> class represents the functionality of a
            modular input script (that is, an executable).
            </summary>
            <remarks>
            <para>
            An application derives from this class to define a modular input. It
            must override the <see cref="P:Splunk.ModularInputs.Script.Scheme"/> and <see cref="M:Splunk.ModularInputs.Script.StreamEvents(Splunk.ModularInputs.InputDefinition)"/>
            methods. It can optionally override the <see cref="M:Splunk.ModularInputs.Script.Validate(Splunk.ModularInputs.ValidationItems,System.String@)"/> method.
            </para>
            </remarks>
        </member>
        <member name="M:Splunk.ModularInputs.Script.Run``1(System.String[])">
            <summary>
            Performs the action specified by the <c>args</c> parameter.
            </summary>
            <remarks>
            <para>
            If the <c>args</c> are not in the supported set of values,
            the method will do nothing and return a non-zero code (for
            instance, "1"), without raising an exception.
            </para>
            <para>
            Any exceptions and internal progress messages when executing this
            method will be logged to the splunkd log.
            </para>
            </remarks>
            <typeparam name="T">
            The application-derived type of the <see cref="T:Splunk.ModularInputs.Script"/>. It must
            have a constructor without a parameter.
            </typeparam>
            <param name="args">
            Command-line arguments provided by Splunk when it invokes the
            modular input script (that is, executable). An application should
            pass the <c>args</c> of the <c>Main</c> method (that
            is, the executable entry point) into this method.
            </param>
            <returns>
            Exit code, which should be used as the return value of the 
            <c>Main</c> method. A value of "0" indicates success.
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Splunk.ModularInputs.Script.WriteValidationError(System.String)" -->
        <member name="M:Splunk.ModularInputs.Script.Read(System.Type)">
            <summary>
            Reads stdin and returns the parsed XML input.
            </summary>
            <param name="type">Type of object to parse.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:Splunk.ModularInputs.Script.Serialize(System.Object)">
            <summary>
            Serializes this object to XML output. Used by unit tests.
            </summary>
            <param name="object">An object to serialize.</param>
            <returns>The XML string.</returns>
        </member>
        <member name="M:Splunk.ModularInputs.Script.LogException(System.Exception)">
            <summary>
            Writes an exception as a <c>LogLevel.Info</c> event into the
            splunkd log.
            </summary>
            <param name="e">An exception.</param>
        </member>
        <member name="M:Splunk.ModularInputs.Script.Log(System.String,Splunk.ModularInputs.LogLevel)">
            <summary>
            Writes a message into the splunkd log.
            </summary>
            <param name="msg">A message.</param>
            <param name="level">Log level. The default value is 
            <c>LogLevel.Info</c>.
            </param>
        </member>
        <member name="M:Splunk.ModularInputs.Script.StreamEvents(Splunk.ModularInputs.InputDefinition)">
            <summary>
            Streams events to Splunk through stdout.
            </summary>
            <param name="inputDefinition">
            Input definition from Splunk for this input.
            </param>
        </member>
        <member name="M:Splunk.ModularInputs.Script.Validate(Splunk.ModularInputs.ValidationItems,System.String@)">
            <summary>
            Performs validation for configurations of a new input being
            created.
            </summary>
            <remarks>
            <para>
            An application can override this method to perform custom
            validation logic.
            </para>
            </remarks>
            <param name="validationItems">Configuration data to validate.
            </param>
            <param name="errorMessage">Message to display in UI when validation
            fails.</param>
            <returns>A value indicating whether the validation
            succeeded.</returns>
        </member>
        <member name="P:Splunk.ModularInputs.Script.Scheme">
            <summary>
            Gets the <see cref="P:Splunk.ModularInputs.Script.Scheme"/> that will be returned to Splunk for
            introspection.
            </summary>
        </member>
        <member name="T:Splunk.ModularInputs.MultiValueParameter">
            <summary>
            The <see cref="T:Splunk.ModularInputs.MultiValueParameter"/> class represents a parameter that
            contains a multivalue.
            </summary>
        </member>
        <member name="T:Splunk.ModularInputs.ParameterBase">
            <summary>
            The <see cref="T:Splunk.ModularInputs.ParameterBase"/> class is the base class for different
            types of parameters in an input configuration.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.ParameterBase.Name">
            <summary>
            The name of the parameter.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.ParameterBase.ValueAsBaseType">
            <summary>
            Gets the value of the parameter.
            </summary>
        </member>
        <member name="T:Splunk.ModularInputs.ParameterBase.ValueBase">
            <summary>
            The <see cref="T:Splunk.ModularInputs.ParameterBase.ValueBase"/> abstract class is the base class for
            different types of parameter values.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.MultiValueParameter.ValueXmlElements">
            <summary>
            The value of the parameter.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.MultiValueParameter.ValueAsBaseType">
            <summary>
            Gets the value of the parameter.
            </summary>
        </member>
        <member name="T:Splunk.ModularInputs.MultiValueParameter.Value">
            <summary>
            The <see cref="T:Splunk.ModularInputs.MultiValueParameter.Value"/> class represents a multivalue.
            </summary>
        </member>
        <member name="T:Splunk.ModularInputs.MultiValueParameter.ValueXmlElement">
            <summary>
            The <see cref="T:Splunk.ModularInputs.MultiValueParameter.ValueXmlElement"/> class represents the <b>value</b> 
            XML element.
            </summary>
            <remarks>
            This class is used for serializing and deserializing the
            <b>value</b> XML element for a multivalue parameter.
            </remarks>
        </member>
        <member name="M:Splunk.ModularInputs.MultiValueParameter.ValueXmlElement.ToString">
            <summary>
            Returns the string value.
            </summary>
            <returns>
            The string value.
            </returns>
        </member>
        <member name="M:Splunk.ModularInputs.MultiValueParameter.ValueXmlElement.op_Implicit(Splunk.ModularInputs.MultiValueParameter.ValueXmlElement)~System.String">
            <summary>
            Converts a <see cref="T:Splunk.ModularInputs.MultiValueParameter.ValueXmlElement"/> to a <c>string</c>.
            </summary>
            <param name="value">Field value.</param>
            <returns>
            The string value delimiter.
            </returns>
            <remarks>
            This method is the same as <see cref="M:Splunk.ModularInputs.MultiValueParameter.ValueXmlElement.ToString"/>.
            </remarks>
        </member>
        <member name="P:Splunk.ModularInputs.MultiValueParameter.ValueXmlElement.Text">
            <summary>
            The value of the parameter.
            </summary>
        </member>
        <member name="T:Splunk.ModularInputs.SingleValueParameter">
            <summary>
            The <see cref="T:Splunk.ModularInputs.SingleValueParameter"/> class represents a parameter
            that contains a single value.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.SingleValueParameter.ValueXmlText">
            <summary>
            The value of the parameter.
            </summary>
            <remarks>
            This value is used for XML serialization and deserialization.
            </remarks>
        </member>
        <member name="P:Splunk.ModularInputs.SingleValueParameter.ValueAsBaseType">
            <summary>
            Gets the value of the parameter.
            </summary>
        </member>
        <member name="T:Splunk.ModularInputs.SingleValueParameter.Value">
            <summary>
            The <see cref="T:Splunk.ModularInputs.SingleValueParameter.Value"/> class represents a single value.
            </summary>
        </member>
        <member name="F:Splunk.ModularInputs.SingleValueParameter.Value.stringValue">
            <summary>
            The single value.
            </summary>
        </member>
        <member name="M:Splunk.ModularInputs.SingleValueParameter.Value.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.ModularInputs.SingleValueParameter.Value"/> class.
            </summary>
            <param name="value">Value of this type.</param>
        </member>
        <member name="M:Splunk.ModularInputs.SingleValueParameter.Value.op_Implicit(Splunk.ModularInputs.SingleValueParameter.Value)~System.String">
            <summary>
            Converts a value to a string.
            </summary>
            <param name="singleValue">The value.</param>
            <returns>The string value.</returns>
        </member>
        <member name="M:Splunk.ModularInputs.SingleValueParameter.Value.ToString">
            <summary>
            Converts to a string.
            </summary>
            <returns>The string value.</returns>
        </member>
        <member name="T:Splunk.ModularInputs.Stanza">
            <summary>
            The <see cref="T:Splunk.ModularInputs.Stanza"/> class represents a <b>stanza</b> element in 
            the input configuration.
            </summary>
        </member>
        <member name="T:Splunk.ModularInputs.LogLevel">
            <summary>
            List of log levels for logging functions.
            </summary>
        </member>
        <member name="F:Splunk.ModularInputs.LogLevel.Debug">
            <summary>
            Debug messages.
            </summary>
        </member>
        <member name="F:Splunk.ModularInputs.LogLevel.Info">
            <summary>
            Informational messages.
            </summary>
        </member>
        <member name="F:Splunk.ModularInputs.LogLevel.Warn">
            <summary>
            Warning messages.
            </summary>
        </member>
        <member name="F:Splunk.ModularInputs.LogLevel.Error">
            <summary>
            Error messages.
            </summary>
        </member>
        <member name="F:Splunk.ModularInputs.LogLevel.Fatal">
            <summary>
            Fatal error messages.
            </summary>
        </member>
        <member name="T:Splunk.ModularInputs.SystemLogger">
            <summary>
            The <see cref="T:Splunk.ModularInputs.SystemLogger"/> class holds information for logging 
            in a Splunk modular input.
            </summary>
        </member>
        <member name="M:Splunk.ModularInputs.SystemLogger.GetLevelString(Splunk.ModularInputs.LogLevel)">
            <summary>
            Converts a log level into a string.
            </summary>
            <param name="level">The log level to convert.</param>
            <returns>The string representation of the log level.</returns>
        </member>
        <member name="M:Splunk.ModularInputs.SystemLogger.Write(System.String)">
            <summary>
            Convenience method to write log messages to splunkd.log.
            </summary>
            <param name="msg">The message.</param>
        </member>
        <member name="M:Splunk.ModularInputs.SystemLogger.Write(Splunk.ModularInputs.LogLevel,System.String)">
            <summary>
            Convenience method to write log messages to splunkd.log.
            </summary>
            <param name="level">The log level.</param>
            <param name="msg">The message.</param>
        </member>
        <member name="T:Splunk.ModularInputs.StreamingMode">
            <summary>
            Enumeration of the valid values for the Scheme Streaming Mode.
            </summary>
        </member>
        <member name="F:Splunk.ModularInputs.StreamingMode.Simple">
            <summary>
            A plain-text modular input.
            </summary>
        </member>
        <member name="F:Splunk.ModularInputs.StreamingMode.Xml">
            <summary>
            An XML object that is part of a stream of data to Splunk.
            </summary>
        </member>
        <member name="T:Splunk.ModularInputs.Scheme">
            <summary>
            The <see cref="T:Splunk.ModularInputs.Scheme"/> class represents the XML output when a
            modular input is called by Splunk for introspection.
            </summary>
            <remarks>
            The modular input script (that is, executable) returns the XML output
            through stdout to Splunk.
            </remarks>    
        </member>
        <member name="M:Splunk.ModularInputs.Scheme.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.ModularInputs.Scheme"/> class.
            </summary>
            <remarks>
            This constructor sets up default values for this scheme.
            </remarks>
        </member>
        <member name="P:Splunk.ModularInputs.Scheme.Title">
            <summary>
            Gets or sets the title of the modular input.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.Scheme.Description">
            <summary>
            Gets or sets the description of the modular input.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.Scheme.UseExternalValidation">
            <summary>
            Gets or sets a value indicating whether external validation 
            is enabled for this modular input.
            </summary>
            <remarks>
            <para>
            Override <see cref="M:Splunk.ModularInputs.Script.Validate(Splunk.ModularInputs.ValidationItems,System.String@)"/> to perform the validation.
            </para>
            <para>
            This property's default value is true.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.ModularInputs.Scheme.UseSingleInstance">
            <summary>
            Gets or sets a value indicating whether to launch a single instance
            of the script or one script instance for each input stanza.  
            </summary>
            <remarks>
            This property's default value is false.
            </remarks>
        </member>
        <member name="P:Splunk.ModularInputs.Scheme.StreamingMode">
            <summary>
            Gest or sets the streaming mode for this modular input (Simple or Xml).
            </summary>
            <remarks>
            This property's default value is "Simple".
            </remarks>
        </member>
        <member name="P:Splunk.ModularInputs.Scheme.Endpoint">
            <summary>
            Gets or sets the endpoint element for this scheme.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Splunk.ModularInputs.Scheme.EndpointElement" -->
        <member name="M:Splunk.ModularInputs.Scheme.EndpointElement.#ctor">
            <summary>
            Initializes a new, empty instance of the 
            <see cref="T:Splunk.ModularInputs.Scheme.EndpointElement"/> class.
            </summary>
        </member>
        <member name="P:Splunk.ModularInputs.Scheme.EndpointElement.Arguments">
            <summary>
            Gets or sets the list of arguments to this endpoint.  
            </summary>
        </member>
        <member name="T:Splunk.ModularInputs.ValidationItems">
            <summary>
            The <see cref="T:Splunk.ModularInputs.ValidationItems"/> class is used to parse and access the
            XML data for a new input definition from Splunk, pending validation.
            </summary>    
            <remarks>
            When a new input of this modular input type is being created, Splunk
            runs the modular input script (that is, executable) to validate its
            configuration.
            </remarks>
        </member>
        <member name="P:Splunk.ModularInputs.ValidationItems.Item">
            <summary>
            Gets or sets an instance of this modular input.
            </summary>
            <remarks>This property is used by unit tests.</remarks>
        </member>
        <member name="T:Splunk.MonitorInput">
            <summary>
            The <see cref="T:Splunk.MonitorInput"/> class represents a monitor input, 
            which is a file, directory, script, or network port that is monitored 
            for new data.
            </summary>
        </member>
        <member name="M:Splunk.MonitorInput.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.MonitorInput"/> class.
            </summary>
            <param name="service">The connected service.</param>
            <param name="path">The path.</param>
        </member>
        <member name="P:Splunk.MonitorInput.Blacklist">
            <summary>
            Gets or sets a regular expression for a file path that, when 
            matched, is not indexed.
            </summary>
        </member>
        <member name="P:Splunk.MonitorInput.Disabled">
            <summary>
            Gets or sets a value indicating whether input monitoring is
            disabled. 
            </summary>
            <remarks>
            This property is available starting in Splunk 5.0.
            </remarks>
        </member>
        <member name="P:Splunk.MonitorInput.CrcSalt">
            <summary>
            Gets or sets a string that is used to force Splunk to index files 
            that have a matching cyclic redundancy check (CRC).
            </summary>
        </member>
        <member name="P:Splunk.MonitorInput.CheckIndex">
            <summary>
            Sets a value indicating whether the index value is checked to
            ensure that it is the name of a valid index.
            </summary>
        </member>
        <member name="P:Splunk.MonitorInput.CheckPath">
            <summary>
            Sets a value indicating whether the name value is checked to
            ensure that it exists.
            </summary>
        </member>
        <member name="P:Splunk.MonitorInput.FileCount">
            <summary>
            Gets the file count of this monitor input.
            </summary>
        </member>
        <member name="P:Splunk.MonitorInput.FollowTail">
            <summary>
            Gets or sets a value indicating whether files that are seen for
            the first time will be read from the end.
            </summary>
        </member>
        <member name="P:Splunk.MonitorInput.Host">
            <summary>
            Gets or sets the host for this monitor input.
            </summary>
        </member>
        <member name="P:Splunk.MonitorInput.HostRegex">
            <summary>
            Gets or sets the regular expression for a file path to determine the
            host.
            </summary>
            <remarks>
            If the path for a file matches this regular expression, the 
            captured value is used to populate the <b>host</b> field for events 
            from this monitor input. The regular expression must have one 
            capture group.
            </remarks>
        </member>
        <member name="P:Splunk.MonitorInput.IgnoreOlderThan">
            <summary>
            Gets or sets a time value that defines a rolling time window for 
            monitoring files.
            </summary>
            <remarks>
            If the modification time of a file being monitored
            falls outside of this rolling time window, the file is no longer 
            being monitored.
            </remarks>
        </member>
        <member name="P:Splunk.MonitorInput.Index">
            <summary>
            Gets or sets the index where events from this monitor input are 
            stored.
            </summary>
        </member>
        <member name="P:Splunk.MonitorInput.IsRecursive">
            <summary>
            Gets or sets a value indicating whether sub-directories are 
            monitored within this monitor input.
            </summary>
        </member>
        <member name="P:Splunk.MonitorInput.Kind">
            <summary>
            Gets the type of this monitor input.
            </summary>
        </member>
        <member name="P:Splunk.MonitorInput.Queue">
            <summary>
            Gets the queue for this monitor input. Valid values are 
            "parsingQueue" and "indexQueue".
            </summary>
        </member>
        <member name="P:Splunk.MonitorInput.Source">
            <summary>
            Gets the source of events from this monitor input.
            </summary>
        </member>
        <member name="P:Splunk.MonitorInput.SourceType">
            <summary>
            Gets or sets the source type of events from this monitor input.
            </summary>
        </member>
        <member name="P:Splunk.MonitorInput.TimeBeforeClose">
            <summary>
            Gets or sets the time period for keeping a file open, in seconds.
            </summary>
        </member>
        <member name="P:Splunk.MonitorInput.Whitelist">
            <summary>
            Gets or sets a regular expression for a file path that, when 
            matched, is indexed. 
            </summary>
        </member>
        <member name="P:Splunk.MonitorInput.HostSegment">
            <summary>
            Sets the specified slash-separated segment of the file path as the 
            <b>host</b> field value.
            </summary>
        </member>
        <member name="P:Splunk.MonitorInput.RenameSource">
            <summary>
            Sets the name to populate in the <b>source</b> field for events
            from this monitor input. The same source name should not be used for 
            multiple data inputs.
            </summary>
        </member>
        <member name="T:Splunk.MonitorInputArgs">
            <summary>
            The <see cref="T:Splunk.MonitorInputArgs"/> class extends <see cref="T:Splunk.Args"/> for
            <see cref="T:Splunk.MonitorInput"/> creation properties.
            </summary>
        </member>
        <member name="P:Splunk.MonitorInputArgs.Blacklist">
            <summary>
            Sets a regular expression for a filepath of files not to be 
            indexed.
            </summary>
        </member>
        <member name="P:Splunk.MonitorInputArgs.CheckIndex">
            <summary>
            Sets a value indicating whether to check if the index is valid.
            </summary>
        </member>
        <member name="P:Splunk.MonitorInputArgs.CheckPath">
            <summary>
            Sets a value indicating whether or not then name, be it a file
            or a directory, is valid.
            </summary>
        </member>
        <member name="P:Splunk.MonitorInputArgs.CrcSalt">
            <summary>
            Sets a string that modifies the file tracking identity for files in 
            this input. The magic value "&lt;SOURCE&gt;" invokes special 
            behavior (for more information, see Splunk admin documentation).
            </summary>
        </member>
        <member name="P:Splunk.MonitorInputArgs.Disabled">
            <summary>
            Sets a value indicating whether input monitoring is
            disabled. 
            </summary>
            <remarks>
            This property is available in Splunk 5.0 and later. 
            </remarks>
        </member>
        <member name="P:Splunk.MonitorInputArgs.FollowTail">
            <summary>
            Sets a value indicating whether a file, seen for the first time,
            is read from the end.
            </summary>
        </member>
        <member name="P:Splunk.MonitorInputArgs.Host">
            <summary>
            Sets a value to populate the host field for inputs from this data 
            input. 
            </summary>
        </member>
        <member name="P:Splunk.MonitorInputArgs.HostRegex">
            <summary>
            Sets a regular expression or a file path. 
            </summary>
            <remarks>
            If the path for a file matches this regular expression, the 
            captured value is used to populate the host field for events from
            this data input. The regular expression must have one capture 
            group.
            </remarks>
        </member>
        <member name="P:Splunk.MonitorInputArgs.HostSegment">
            <summary>
            Sets the specified slash-separate segment of the file path as the
            host field value.
            </summary>
        </member>
        <member name="P:Splunk.MonitorInputArgs.IgnoreOlderThan">
            <summary>
            Sets a time value for monitoring lifetime. If the modification time
            of a file being monitored falls outside of this rolling time window,
            the file is no longer being monitored.
            </summary>
        </member>
        <member name="P:Splunk.MonitorInputArgs.Index">
            <summary>
            Sets the index for the events genererated by this data input. 
            </summary>
            <remarks>
            This property's default value is "default".
            </remarks>
        </member>
        <member name="P:Splunk.MonitorInputArgs.Recursive">
            <summary>
            Sets a value indicating whether subdirectories are indexed.
            </summary>
        </member>
        <member name="P:Splunk.MonitorInputArgs.RenameSource">
            <summary>
            Sets a value to populate the source field for inputs from this data 
            input.
            </summary>
        </member>
        <member name="P:Splunk.MonitorInputArgs.SourceType">
            <summary>
            Sets a value to populate the source type for inputs from this data 
            input.
            </summary>
        </member>
        <member name="P:Splunk.MonitorInputArgs.TimeBeforeClose">
            <summary>
            Sets the amount of time to wait before closing a file upon reading 
            EOF.
            </summary>
        </member>
        <member name="P:Splunk.MonitorInputArgs.Whitelist">
            <summary>
            Sets a regular expression file path for inclusion. Only file paths 
            that match this regular expression are indexed.
            </summary>
        </member>
        <member name="T:Splunk.MultiResultsReader`1">
            <summary>
            The <see cref="T:Splunk.MultiResultsReader`1"/> class is the base class for
            multi result readers.
            </summary>
            <typeparam name="T">
            Matching type of a single reader that will be passed into the
            constructor.
            </typeparam>
        </member>
        <member name="F:Splunk.MultiResultsReader`1.resultsReader">
            <summary>
            The underlying single reader 
            </summary>
        </member>
        <member name="M:Splunk.MultiResultsReader`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Splunk.MultiResultsReader`1"/> class.
            This is a base contructor that should not be used directly.
            </summary>
            <param name="resultsReader">
            The underlying single reader.
            </param>
        </member>
        <member name="M:Splunk.MultiResultsReader`1.GetEnumerator">
            <summary>
            Returns an enumerator over the sets of results from this reader.
            </summary>
            <returns>An enumerator of events.</returns>
        </member>
        <member name="M:Splunk.MultiResultsReader`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator over the sets of results from this reader.
            </summary>
            <returns>An enumerator of events.</returns>
        </member>
        <member name="M:Splunk.MultiResultsReader`1.System#IDisposable#Dispose">
            <summary>
            Release unmanaged resources.
            </summary>
        </member>
        <member name="T:Splunk.MultiResultsReaderJson">
            <summary>
            The <see cref="T:Splunk.MultiResultsReaderJson"/> class represents a streaming
            JSON reader for Splunk search results. This reader supports streams
            from export searches, which might return one of more previews before
            returning final results.
            </summary>
        </member>
        <member name="M:Splunk.MultiResultsReaderJson.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Splunk.MultiResultsReaderJson"/> class.
            </summary>
            <param name="stream">The JSON stream to parse.</param>
        </member>
        <member name="T:Splunk.MultiResultsReaderXml">
            <summary>
            The <see cref="T:Splunk.MultiResultsReaderXml"/> class represents a streaming
            XML reader for Splunk search results. This reader supports streams from
            export searches, which might return one of more previews before
            returning final results.
            </summary>
        </member>
        <member name="M:Splunk.MultiResultsReaderXml.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Splunk.MultiResultsReaderXml"/> class.
            </summary>
            <param name="stream">The XML stream to parse.</param>
        </member>
        <member name="T:Splunk.Credential">
            <summary>
            The <see cref="T:Splunk.Credential"/> class represents a password.
            </summary>
        </member>
        <member name="M:Splunk.Credential.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Credential"/> class.
            </summary>
            <param name="service">The service.</param>
            <param name="path">The path.</param>
        </member>
        <member name="P:Splunk.Credential.ClearPassword">
            <summary>
            Gets the plain text version of password.
            </summary>
        </member>
        <member name="P:Splunk.Credential.EncryptedPassword">
            <summary>
            Gets the encrypted password, as it is stored. The encrypted password 
            is always stored as "********".
            </summary>
        </member>
        <member name="P:Splunk.Credential.Name">
            <summary>
            Overloaded. Gets the username when building the collection.
            </summary>
        </member>
        <member name="P:Splunk.Credential.Password">
            <summary>
            Gets or sets the plain text version of password.
            </summary>
        </member>
        <member name="P:Splunk.Credential.Realm">
            <summary>
            Gets or sets the realm in which the credentials are valid.
            </summary>
        </member>
        <member name="P:Splunk.Credential.Username">
            <summary>
            Gets the Splunk username for the credentials.
            </summary>
        </member>
        <member name="T:Splunk.CredentialCollection">
            <summary>
            The <see cref="T:Splunk.CredentialCollection"/> class represents the 
            collection of <see cref="T:Splunk.Credential"/>s.
            </summary>
        </member>
        <member name="M:Splunk.CredentialCollection.#ctor(Splunk.Service)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.CredentialCollection"/> 
            class.
            </summary>
            <param name="service">The connected service.</param>
        </member>
        <member name="M:Splunk.CredentialCollection.#ctor(Splunk.Service,Splunk.Args)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.CredentialCollection"/> 
            class.
            </summary>
            <param name="service">The connected service.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Splunk.CredentialCollection.Create(System.String,System.String)">
            <summary>
            Creates a credential.
            </summary>
            <param name="name">The username.</param>
            <param name="password">The password.</param>
            <returns>The Password credentials.</returns>
        </member>
        <member name="M:Splunk.CredentialCollection.Create(System.String,System.String,System.String)">
            <summary>
            Creates a credential.
            </summary>
            <param name="name">The username.</param>
            <param name="password">The password.</param>
            <param name="realm">The realm.</param>
            <returns>The Password credentials.</returns>
        </member>
        <member name="T:Splunk.ReceiverSubmitArgs">
            <summary>
            The <see cref="T:Splunk.ReceiverSubmitArgs"/> class extends <see cref="T:Splunk.Args"/> for
            using the <see cref="M:Splunk.Receiver.Submit(Splunk.ReceiverSubmitArgs,System.String)"/> class.
            </summary>
        </member>
        <member name="P:Splunk.ReceiverSubmitArgs.Host">
            <summary>
            Sets a value to populate the host field for inputs from this data 
            input. 
            </summary>
        </member>
        <member name="P:Splunk.ReceiverSubmitArgs.HostRegex">
            <summary>
            Sets a regular expression or a file path. 
            </summary>
            <remarks>
            If the path for a file matches this regular expression, the 
            captured value is used to populate the host field for events from
            this data input. The regular expression must have one capture 
            group.
            </remarks>
        </member>
        <member name="P:Splunk.ReceiverSubmitArgs.Index">
            <summary>
            Sets the index for the events generated by this data input. 
            </summary>
            <remarks>
            This property's default value is "default".
            </remarks>
        </member>
        <member name="P:Splunk.ReceiverSubmitArgs.Source">
            <summary>
            Sets a value to populate the source for inputs from this data 
            input.
            </summary>
        </member>
        <member name="P:Splunk.ReceiverSubmitArgs.SourceType">
            <summary>
            Sets a value to populate the source type for inputs from this data 
            input.
            </summary>
        </member>
        <member name="T:Splunk.ReplaceTimezone">
            <summary>
            The <see cref="T:Splunk.ReplaceTimezone"/> class parses time zone strings.
            </summary>
        </member>
        <member name="F:Splunk.ReplaceTimezone.timeZones">
            <summary>
            A list of time zone information, including nickname, UTC, and full
            text. This list is distilled from various places on the web.
            Military time zones are not represented.
            </summary>
        </member>
        <member name="M:Splunk.ReplaceTimezone.ReplaceTimeZone(System.String)">
            <summary>
            Returns the date with the time zone text replaced with 
            the UTC equivalent, if found.
            </summary>
            <param name="date">The date.</param>
            <returns>The date with timezone string.</returns>
        </member>
        <member name="T:Splunk.ResultsReaderXml">
            <summary>
            The <see cref="T:Splunk.ResultsReaderXml"/> class represents a streaming XML 
            reader for Splunk search results. When a stream from an export search
            is passed to this reader, it skips any preview events in the stream. 
            If you want to access the preview events, use the  
            <see cref="T:Splunk.MultiResultsReaderXml"/> class.
            </summary>
        </member>
        <member name="T:Splunk.ResultsReader">
            <summary>
            The <see cref="T:Splunk.ResultsReader"/> abstract class represents the results
            reader that returns events from a stream in key/value pairs.
            </summary>
        </member>
        <member name="F:Splunk.ResultsReader.fields">
            <summary>
            Field name list.
            </summary>
        </member>
        <member name="F:Splunk.ResultsReader.isInMultiReader">
            <summary>
            Whether the reader is inside a multi reader.
            </summary>
        </member>
        <member name="F:Splunk.ResultsReader.isPreview">
            <summary>
            Whether the results in this reader are a preview. The default value
            is false, which results in no result set skipping.
            </summary>
        </member>
        <member name="M:Splunk.ResultsReader.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.ResultsReader"/> class.
            </summary>
            <param name="stream">Input stream.</param>
            <param name="isInMultiReader">
            Whether constructed inside a multi reader.
            </param>
        </member>
        <member name="M:Splunk.ResultsReader.FinishInitialization">
            <summary>
            Used by constructors of results readers to obtain the preview flag
            and field list, and then skip any previews for export for a
            single reader.
            </summary>
        </member>
        <member name="M:Splunk.ResultsReader.Dispose">
            <summary>
            Releases unmanaged resources.        
            </summary>
        </member>
        <member name="M:Splunk.ResultsReader.GetEnumerator">
            <summary>
            Returns an enumerator over the events in the event stream.
            </summary>
            <remarks>
            This property concatenates results across sets when necessary.
            </remarks>
            <returns>An enumerator of events.</returns>
        </member>
        <member name="M:Splunk.ResultsReader.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator over the events in the event stream.
            </summary>
            <returns>An enumerator of events.</returns>
        </member>
        <member name="M:Splunk.ResultsReader.GetEventsFromCurrentSet">
            <summary>
            Gets the current set.
            </summary>
            <returns>Iterator of events.</returns>
        </member>
        <member name="M:Splunk.ResultsReader.AdvanceStreamToNextSet">
            <summary>
            Advances to the next set, skipping remaining event(s) 
            if any in the current set.
            </summary>
            <returns>Returns false if the end is reached.</returns>
        </member>
        <member name="P:Splunk.ResultsReader.IsExportStream">
            <summary>
            Gets a value indicating whether the stream is 
            from the export endpoint.
            </summary>
        </member>
        <member name="P:Splunk.ResultsReader.Fields">
            <summary>
            Gets all the field names that may appear in each result.
            </summary>
            <remarks>
            Be aware that any given result will contain a subset of these 
            fields.
            </remarks>
        </member>
        <member name="P:Splunk.ResultsReader.IsPreview">
            <summary>
            Gets a value indicating whether the results in this
            reader are a preview from an unfinished search.
            </summary>
            <remarks>
            This property's default value is "false", which results in no 
            results set skipping or concatenation.
            </remarks>
        </member>
        <member name="M:Splunk.ResultsReaderXml.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.ResultsReaderXml"/> 
            class for the event stream. You should only attempt to parse an XML
            stream with the XML reader. 
            </summary>
            <param name="stream">The stream to parse.</param>
        </member>
        <member name="M:Splunk.ResultsReaderXml.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.ResultsReaderXml"/>
            class.
            </summary>
            <param name="stream">The XML stream to parse.</param>
            <param name="isInMultiReader">
            Whether the reader is the underlying reader of a multi
            reader.
            </param>
        </member>
        <member name="M:Splunk.ResultsReaderXml.AdvanceStreamToNextSet">
            <summary>
            Advances to the next set, skipping any remaining event(s) 
            in the current set. Reads metadata before the first event in the
            next result set.
            </summary>
            <returns>Returns false if the end is reached.</returns>     
        </member>
        <member name="M:Splunk.ResultsReaderXml.Dispose">
            <summary>
            Releases unmanaged resources.
            </summary>
        </member>
        <member name="M:Splunk.ResultsReaderXml.ReadIntoNextResultsElement">
            <summary>
            Reads to next <b>results</b> element, parses out 
            <see cref="P:Splunk.ResultsReader.IsPreview"/> and <see cref="P:Splunk.ResultsReader.Fields"/>.
            </summary>
            <returns>Returns false if the end is reached.</returns>     
        </member>
        <member name="M:Splunk.ResultsReaderXml.ReadMetaElement">
            <summary>
            Reads the <b>meta</b> element to populate the 
            <see cref="P:Splunk.ResultsReader.Fields"/>
            property, and moves to its end tag.
            </summary>
        </member>
        <member name="M:Splunk.ResultsReaderXml.ReadEachDescendant(System.String,System.Action)">
            <summary>
            Reads each descendant found and positions the reader on the end
            tag of the current node.
            </summary>
            <param name="name">Name of the descendant.</param>
            <param name="readAction">
            The action that reads each descendant found, and 
            positions the reader at the decendant's element depth
            (for instance, the end tag or the start tag).
            </param>
        </member>
        <member name="M:Splunk.ResultsReaderXml.GetEventsFromCurrentSet">
            <summary>
            Returns an enumerator over a set of the events 
            in the event stream, and gets ready for the next set.
            </summary>
            <remarks>
            <para>
            When using 'search/jobs/export endpoint', search results
            will be streamed back as they become available. It is possible
            for one or more previews to be received before the final one.
            The enumerator returned will be over a single preview or 
            the final results. Each time this method is called, 
            the next preview or the final results are enumerated if they are
            available; otherwise, an exception is thrown.
            </para>
            <para>
            After all events in the set is enumerated, the metadata of the 
            next set (if available) is read, with 
            <see cref="P:Splunk.ResultsReader.IsPreview"/> 
            and <see cref="P:Splunk.ResultsReader.Fields"/> being set accordingly.
            </para>
            </remarks>
            <returns>A enumerator.</returns>
        </member>
        <member name="M:Splunk.ResultsReaderXml.ReadTextContentFromXml(System.String)">
            <summary>
            Extracts and concatenate text, excluding any markup.
            </summary>
            <param name="xml">The XML fragment with markup.</param>
            <returns>Extracted and concatenated text.</returns>
        </member>
        <member name="P:Splunk.ResultsReaderXml.XmlReader">
            <summary>
            Gets the underlying reader of the XML stream.
            </summary>
        </member>
        <member name="T:Splunk.Role">
            <summary>
            The <see cref="T:Splunk.Role"/> class represents a Splunk role, which is a 
            collection of permissions and capabilities. The user's role determines 
            what the user can see and interact with in Splunk.
            </summary>
        </member>
        <member name="M:Splunk.Role.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Role"/> class.
            </summary>
            <param name="service">The service.</param>
            <param name="path">The endpoint path.</param>
        </member>
        <member name="P:Splunk.Role.Capabilities">
            <summary>
            Gets or sets the list of capabilities assigned to this role.
            </summary>
        </member>
        <member name="P:Splunk.Role.DefaultApp">
            <summary>
            Gets or sets the default app for this role.
            </summary>
        </member>
        <member name="P:Splunk.Role.ImportedRoles">
            <summary>
            Gets or sets an array of roles used to import attributes from, such 
            as capabilities and allowed indexes to search.
            </summary>
        </member>
        <member name="P:Splunk.Role.ImportedRtSearchJobsQuota">
            <summary>
            Gets the maximum number of concurrent real-time search jobs a user
            with this role is allowed to run.
            </summary>
        </member>
        <member name="P:Splunk.Role.ImportedSearchDiskQuota">
            <summary>
            Gets the maximum disk space that can be used for search jobs by a 
            user with this role.
            </summary>
        </member>
        <member name="P:Splunk.Role.ImportedSearchFilter">
            <summary>
            Gets a search string that restricts the scope of searches run by 
            this role. 
            </summary>
            <remarks>
            Only those events that also match this search string are
            shown to the user. If a user has multiple roles with different 
            search filters, they are combined with an "OR".
            </remarks>
        </member>
        <member name="P:Splunk.Role.ImportedIndexesAllowed">
            <summary>
            Gets an array of indexes that a user with this role has permissions 
            to search.
            </summary>
        </member>
        <member name="P:Splunk.Role.ImportedIndexesDefault">
            <summary>
            Gets an array of indexes to search by default when no index is
            specified for a user with this role.
            </summary>
        </member>
        <member name="P:Splunk.Role.ImportedSearchJobsQuota">
            <summary>
            Gets the maximum number of concurrent searches a user with this role 
            is allowed to run.
            </summary>
        </member>
        <member name="P:Splunk.Role.RtSearchJobsQuota">
            <summary>
            Gets or sets the maximum number of concurrent real-time search jobs 
            a use with this role is allowed to run.
            </summary>
        </member>
        <member name="P:Splunk.Role.SearchDiskQuota">
            <summary>
            Gets or sets the maximum disk space that can be used for search 
            jobs by a user with this role.
            </summary>
        </member>
        <member name="P:Splunk.Role.SearchFilter">
            <summary>
            Gets or sets a search string that restricts the scope of searches 
            run by this role. 
            </summary>
            <remarks>
            Only those events that also match this search 
            string are shown to the user. If a user has multiple roles with 
            different search filters, they are combined with an "OR".
            </remarks>
        </member>
        <member name="P:Splunk.Role.SearchIndexesAllowed">
            <summary>
            Gets or sets an array of indexes that a user with this role has 
            permissions to search.
            </summary>
        </member>
        <member name="P:Splunk.Role.SearchIndexesDefault">
            <summary>
            Gets or sets an array of indexes to search by default when no index
            is specified for a user with this role.
            </summary>
        </member>
        <member name="P:Splunk.Role.SearchJobsQuota">
            <summary>
            Gets or sets the maximum number of concurrent searches a user with 
            this role is allowed to run.
            </summary>
        </member>
        <member name="P:Splunk.Role.SearchTimeWin">
            <summary>
            Gets or sets the maximum time span of a search that is allowed for 
            users in this role.
            </summary>
        </member>
        <member name="T:Splunk.RoleArgs">
            <summary>
            The <see cref="T:Splunk.RoleArgs"/> class extends <see cref="T:Splunk.Args"/> for 
            <see cref="T:Splunk.Role"/> creation properties.
            </summary>
        </member>
        <member name="P:Splunk.RoleArgs.Capabilities">
            <summary>
            Sets the capabilities of this role, as a list.
            </summary>
        </member>
        <member name="P:Splunk.RoleArgs.DefaultApp">
            <summary>
            Sets the name of the app to use as the default app for 
            the role. 
            </summary>
            <remarks>
            A user-specific default app will override this.
            The name you specify is the name of the folder containing the app.
            </remarks>
        </member>
        <member name="P:Splunk.RoleArgs.ImportedRoles">
            <summary>
            Sets a role from which to import attributes, as a list.
            </summary>
            <remarks>
            This property's default value is a role that imports no other 
            roles.
            </remarks>
        </member>
        <member name="P:Splunk.RoleArgs.RtSrchJobsQuota">
            <summary>
            Sets the maximum number of concurrent real time search jobs for 
            this role. 
            </summary>
            <remarks>
            This count does not affect the normal search jobs limit.
            </remarks>
        </member>
        <member name="P:Splunk.RoleArgs.SrchDiskQuota">
            <summary>
            Sets the maximum disk space, in megabytes (MB), that can be used 
            by a user's search jobs. For example, 100 limits this role to 100MB
            total.
            </summary>
        </member>
        <member name="P:Splunk.RoleArgs.SrchFilter">
            <summary>
            Sets a search string that restricts the scope of searches run by 
            this role. 
            </summary>
            <remarks>
            <para>
            Search results for this role only show events that also 
            match the search string you specify. In the case that a user has 
            multiple roles with different search filters, they are combined with
            an OR. The search string can include source, host, index, eventtype,
            sourcetype, search fields, *, OR, and AND.
            For example: <c>"host=web* OR source=/var/log/*"</c></para>
            <para><b>Note:</b> You can also use the <see cref="P:Splunk.RoleArgs.SrchIndexesAllowed"/>
            and <see cref="P:Splunk.RoleArgs.SrchIndexesDefault"/> parameters to limit the search 
            on indexes.</para>
            </remarks>
        </member>
        <member name="P:Splunk.RoleArgs.SrchIndexesAllowed">
            <summary>
            Sets the index(es) this role has permissions to search.
            </summary>
        </member>
        <member name="P:Splunk.RoleArgs.SrchIndexesDefault">
            <summary>
            Sets the indexes to search when no index is specified. 
            </summary>
            <remarks>
            These indexes can be wildcarded, with the exception that '*' 
            does not match internal indexes. To match internal indexes, 
            start with '_'. All internal indexes are represented by '_*'.
            </remarks>
        </member>
        <member name="P:Splunk.RoleArgs.SrchJobsQuota">
            <summary>
            Sets the maximum number of concurrent searches a user with this role
            is allowed to run. In the event of many roles per user, the maximum
            of these quotas is applied.
            </summary>
        </member>
        <member name="P:Splunk.RoleArgs.SrchTimeWin">
            <summary>
            Sets the maximum time span of a search, in seconds.
            </summary>
            <remarks>
            By default, searches are not limited to any specific time window. 
            To override any search time windows from imported roles, set 
            <see cref="P:Splunk.RoleArgs.SrchTimeWin"/> to "0", as the admin role does.
            </remarks>
        </member>
        <member name="T:Splunk.SavedSearch">
            <summary>
            The <see cref="T:Splunk.SavedSearch"/> class represents a saved search.
            </summary>
        </member>
        <member name="M:Splunk.SavedSearch.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.SavedSearch"/> class.
            </summary>
            <param name="service">The connected service.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Splunk.SavedSearch.Acknowledge">
            <summary>
            Acknowledges the suppression of alerts from this saved search
            and resumes alerting.
            </summary>
        </member>
        <member name="M:Splunk.SavedSearch.ActionPath(System.String)">
            <summary>
            Returns the path that corresponds to the requested action
            </summary>
            <param name="action">The requested action.</param>
            <returns>The path to the action.</returns>
        </member>
        <member name="M:Splunk.SavedSearch.Dispatch">
            <summary>
            Runs the saved search.
            </summary>
            <returns>The <see cref="T:Splunk.Job"/>.</returns>
        </member>
        <member name="M:Splunk.SavedSearch.Dispatch(Splunk.Args)">
            <summary>
            Runs the saved search using dispatch arguments.
            </summary>
            <param name="args">The arguments.</param>
            <returns>The <see cref="T:Splunk.Job"/>.</returns>
        </member>
        <member name="M:Splunk.SavedSearch.Dispatch(Splunk.SavedSearchDispatchArgs)">
            <summary>
            Runs the saved search using dispatch arguments.
            </summary>
            <param name="args">The arguments.</param>
            <returns>The <see cref="T:Splunk.Job"/>.</returns>
        </member>
        <member name="M:Splunk.SavedSearch.History">
            <summary>
            Returns an array of search jobs created from this saved search.
            </summary>
            <returns>An array of <see cref="T:Splunk.Job">Jobs</see>.</returns>
        </member>
        <member name="M:Splunk.SavedSearch.Update(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Updates the entity with the values you previously set using the 
            corresponding properties, and any additional specified arguments.
            </summary>
            <param name="args">The key/value pairs to update.</param>
            <remarks>
            The specified arguments take precedence over the values that were
            previously set using properties.
            </remarks>
        </member>
        <member name="M:Splunk.SavedSearch.Update">
            <summary>
            Updates the entity with the accumulated arguments, established by 
            the corresponding properties for each specific entity class.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailAuthPassword">
            <summary>
            Gets or sets the password to use when authenticating with the 
            SMTP server. 
            </summary>
            <remarks>
            This property's default value is the empty string.
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailAuthUsername">
            <summary>
            Gets or sets the username to use when authenticating with the SMTP 
            server.
            </summary>
            <remarks>
            This property's default value is the empty string.
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailBcc">
            <summary>
            Gets or sets the blind carbon copy (BCC) email address 
            receiving alerts.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailCc">
            <summary>
            Gets or sets the carbon copy (CC) email address receiving
            alerts.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailCommand">
            <summary>
            Gets or sets the search command (or pipeline) that runs the action.
            </summary>
            <remarks>
            Generally, the search command is a template search pipeline that is 
            realized with values from the saved search. To reference saved 
            search field values, wrap them in a '$' symbol. For example, use 
            $name$ to reference the saved search name, or use $search$ to 
            reference the search query.
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailFormat">
            <summary>
            Gets or sets the format of text in the email. 
            </summary>
            <remarks>
            This value also applies to any attachments formats. Valid values
            are: "plain", "html", "raw", and "csv".
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailFrom">
            <summary>
            Gets or sets the email address from which the email action originates.
            </summary>
            <remarks>
            The default is splunk@$LOCALHOST, or whatever value is set in 
            alert_actions.conf.
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailHostname">
            <summary>
            Gets or sets the host name used in the web link (URL) that is sent 
            in email alerts.
            </summary>
            <remarks>
            This property's value can be in either of two forms:
            <list type="bullet">
              <item><i>hostname</i> (for example, "splunkserver", "splunkserver.example.com")</item>
              <item><i>protocol://hostname:port</i> (for example, "http://splunkserver:8000", 
            "https://splunkserver.example.com:443")</item>
            </list>
            <para>
            When set to a simple hostname, the protocol and port that are 
            configured within Splunk are used to construct the base of the URL.
            When set to 'http://...', it is used verbatim. This means the 
            correct port must be specified if it is not the default port for 
            http or https. This is useful in cases in which the Splunk server
            is not aware of how to construct a URL that can be externally
            referenced, such as single sign on (SSO) environments, other
            proxies, or when the Splunk server hostname is not generally
            resolvable. 
            </para>
            <para>
            When this property is set to an empty string, the default
            behavior is used.
            </para>
            <para>This property's default value is the current hostname
            provided by the operating system, or "localhost". 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailInline">
            <summary>
            Gets or sets a value indicating whether the search 
            results are contained in the body of the email.
            </summary>
            <remarks>
            This property's default value is false.
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailMailServer">
            <summary>
            Gets or sets the address of the SMTP server that is used to send
            the emails, in the form &lt;<i>host</i>&gt;[:&lt;<i>port</i>&gt;]. 
            </summary>
            <remarks>
            <para>&lt;<i>host</i>&gt; can be either the hostname or the IP
            address.</para>
            <para>&lt;<i>port</i>&gt; is optional, and specifies the SMTP port
            that Splunk should connect to.</para>
            <para>If this property is not set, it defaults to the setting 
            defined in the
            <see href="http://docs.splunk.com/Documentation/Splunk/latest/Admin/Alertactionsconf">alert_actions.conf</see>
            file, or, if not set, to "$LOCALHOST:25".</para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailMaxResults">
            <summary>
            Gets or sets the maximum number of search results to send in email
            alerts.
            </summary>
            <remarks>
            This property's default value is "100".
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailMaxTime">
            <summary>
            Gets or sets the maximum amount of time an email action takes 
            before the action is canceled. 
            </summary>
            <remarks>
            <para>
            The property value's valid format is an <i>integer</i>
            followed by a time unit ("s" for seconds, "m" for minutes, "h" for
            hours, or "d" for days). For instance, "2s" means 2 seconds.
            </para>
            <para>
            This property's default value is "5m".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailPdfView">
            <summary>
            Gets or sets the name of the PDF view to deliver.
            </summary>
            <remarks>
            This property is only valid if the <see cref="P:Splunk.SavedSearch.ActionEmailSendPdf"/> 
            property is set to true.
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailPreProcessResults">
            <summary>
            Gets or sets a search string for preprocessing results before
            emailing them.
            </summary>
            <remarks>
            <para>Preprocessing usually involves filtering out unwanted
            internal fields.</para>
            <para>This property's default value is an empty string, which
            indicates no preprocessing.</para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailReportCIDFontList">
            <summary>
            Gets or sets a space-delimited list of character-identified
            (CID) fonts for handling some Asian languages in integrated PDF
            rendering.
            </summary>
            <remarks>
            <para>
            The fonts that can be listed include the following:
            <list type="bullet">
            <item><b>gb</b>: Simplified Chinese</item>
            <item><b>cns</b>: Traditional Chinese</item>
            <item><b>jp</b>: Japanese</item>
            <item><b>kor</b>: Korean</item>
            </list>
            </para>
            <para>If multiple fonts provide a glyph for a given character code, the
            glyph from the first font specified in the list is used.</para> 
            <para>To skip loading any CID fonts, specify an empty string.</para>
            <para>This property's default value is "gb cns jp kor".</para>
            <para>This property is available in Splunk 5.0 and later.</para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailReportIncludeSplunkLogo">
            <summary>
            Gets or sets a value indicating whether to include the
            Splunk logo with the report. 
            </summary>
            <remarks>
            This property is available in Splunk 5.0 and later. 
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailReportPaperOrientation">
            <summary>
            Gets or sets the paper orientation.
            </summary>
            <remarks>
            <para>
            Valid values for this property are "portrait" and "landscape".
            </para>
            <para>
            This property's default value is "portrait".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailReportPaperSize">
            <summary>
            Gets or sets the paper size for PDFs.
            </summary>
            <remarks>
            <para>Valid values for this property are "letter", "legal",
            "ledger", "a2", "a3", "a4", and "a5".</para>
            <para>This property's default value is "letter".</para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailReportServerEnabled">
            <summary>
            Gets or sets a value indicating whether the PDF server
            is enabled.
            </summary>
            <remarks>
            This property's default value is false.
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailReportServerUrl">
            <summary>
            Gets or sets the URL of the PDF report server, if one is set up and
            available on the network.
            </summary>
            <remarks>
            This property's default value for a locally installed report server 
            is "http://localhost:8091/".
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailSendPdf">
            <summary>
            Gets or sets a value indicating whether to create and
            send the results in PDF format.
            </summary>
            <remarks>
            This property's default value is false.
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailSendResults">
            <summary>
            Gets or sets a value indicating whether search results
            are attached to an email.
            </summary>
            <para>
            Results can be either attached or inline. For more information,
            see <see cref="P:Splunk.SavedSearch.ActionEmailInline"/>.
            </para>
            <remarks>
            This property's default value is false.
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailSubject">
            <summary>
            Gets or sets the subject line of the email.
            </summary>
            <remarks>
            This property's default value is 
            "SplunkAlert-&lt;<i>savedsearchname</i>&gt;".
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailTo">
            <summary>
            Gets or sets a comma- or semicolon-delimited list of email 
            recipients receiving alerts.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailTrackAlert">
            <summary>
            Gets or sets a value indicating whether running this
            email action results in a trackable alert.
            </summary>
            <remarks>
            This property's default value is false.
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailTtl">
            <summary>
            Gets or sets the minimum time-to-live (TTL), in seconds, of search
            artifacts if this email action is triggered. 
            </summary>
            <remarks>
            <para>
            If the value is a number followed by "p", it is the number of
            scheduled search periods.
            </para>
            <para>
            If no actions are triggered, the artifacts will have their TTL
            determined by the "dispatch.ttl" attribute in savedsearches.conf.
            </para>
            <para>
            This property's default value is "86400" (equal to 24 hours).
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailUseSsl">
            <summary>
            Gets or sets a value indicating whether to use secure
            socket layer (SSL) when communicating with the SMTP server.
            </summary>
            <remarks>
            This property's default value is false.
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailUseTls">
            <summary>
            Gets or sets a value indicating whether to use
            transport layer security (TLS) when communicating with the SMTP
            server.
            </summary>
            <remarks>
            This property's default value is false.
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionEmailWidthSortColumns">
            <summary>
            Gets or sets a value indicating whether columns should
            be sorted from least wide to most wide, left to right.
            </summary>
            <remarks>
            <para>
            This property is only used when the <see cref="P:Splunk.SavedSearch.ActionEmailFormat"/>
            property is set to "plain".
            </para>
            <para>This property's default value is true.</para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionPopulateLookupCommand">
            <summary>
            Gets or sets the search command (or pipeline) that runs the action.
            </summary>
            <remarks>
            Generally the command is a template search pipeline that is
            realized with values from the saved search. To reference saved
            search field values, wrap them in the '$' symbol. For example, to
            reference the saved search <i>name</i> use $name$; to reference
            <i>search</i> use $search$.
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionPopulateLookupDest">
            <summary>
            Gets or sets the name of the lookup table or lookup path to
            populate.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearch.ActionPopulateLookupHostname">
            <summary>
            Gets or sets the host name used in the web link (URL) that is sent 
            in populate-lookup alerts.
            </summary>
            <remarks>
            This property's value can be in either of two forms:
            <list type="bullet">
              <item><i>hostname</i> (for example, "splunkserver", "splunkserver.example.com")</item>
              <item><i>protocol://hostname:port</i> (for example, "http://splunkserver:8000", 
                "https://splunkserver.example.com:443")</item>
            </list>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionPopulateLookupMaxResults">
            <summary>
            Gets or sets the maximum number of search results to send in
            populate-lookup alerts.
            </summary>
            <remarks>
            This property's default value is "100".
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionPopulateLookupMaxTime">
            <summary>
            Gets or sets the maximum amount of time an alert action takes 
            before the action is canceled. 
            </summary>
            <remarks>
            <para>The property value's valid format is an <i>integer</i>
            followed by a time unit ("s" for seconds, "m" for minutes, "h" for
            hours, or "d" for days). For instance, "2s" means 2 seconds.
            </para>
            <para>
            This property's default value is "5m".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionPopulateLookupTrackAlert">
            <summary>
            Gets or sets a value indicating whether running this
            populate-lookup action results in a trackable alert.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearch.ActionPopulateLookupTtl">
            <summary>
            Gets or sets the minimum time-to-live (TTL), in seconds, of search
            artifacts if this populate-lookup action is triggered. 
            </summary>
            <remarks>
            <para>If the value is a number followed by "p", it is the number of
            scheduled search periods.</para>
            <para>If no actions are triggered, the artifacts will have their TTL
            determined by the "dispatch.ttl" attribute in savedsearches.conf.
            </para>
            <para>This property's default value is "10p".</para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionRssCommand">
            <summary>
            Gets or sets the search command (or pipeline) that runs the action.
            </summary>
            <remarks>
            <para>
            Generally the command is a template search pipeline that is
            realized with values from the saved search. To reference saved
            search field values, wrap them in the '$' symbol. For example, to
            reference the saved search <i>name</i> use $name$; to reference
            <i>search</i> use $search$.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionRssHostname">
            <summary>
            Gets or sets the host name used in the web link (URL) that is sent 
            in RSS alerts.
            </summary>
            <remarks>
            This property's value can be in either of two forms:
            <list type="bullet">
              <item><i>hostname</i> (for example, "splunkserver", 
                "splunkserver.example.com")</item>
              <item><i>protocol://hostname:port</i> (for example, 
                "http://splunkserver:8000", 
                "https://splunkserver.example.com:443")</item>
            </list>
            <para>
            When set to a simple hostname, the protocol and port that are 
            configured within Splunk are used to construct the base of the URL.
            When set to 'http://...', it is used verbatim. This means the 
            correct port must be specified if it is not the default port for 
            http or https. This is useful in cases in which the Splunk server
            is not aware of how to construct a URL that can be externally
            referenced, such as single sign on (SSO) environments, other
            proxies, or when the Splunk server hostname is not generally
            resolvable. 
            </para>
            <para>
            When this property is set to an empty string, the default
            behavior is used.
            </para>
            <para>This property's default value is the current hostname
            provided by the operating system, or "localhost". 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionRssMaxResults">
            <summary>
            Gets or sets the maximum number of search results to send in 
            RSS alerts.
            </summary>
            <remarks>
            This property's default value is "100".
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionRssMaxTime">
            <summary>
            Gets or sets the maximum amount of time an RSS alert action takes 
            before the action is canceled.
            </summary>
            <remarks>
            <para>The property value's valid format is an <i>integer</i>
            followed by a time unit ("s" for seconds, "m" for minutes, "h" for
            hours, or "d" for days). For instance, "2s" means 2 seconds.
            </para>
            <para>This property's default value is "1m".</para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionRssTrackAlert">
            <summary>
            Gets or sets a value indicating whether running this 
            RSS action results in a trackable alert.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearch.ActionRssTtl">
            <summary>
            Gets or sets the minimum time-to-live (TTL) of search artifacts if
            this RSS action is triggered. 
            </summary>
            <remarks>
            <para>
            If the value is a number followed by "p", it is the number of
            scheduled search periods.
            </para>
            <para>
            If no actions are triggered, the artifacts will have their TTL
            determined by the "dispatch.ttl" attribute in savedsearches.conf.
            </para>
            <para>
            This property's default value is "86400" (equal to 24 hours).
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionScriptCommand">
            <summary>
            Gets or sets the search command (or pipeline) that runs the action.
            </summary>
            <remarks>
            Generally the command is a template search pipeline that is
            realized with values from the saved search. To reference saved
            search field values, wrap them in the '$' symbol. For example, to
            reference the saved search <i>name</i> use $name$; to reference
            <i>search</i> use $search$.
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionScriptFilename">
            <summary>
            Gets or sets the file name of the script to call.
            </summary>
            <remarks>
            This value is required if script action is enabled 
            <see cref="P:Splunk.SavedSearch.IsActionScript"/> is set to true).
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionScriptHostname">
            <summary>
            Gets or sets the host name used in the web link (URL) that is sent 
            in script alerts.
            </summary>
            <remarks>
            This property's value can be in either of two forms:
            <list type="bullet">
              <item><i>hostname</i> (for example, "splunkserver", 
                "splunkserver.example.com")</item>
              <item><i>protocol://hostname:port</i> (for example, 
                "http://splunkserver:8000", 
                "https://splunkserver.example.com:443")</item>
            </list>
            <para>
            When set to a simple hostname, the protocol and port that are 
            configured within Splunk are used to construct the base of the URL.
            When set to 'http://...', it is used verbatim. This means the 
            correct port must be specified if it is not the default port for 
            http or https. This is useful in cases in which the Splunk server
            is not aware of how to construct a URL that can be externally
            referenced, such as single sign on (SSO) environments, other
            proxies, or when the Splunk server hostname is not generally
            resolvable. 
            </para>
            <para>
            When this property is set to an empty string, the default
            behavior is used.
            </para>
            <para>This property's default value is the current hostname
            provided by the operating system, or "localhost". 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionScriptMaxResults">
            <summary>
            Gets or sets the maximum number of search results to send in 
            script alerts.
            </summary>
            <remarks>
            This property's default value is "100".
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionScriptMaxTime">
            <summary>
            Gets or sets the maximum amount of time a script action takes 
            before the action is canceled.
            </summary>
            <remarks>
            <para>
            The property value's valid format is an <i>integer</i>
            followed by a time unit ("s" for seconds, "m" for minutes, "h" for
            hours, or "d" for days). For instance, "2s" means 2 seconds.
            </para>
            <para>This property's default value is "5m".</para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionScriptTrackAlert">
            <summary>
            Gets or sets a value indicating whether running this 
            script action results in a trackable alert.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearch.ActionScriptTtl">
            <summary>
            Gets or sets the minimum time-to-live (TTL) of search artifacts if
            this script action is triggered. 
            </summary>
            <remarks>
            <para>
            If the value is a number followed by "p", it is the number of
            scheduled search periods.
            </para>
            <para>
            If no actions are triggered, the artifacts will have their TTL
            determined by the "dispatch.ttl" attribute in savedsearches.conf.
            </para>
            <para>
            This property's default value is "600" (equal to 10 minutes).
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionSummaryIndexName">
            <summary>
            Gets or sets the name of the summary index where the results of the 
            scheduled search are saved.
            </summary>
            <remarks>
            <para>This property's default value is "summary".</para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionSummaryIndexCommand">
            <summary>
            Gets or sets the search command (or pipeline) that runs the action.
            </summary>
            <remarks>
            Generally the command is a template search pipeline that is
            realized with values from the saved search. To reference saved
            search field values, wrap them in the '$' symbol. For example, to
            reference the saved search <i>name</i> use $name$; to reference
            <i>search</i> use $search$.
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionSummaryIndexHostname">
            <summary>
            Gets or sets the host name used in the web link (URL) that is sent 
            in summary-index alerts.
            </summary>
            <remarks>
            This property's value can be in either of two forms:
            <list type="bullet">
              <item><i>hostname</i> (for example, "splunkserver", 
                "splunkserver.example.com")</item>
              <item><i>protocol://hostname:port</i> (for example, 
                "http://splunkserver:8000", 
                "https://splunkserver.example.com:443")</item>
            </list>
            <para>
            When set to a simple hostname, the protocol and port that are 
            configured within Splunk are used to construct the base of the URL.
            When set to 'http://...', it is used verbatim. This means the 
            correct port must be specified if it is not the default port for 
            http or https. This is useful in cases in which the Splunk server
            is not aware of how to construct a URL that can be externally
            referenced, such as single sign on (SSO) environments, other
            proxies, or when the Splunk server hostname is not generally
            resolvable. 
            </para>
            <para>
            When this property is set to an empty string, the default
            behavior is used.
            </para>
            <para>This property's default value is the current hostname
            provided by the operating system, or "localhost". 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionSummaryIndexInline">
            <summary>
            Gets or sets a value indicating whether to run the 
            summary indexing action as part of the scheduled search.
            </summary>
            <remarks>
            <para>
            This property is only considered if the summary-index action is
            enabled and is always executed—that is, if <b>counttype =
            always</b>.
            </para>
            <para>
            This property's default value is true.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionSummaryIndexMaxResults">
            <summary>
            Gets or sets the maximum number of search results to send in 
            summary-index alerts.
            </summary>
            <remarks>
            This property's default value is "100".
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionSummaryIndexMaxTime">
            <summary>
            Gets or sets the maximum amount of time a summary-index action 
            takes before the action is canceled. 
            </summary>
            <remarks>
            <para>The property value's valid format is an <i>integer</i>
            followed by a time unit ("s" for seconds, "m" for minutes, "h" for
            hours, or "d" for days). For instance, "2s" means 2 seconds.
            </para>
            <para>This property's default value is "5m".</para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionSummaryIndexTrackAlert">
            <summary>
            Gets or sets a value indicating whether running this 
            summary-index action results in a trackable alert.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearch.ActionSummaryIndexTtl">
            <summary>
            Gets or sets the minimum time-to-live (TTL) of search artifacts if
            this summary-index action is triggered. 
            </summary>
            <remarks>
            <para>If the value is a number followed by "p", it is the number of
            scheduled search periods.</para>
            <para>This property's default value is "10p".</para>
            <para>If no actions are triggered, the artifacts will have their TTL
            determined by the "dispatch.ttl" attribute in savedsearches.conf.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.AlertDigestMode">
            <summary>
            Gets or sets a value indicating whether Splunk applies 
            the alert actions to the entire result set (digest) or to each 
            individual search result (per result).
            </summary>
            <remarks>
            <para>
            This property's default value is true.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.AlertExpires">
            <summary>
            Gets or sets the amount of time to show the alert in the dashboard.
            The valid format is a number followed by a time unit ("s", "m", "h",
            or "d").
            </summary>
            <remarks>
            <para>The property value's valid format is an <i>integer</i>
            followed by a time unit ("s" for seconds, "m" for minutes, "h" for
            hours, or "d" for days). For instance, "2s" means 2 seconds.
            </para>
            <para>
            This property's default value is "24h".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.AlertSeverity">
            <summary>
            Gets or sets the alert severity level.
            </summary>
            <remarks>
            <para>
            The property's value can be one of the following integers:
            <list type="bullet">
            <item>"1" indicates DEBUG</item>
            <item>"2" indicates INFO</item>
            <item>"3" indicates WARN</item>
            <item>"4" indicates ERROR</item>
            <item>"5" indicates SEVERE</item>
            <item>"6" indicates FATAL</item>
            </list>
            </para>
            <para>
            This property's default value is "3".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.AlertSuppress">
            <summary>
            Gets or sets a value indicating whether alert 
            suppression is enabled for this search.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearch.AlertSuppressFields">
            <summary>
            Gets or sets a comma-delimited list of fields to use for alert 
            suppression when doing per-result alerting.
            </summary>
            <remarks>
            <para>
            This property is required if suppression is turned on and
            per-result alerting is enabled.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.AlertSuppressPeriod">
            <summary>
            Gets or sets the suppression period, which is only valid if
            <see cref="P:Splunk.SavedSearch.AlertSuppress"/> is enabled.
            </summary>
            <remarks>
            <para>The property value's valid format is an <i>integer</i>
            followed by a time unit ("s" for seconds, "m" for minutes, "h" for
            hours, or "d" for days). For instance, "2s" means 2 seconds.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.AlertTrack">
            <summary>
            Gets or sets a keyword value indicating how to track the 
            actions triggered by this saved search. 
            </summary>
            <remarks>
            <para>
            This property's value can be one of the following keywords:
            <list type="bullet">
            <item>"true" indicates enabled</item>
            <item>"false" indicates disabled</item>
            <item>"auto" indicates that tracking is based on the setting of
            each action</item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.AlertComparator">
            <summary>
            Gets or sets the alert comparator for alert triggering. 
            </summary>
            <remarks>
            <para>
            This property's value can be one of the following strings:
            <list type="bullet">
            <item>"greater than"</item>
            <item>"less than"</item> 
            <item>"equal to"</item> 
            <item>"rises by"</item>
            <item>"drops by"</item> 
            <item>"rises by perc"</item>
            <item>"drops by perc"</item>
            </list>
            </para>
            <para>
            This property is used with <see cref="P:Splunk.SavedSearch.AlertThreshold"/> to 
            trigger alert actions.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.AlertCondition">
            <summary>
            Gets or sets a conditional search that is evaluated against the 
            results of the saved search.
            </summary>
            <remarks>
            <para>
            Alerts are triggered if the specified search yields a non-empty 
            search result list.
            </para>
            <para>
            This property's default value is an empty string.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.AlertThreshold">
            <summary>
            Gets or sets the value to compare to before triggering the alert 
            action. 
            </summary>
            <remarks>
            <para>
            If this value is expressed as a percentage, it indicates the
            value to use when <see cref="P:Splunk.SavedSearch.AlertComparator"/> is set to "rises by 
            perc" or "drops by perc."
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.AlertType">
            <summary>
            Gets or sets a value indicating what to base the alert on. 
            </summary>
            <remarks>
            <para>
            This property's value can be one of the following strings:
            <list type="bullet">
            <item>"always"</item>
            <item>"custom"</item> 
            <item>"number of events"</item>
            <item>"number of hosts"</item>
            <item>"number of sources"</item>
            </list>
            </para>
            <para>
            This property is overridden by the <see cref="P:Splunk.SavedSearch.AlertCondition"/> 
            property if specified.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.AutoSummarizeMaxSummaryRatio">
            <summary>
            Gets or sets the maximum ratio of summary_size/bucket_size, which 
            specifies when to stop summarization and deem it unhelpful for a 
            bucket. 
            </summary>
            <remarks>
            <para>
            The test is only performed if the summary size is larger than 
            5 megabytes (MB). 
            </para>
            <para>
            This property's default value is "0.1".
            </para>
            <para>
            This property is available in Splunk 5.0 and later. 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.CronSchedule">
            <summary>
            Gets or sets the cron-style schedule for running this saved search.
            </summary>
            <remarks>
            <para>
            Use standard cron notation to define your scheduled search 
            interval. The cron format can accept this type of notation: 
            "00,20,40 * * * *", which runs the search every hour at hh:00, 
            hh:20, and hh:40. Along the same lines, a cron of 03,23,43 * * * * 
            runs the search every hour at hh:03, hh:23, hh:43. 
            </para>
            <para>
            Splunk recommends that you schedule your searches so that
            they are staggered over time. This reduces system load. Running 
            all of them every 20 minutes (*/20) means they would all launch at 
            hh:00 (20, 40) and might slow your system every 20 minutes.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.Description">
            <summary>
            Gets or sets a human-readable description of this saved search.
            </summary>
            <remarks>
            <para>
            This property's default value is an empty string.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.DispatchBuckets">
            <summary>
            Gets or sets the maximum number of timeline buckets.
            </summary>
            <remarks>
            <para>
            This property's default value is "0".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.DispatchEarliestTime">
            <summary>
            Gets or sets a time string that specifies the earliest time for 
            this search. 
            </summary>
            <remarks>
            <para>
            This value can be a relative or absolute time as formatted 
            by <see cref="P:Splunk.SavedSearch.DispatchTimeFormat"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.DispatchLatestTime">
            <summary>
            Gets or sets a time string that specifies the latest time for this 
            search. 
            </summary>
            <remarks>
            <para>This property's value can be a relative or absolute time 
            as formatted by <see cref="P:Splunk.SavedSearch.DispatchTimeFormat"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.DispatchLookups">
            <summary>
            Gets or sets a value indicating whether lookups are 
            enabled for this search.
            </summary>
            <remarks>
            <para>This property's default value is true.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.DispatchMaxCount">
            <summary>
            Gets or sets the maximum number of results before finalizing 
            the search.
            </summary>
            <remarks>
            <para>
            This property's default value is "500000".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.DispatchMaxTime">
            <summary>
            Gets or sets the maximum amount of time in seconds before 
            finalizing the search.
            </summary>
            <remarks>
            <para>
            This property's default value is "0".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.DispatchReduceFreq">
            <summary>
            Gets or sets an integer value that specifies how frequently Splunk 
            runs the MapReduce reduce phase on accumulated map values.
            </summary>
            <remarks>
            <para>
            This property's default value is "10".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.DispatchRtBackfill">
            <summary>
            Gets or sets a value indicating whether to backfill the 
            real-time window for this search. 
            </summary>
            <remarks>
            <para>
            This property is only valid for real-time searches.
            </para>
            <para>
            This property's default value is false.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.DispatchSpawnProcess">
            <summary>
            Gets or sets a value indicating whether Splunk spawns 
            a new search process when running this saved search.
            </summary>
            <remarks>
            <para>
            Searches against indexes must run in a separate process.
            </para>
            <para>
            This property's default value is true.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.DispatchTimeFormat">
            <summary>
            Gets or sets a time format string that defines the time format 
            used to specify the earliest and latest times for this search.
            </summary>
            <remarks>
            <para>
            This property's default value is "%FT%T.%Q%:z".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.DispatchTtl">
            <summary>
            Gets or sets the time to live (TTL) for the artifacts of the 
            scheduled search (the time before the search job expires and 
            artifacts are still available), if no actions are triggered.
            </summary>
            <remarks>
            <para>
            If an action is triggered, Splunk changes the TTL to that
            action's TTL. If multiple actions are triggered, Splunk applies
            the maximum TTL to the artifacts.
            </para>
            <para>If the value is a number followed by "p", it is the number of
            scheduled search periods.</para>
            <para>This property's default value is "2p".</para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.DisplayView">
            <summary>
            Gets or sets the default UI view name (not label) in which to 
            load the results.
            </summary>
            <remarks>
            Access is dependent on the user having sufficient permissions.
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.MaxConcurrent">
            <summary>
            Gets or sets the maximum number of concurrent instances of this 
            search the scheduler is allowed to run.
            </summary>
            <remarks>
            <para>
            This property's default value is "1".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.NextScheduledTime">
            <summary>
            Gets the time at which the scheduler will run this search
            again.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearch.QualifiedSearch">
            <summary>
            Gets the exact search string that the scheduler will run.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearch.RealtimeSchedule">
            <summary>
            Gets or sets a value indicating how the scheduler computes the 
            next run time of a scheduled search.
            </summary>
            <remarks>
            <para>
            This property's possible values are the following:
            <list type="bullet">
            <item>"0" indicates the scheduler bases its determination of the
            next scheduled search on the last search execution time. This is
            called continuous scheduling. The scheduler will never skip
            scheduled execution periods. However, the execution of the saved
            search might fall behind depending on the scheduler's load. Use
            continuous scheduling whenever you enable the summary index
            option. </item>
            <item>"1" indicates the scheduler is executing the searches running
            over the most recent time range, and therefore might skip some
            execution periods to keep up.</item>
            </list>
            </para>
            <para>
            This property's default value is "1".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.RequestUiDispatchApp">
            <summary>
            Gets or sets a string value specifying the app in which Splunk 
            Web dispatches this search.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearch.RequestUiDispatchView">
            <summary>
            Gets or sets a string value specifying the view in which Splunk
            Web displays this search.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearch.RestartOnSearchPeerAdd">
            <summary>
            Gets or sets a value indicating whether a real-time 
            search managed by the scheduler is restarted when a search peer 
            becomes available for this saved search.
            </summary>
            <remarks>
            <para>
            The peer can be a newly added peer or a peer that has been down
            and has become available.
            </para>
            <para>
            This property's default value is true.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.RunOnStartup">
            <summary>
            Gets or sets a value indicating whether this search is 
            run when Splunk starts.
            </summary>
            <remarks>
            <para>
            If the search is not run on startup, it runs at the next scheduled time.
            </para>
            <para>
            Splunk recommends that you set this property to true for scheduled
            searches that populate lookup tables.
            </para>
            <para>
            This property's default value is false.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.Search">
            <summary>
            Gets or sets the search expression for this saved search.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearch.Vsid">
            <summary>
            Gets or sets the view state ID that is associated with the view 
            specified in the <see cref="P:Splunk.SavedSearch.DisplayView"/> property.
            </summary>
            <remarks>
            <para>
            This ID corresponds to a stanza in the viewstates.conf 
            configuration file.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.IsActionEmail">
            <summary>
            Gets a value indicating whether the email action is
            enabled.
            </summary>
            <remarks>
            <para>
            This property's default value is false.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.IsActionPopulateLookup">
            <summary>
            Gets a value indicating whether the populate-lookup
            action is enabled.
            </summary>
            <remarks>
            <para>
            This property's default value is false.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.IsActionRss">
            <summary>
            Gets a value indicating whether RSS action is enabled.
            </summary>
            <remarks>
            <para>
            This property's default value is false.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.IsActionScript">
            <summary>
            Gets a value indicating whether the script action is
            enabled.
            </summary>
            <remarks>
            <para>
            This property's default value is false.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.IsActionSummaryIndex">
            <summary>
            Gets a value indicating whether the summary-index
            action is enabled.
            </summary>
            <remarks>
            <para>
            This property's default value is false.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.IsScheduled">
            <summary>
            Gets or sets a value indicating whether this search is 
            run on a schedule.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearch.IsVisible">
            <summary>
            Gets or sets a value indicating whether the search 
            should be visible in the saved search list.
            </summary>
            <remarks>
            <para>
            This property's default value is true.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.Actions">
            <summary>
            Sets a comma-separated list of actions to enable.
            </summary>
            <remarks>
            <para>
            This property's value can include any of the following strings,
            separated by commas:
            <list type="bullet">
            <item>"email"</item>
            <item>"populate_lookup"</item> 
            <item>"rss"</item>
            <item>"script"</item>
            <item>"summary_index"</item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ActionWildcard">
            <summary>
            Sets a wildcard argument that accepts any action.
            </summary>
            <remarks>
            <para>
            Use this property to specify specific action arguments. For 
            example, to specify the email recipients for the 
            <see cref="P:Splunk.SavedSearch.ActionEmailTo"/> property.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.ArgsWildcard">
            <summary>
            Sets a wildcard argument that accepts any saved search template
            argument.
            </summary>
            <remarks>
            <para>
            An example saved search template is "args.username=foobar" when 
            the search is "search $username$".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.Disabled">
            <summary>
            Sets a value indicating whether the saved search is 
            disabled. 
            </summary>
            <remarks>
            <para>
            Disabled searches are not visible in Splunk Web.
            </para>
            <para>
            This property's default value is false.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearch.DispatchWildcard">
            <summary>
            Sets a wildcard argument that accepts any dispatch-related 
            argument.
            </summary>
        </member>
        <member name="T:Splunk.SavedSearchDispatchArgs">
            <summary>
            The <see cref="T:Splunk.SavedSearchDispatchArgs"/> class extends 
            <see cref="T:Splunk.Args"/> for <see cref="T:Splunk.SavedSearch"/> creation properties.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.DispatchNow">
            <summary>
            Sets a time value that causes the search to be dispatched as though
            the specified time were the current time.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.DispatchBuckets">
            <summary>
            Sets the maximum number of timeline buckets.
            </summary>
            <remarks>
            <para>
            This property's default value is "0".
            </para>
            </remarks>        
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.DispatchEarliestTime">
            <summary>
            Sets the maximum number of timeline buckets.
            </summary>
            <remarks>
            <para>
            This property's value can be a relative or absolute time. If it
            is an absolute time, use the <see cref="P:Splunk.SavedSearchDispatchArgs.DispatchTimeFormat"/> to
            format the value.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.DispatchLatestTime">
            <summary>
            Sets a time string that specifies the latest time for this search.
            </summary>
            <remarks>
            <para>
            This property's value can be a relative or absolute time. If it
            is an absolute time, use the <see cref="P:Splunk.SavedSearchDispatchArgs.DispatchTimeFormat"/> to
            format the value.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.DispatchLookups">
            <summary>
            Sets a value indicating whether lookups are enabled for 
            this search.
            </summary>
            <remarks>
            <para>
            This property's default value is true.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.DispatchMaximumCount">
            <summary>
            Sets the maximum number of results before finalizing the search.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.DispatchMaximumTime">
            <summary>
            Sets the the maximum amount of time before finalizing the search.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.DispatchReduceFrequency">
            <summary>
            Sets an integer value that specifies how frequently Splunk runs the
            MapReduce reduce phase on accumulated map values.
            </summary>
            <remarks>
            <para>
            This property's default value is "10".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.DispatchRealTimeBackfill">
            <summary>
            Sets a value indicating whether to back fill the real-time window 
            for this search. This value only applies to real-time searches.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.DispatchSpawnProcess">
            <summary>
            Sets a value indicating whether the search should run in a separate 
            spawned process. 
            </summary>
            <remarks>
            Searches against indexes must run in a separate process.
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.DispatchTimeFormat">
            <summary>
            Sets a time format string that defines the time format used to
            specify the earliest and latest times for this search.
            </summary>
            <remarks>
            <para>
            This property's default value is "%FT%T.%Q%:z".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.DispatchTtl">
            <summary>
            Sets the time to live (TTL) for the artifacts of the scheduled 
            search (the time before the search job expires and artifacts are 
            still available), if no actions are triggered.
            </summary>
            <remarks>
            <para>
            If an action is triggered, Splunk changes the TTL to that
            action's TTL. If multiple actions are triggered, Splunk applies
            the maximum TTL to the artifacts.
            </para>
            <para>If the value is a number followed by "p", it is the number of
            scheduled search periods.</para>
            <para>This property's default value is "2p".</para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.TriggerActions">
            <summary>
            Sets a value indicating whether to trigger alert actions.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ForceDispatch">
            <summary>
            Sets a value indicating whether to start a new search, even if another
            instance of this search is already running.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionWildcard">
            <summary>
            Sets the wildcard argument for any action. 
            </summary>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailAuthPassword">
            <summary>
            Sets the password to use when authenticating with the SMTP server. 
            </summary>
            <remarks>
            <para>
            Normally this value will be set when editing the email settings.
            However, you can set a clear text password here and it will be
            encrypted on the next Splunk restart.
            </para> 
            <para>
            This property's default value is the empty string.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailAuthUsername">
            <summary>
            Sets the username to use when authenticating with the SMTP server.
            </summary>
            <remarks>
            <para>
            If this is empty string, no authentication is attempted. 
            Be aware that some SMTP servers reject unauthenticated emails.
            </para>
            <para>
            This property's default value is the empty string.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailBcc">
            <summary>
            Sets the blind carbon copy (BCC) email address to use.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailCc">
            <summary>
            Sets the carbon copy (CC) email address to use.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailCommand">
            <summary>
            Sets the search command (or pipeline) that runs the action. 
            </summary>
            <remarks>
            <para>
            Generally, the search command is a template search pipeline that is 
            realized with values from the saved search. To reference saved 
            search field values, wrap them in a '$' symbol. For example, use 
            $name$ to reference the saved search name, or use $search$ to 
            reference the search query.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailFormat">
            <summary>
            Sets the format of text in the email. 
            </summary>
            <remarks>
            <para>
            This value also applies to any attachments formats. Valid values
            are: 
            <list type="bullet">
            <item>"plain"</item> 
            <item>"html"</item> 
            <item>"raw"</item>
            <item>"csv"</item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailFrom">
            <summary>
            Sets the email address from which the email action originates.
            </summary>
            <remarks>
            <para>
            The default is splunk@$LOCALHOST, or whatever value is set in 
            alert_actions.conf.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailHostname">
            <summary>
            Sets the hostname used in the web link (URL) that is sent in email
            actions. 
            </summary>
            <remarks>
            This property's value can be in either of two forms:
            <list type="bullet">
              <item><i>hostname</i> (for example, "splunkserver", 
                "splunkserver.example.com")</item>
              <item><i>protocol://hostname:port</i> (for example, 
                "http://splunkserver:8000", 
                "https://splunkserver.example.com:443")</item>
            </list>
            <para>
            When set to a simple hostname, the protocol and port that are 
            configured within Splunk are used to construct the base of the URL.
            When set to 'http://...', it is used verbatim. This means the 
            correct port must be specified if it is not the default port for 
            http or https. This is useful in cases in which the Splunk server
            is not aware of how to construct a URL that can be externally
            referenced, such as single sign on (SSO) environments, other
            proxies, or when the Splunk server hostname is not generally
            resolvable. 
            </para>
            <para>
            When this property is set to an empty string, the default
            behavior is used.
            </para>
            <para>This property's default value is the current hostname
            provided by the operating system, or "localhost". 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailInline">
            <summary>
            Sets a value indicating whether the search results are 
            contained in the body of the email.
            </summary>
            <remarks>
            Results can be either inline or attached to an email. For more 
            information, see <see cref="P:Splunk.SavedSearchDispatchArgs.ActionEmailSendResults"/>.
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailMailServer">
            <summary>
            Sets the address of the SMTP server that is used to send the 
            emails, in the form &lt;<i>host</i>&gt;[:&lt;<i>port</i>&gt;]. 
            </summary>
            <remarks>
            <para>&lt;<i>host</i>&gt; can be either the hostname or the IP
            address.</para>
            <para>&lt;<i>port</i>&gt; is optional, and specifies the SMTP port
            that Splunk should connect to.</para>
            <para>If this property is not set, it defaults to the setting 
            defined in the
            <see href="http://docs.splunk.com/Documentation/Splunk/latest/Admin/Alertactionsconf">alert_actions.conf</see>
            file, or, if not set, to "$LOCALHOST:25".</para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailMaxResults">
            <summary>
            Sets the maximum number of search results to send in email alerts.
            </summary>
            <remarks>
            <para>
            This property's default value is "100".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailMaxTime">
            <summary>
            Sets the maximum amount of time an email action takes before the 
            action is canceled. 
            </summary>
            <remarks>
            <para>The property value's valid format is an <i>integer</i>
            followed by a time unit ("s" for seconds, "m" for minutes, "h" for
            hours, or "d" for days). For instance, "2s" means 2 seconds.
            </para>
            <para>This property's default value is "5m".</para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailPdfView">
            <summary>
            Sets the name of the view to deliver.
            </summary>
            <remarks>
            <para>
            This property is only valid if the
            <see cref="P:Splunk.SavedSearchDispatchArgs.ActionEmailSendPdf"/> property is enabled.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailPreprocessResults">
            <summary>
            Sets a search string for preprocessing results before emailing them.
            </summary>
            <remarks>
            <para>Preprocessing usually involves filtering out unwanted
            internal fields.</para>
            <para>
            This property's default value is an empty string, which indicates
            no preprocessing.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailReportPaperOrientation">
            <summary>
            Sets the paper orientation.
            </summary>
            <remarks>
            <para>
            Valid values for this property are "portrait" and "landscape".
            </para>
            <para>
            This property's default value is "portrait".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailReportPaperSize">
            <summary>
            Sets the paper size for PDFs.
            </summary>
            <remarks>
            <para>Valid values for this property are:
            <list type="bullet">
            <item>"letter"</item>
            <item>"legal"</item>
            <item>"ledger"</item>
            <item>"a2"</item>
            <item>"a3"</item>
            <item>"a4"</item>
            <item>"a5"</item>
            </list>
            </para>
            <para>
            This property's default value is "letter".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailReportServerEnabled">
            <summary>
            Sets a value indicating whether the PDF server is enabled.
            </summary>
            <remarks>
            <para>
            This property's default value is false.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailReportServerUrl">
            <summary>
            Sets the URL of the PDF report server, if one is set up and 
            available on the network.
            </summary>
            <remarks>
            <para>
            This property's default value for a locally installed report server 
            is "http://localhost:8091/".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailSendPdf">
            <summary>
            Sets a value indicating whether to create and send the 
            results in PDF format.
            </summary>
            <remarks>
            <para>
            This property's default value is false.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailSendResults">
            <summary>
            Sets a value indicating whether search results are 
            attached to an email.
            </summary>
            <remarks>
            <para>
            Results can be either attached or inline. For more information,
            see <see cref="P:Splunk.SavedSearchDispatchArgs.ActionEmailInline"/>.
            </para>
            <para>
            This property's default value is false.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailSubject">
            <summary>
            Sets the subject line of the email.
            </summary>
            <remarks>
            <para>
            This property's default value is 
            "SplunkAlert-&lt;<i>savedsearchname</i>&gt;".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailTo">
            <summary>
            Sets a comma- or semicolon-delimited list of email recipients 
            receiving alerts.
            </summary>
            <remarks>
            <para>
            This value is required if this search is scheduled and the email
            alert action is enabled.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailTrackAlert">
            <summary>
            Sets a value indicating whether running this email 
            action results in a trackable alert.
            </summary>
            <remarks>
            <para>
            This property's default value is false.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailTtl">
            <summary>
            Sets the minimum time-to-live (TTL), in seconds, of search 
            artifacts if this email action is triggered. 
            </summary>
            <remarks>
            <para>
            If the value is a number followed by "p", it is the number of
            scheduled search periods.
            </para>
            <para>
            If no actions are triggered, the artifacts will have their TTL
            determined by the "dispatch.ttl" attribute in savedsearches.conf.
            </para>
            <para>
            This property's default value is "86400" (equal to 24 hours).
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailUseSsl">
            <summary>
            Sets a value indicating whether to use secure socket 
            layer (SSL) when communicating with the SMTP server.
            </summary>
            <remarks>
            <para>
            This property's default value is false.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailUseTls">
            <summary>
            Sets a value indicating whether to use transport layer 
            security (TLS) when communicating with the SMTP server.
            </summary>
            <remarks>
            <para>
            This property's default value is false.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionEmailWidthSortColumns">
            <summary>
            Sets a value indicating whether columns should be 
            sorted from least wide to most wide, left to right.
            </summary>
            <remarks>
            <para>This property is only used when the
            <see cref="P:Splunk.SavedSearchDispatchArgs.ActionEmailFormat"/> property is set to "plain".</para>
            <para>
            This property's default value is true.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionPopulateLookupCommand">
            <summary>
            Sets the search command (or pipeline) that runs the action.
            </summary>
            <remarks>
            <para>
            Generally the command is a template search pipeline that is
            realized with values from the saved search. To reference saved
            search field values, wrap them in the '$' symbol. For example, to
            reference the saved search <i>name</i> use $name$; to reference
            <i>search</i> use $search$.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionPopulateLookupDest">
            <summary>
            Sets the name of the lookup table or lookup path to populate.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionPopulateLookupHostname">
            <summary>
            Sets the host name used in the web link (URL) that is sent 
            in populate-lookup alerts.
            </summary>
            <remarks>
            This property's value can be in either of two forms:
            <list type="bullet">
              <item><i>hostname</i> (for example, "splunkserver", 
                "splunkserver.example.com")</item>
              <item><i>protocol://hostname:port</i> (for example, 
                "http://splunkserver:8000", 
                "https://splunkserver.example.com:443")</item>
            </list>
            <para>
            When set to a simple hostname, the protocol and port that are 
            configured within Splunk are used to construct the base of the URL.
            When set to 'http://...', it is used verbatim. This means the 
            correct port must be specified if it is not the default port for 
            http or https. This is useful in cases in which the Splunk server
            is not aware of how to construct a URL that can be externally
            referenced, such as single sign on (SSO) environments, other
            proxies, or when the Splunk server hostname is not generally
            resolvable. 
            </para>
            <para>
            When this property is set to an empty string, the default
            behavior is used.
            </para>
            <para>This property's default value is the current hostname
            provided by the operating system, or "localhost". 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionPopulateLookupMaxResults">
            <summary>
            Sets the maximum number of search results to send in 
            populate-lookup alerts.
            </summary>
            <remarks>
            <para>
            This property's default value is "100".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionPopulateLookupMaxTime">
            <summary>
            Sets the maximum amount of time an alert action takes before the 
            action is canceled. 
            </summary>
            <remarks>
            <para>The property value's valid format is an <i>integer</i>
            followed by a time unit ("s" for seconds, "m" for minutes, "h" for
            hours, or "d" for days). For instance, "2s" means 2 seconds.
            </para>
            <para>
            This property's default value is "5m".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionPopulateLookupTrackAlert">
            <summary>
            Sets a value indicating whether running this 
            populate-lookup action results in a trackable alert.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionPopulateLookupTtl">
            <summary>
            Sets the minimum time-to-live (TTL), in seconds, of search 
            artifacts if this populate-lookup action is triggered. 
            </summary>
            <remarks>
            <para>If the value is a number followed by "p", it is the number of
            scheduled search periods.</para>
            <para>If no actions are triggered, the artifacts will have their 
            TTL determined by the "dispatch.ttl" attribute in 
            savedsearches.conf.
            </para>
            <para>This property's default value is "10p".</para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionRssCommand">
            <summary>
            Sets the search command (or pipeline) that runs the action.
            </summary>
            <remarks>
            <para>
            Generally the command is a template search pipeline that is
            realized with values from the saved search. To reference saved
            search field values, wrap them in the '$' symbol. For example, to
            reference the saved search <i>name</i> use $name$; to reference
            <i>search</i> use $search$.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionRssHostname">
            <summary>
            Sets the host name used in the web link (URL) that is sent 
            in RSS alerts.
            </summary>
            <remarks>
            This property's value can be in either of two forms:
            <list type="bullet">
              <item><i>hostname</i> (for example, "splunkserver", 
                "splunkserver.example.com")</item>
              <item><i>protocol://hostname:port</i> (for example, 
                "http://splunkserver:8000", 
                "https://splunkserver.example.com:443")</item>
            </list>
            <para>
            When set to a simple hostname, the protocol and port that are 
            configured within Splunk are used to construct the base of the URL.
            When set to 'http://...', it is used verbatim. This means the 
            correct port must be specified if it is not the default port for 
            http or https. This is useful in cases in which the Splunk server
            is not aware of how to construct a URL that can be externally
            referenced, such as single sign on (SSO) environments, other
            proxies, or when the Splunk server hostname is not generally
            resolvable. 
            </para>
            <para>
            When this property is set to an empty string, the default
            behavior is used.
            </para>
            <para>This property's default value is the current hostname
            provided by the operating system, or "localhost". 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionRssMaxResults">
            <summary>
            Sets the maximum number of search results to send in RSS alerts.
            </summary>
            <remarks>
            <para>
            This property's default value is "100".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionRssMaxTime">
            <summary>
            Sets the maximum amount of time an RSS alert action takes 
            before the action is canceled.
            </summary>
            <remarks>
            <para>The property value's valid format is an <i>integer</i>
            followed by a time unit ("s" for seconds, "m" for minutes, "h" for
            hours, or "d" for days). For instance, "2s" means 2 seconds.
            </para>
            <para>
            This property's default value is "1m".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionRssTrackAlert">
            <summary>
            Sets a value indicating whether running this RSS action 
            results in a trackable alert.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionRssTtl">
            <summary>
            Sets the minimum time-to-live (TTL) of search artifacts if
            this RSS action is triggered. 
            </summary>
            <remarks>
            <para>
            If the value is a number followed by "p", it is the number of
            scheduled search periods.
            </para>
            <para>
            If no actions are triggered, the artifacts will have their TTL
            determined by the "dispatch.ttl" attribute in savedsearches.conf.
            </para>
            <para>
            This property's default value is "86400" (equal to 24 hours).
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionScriptCommand">
            <summary>
            Sets the search command (or pipeline) that runs the action.
            </summary>
            <remarks>
            <para>
            Generally the command is a template search pipeline that is
            realized with values from the saved search. To reference saved
            search field values, wrap them in the '$' symbol. For example, to
            reference the saved search <i>name</i> use $name$; to reference
            <i>search</i> use $search$.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionScriptFilename">
            <summary>
            Sets the file name of the script to call.
            </summary>
            <remarks>
            <para>
            This property is required if script action is enabled 
            <see cref="P:Splunk.SavedSearch.IsActionScript"/> is set to true).
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionScriptHostname">
            <summary>
            Sets the host name used in the web link (URL) that is sent 
            in script alerts.
            </summary>
            <remarks>
            This property's value can be in either of two forms:
            <list type="bullet">
              <item><i>hostname</i> (for example, "splunkserver", 
                "splunkserver.example.com")</item>
              <item><i>protocol://hostname:port</i> (for example, 
                "http://splunkserver:8000", 
                "https://splunkserver.example.com:443")</item>
            </list>
            <para>
            When set to a simple hostname, the protocol and port that are 
            configured within Splunk are used to construct the base of the URL.
            When set to 'http://...', it is used verbatim. This means the 
            correct port must be specified if it is not the default port for 
            http or https. This is useful in cases in which the Splunk server
            is not aware of how to construct a URL that can be externally
            referenced, such as single sign on (SSO) environments, other
            proxies, or when the Splunk server hostname is not generally
            resolvable. 
            </para>
            <para>
            When this property is set to an empty string, the default
            behavior is used.
            </para>
            <para>This property's default value is the current hostname
            provided by the operating system, or "localhost". 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionScriptMaxResults">
            <summary>
            Sets the maximum number of search results to send in script alerts.
            </summary>
            <remarks>
            <para>
            This property's default value is "100".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionScriptMaxTime">
            <summary>
            Sets the maximum amount of time a script action takes before
            the action is canceled.
            </summary>
            <remarks>
            <para>
            The property value's valid format is an <i>integer</i>
            followed by a time unit ("s" for seconds, "m" for minutes, "h" for
            hours, or "d" for days). For instance, "2s" means 2 seconds.
            </para>
            <para>This property's default value is "5m".</para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionScriptTrackAlert">
            <summary>
            Sets a value indicating whether running this script 
            action results in a trackable alert.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionScriptTtl">
            <summary>
            Sets the minimum time-to-live (TTL) of search artifacts if
            this script action is triggered. 
            </summary>
            <remarks>
            <para>
            If the value is a number followed by "p", it is the number of
            scheduled search periods.
            </para>
            <para>
            If no actions are triggered, the artifacts will have their TTL
            determined by the "dispatch.ttl" attribute in savedsearches.conf.
            </para>
            <para>
            This property's default value is "600" (equal to 10 minutes).
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActtionSummaryIndexName">
            <summary>
            Sets the name of the summary index where the results of the 
            scheduled search are saved.
            </summary>
            <remarks>
            <para>This property's default value is "summary".</para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionSummaryIndexCommand">
            <summary>
            Sets the search command (or pipeline) that runs the action.
            </summary>
            <remarks>
            <para>
            Generally the command is a template search pipeline that is
            realized with values from the saved search. To reference saved
            search field values, wrap them in the '$' symbol. For example, to
            reference the saved search <i>name</i> use $name$; to reference
            <i>search</i> use $search$.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionSummaryIndexHostname">
            <summary>
            Sets the host name used in the web link (URL) that is sent 
            in summary-index alerts.
            </summary>
            <remarks>
            This property's value can be in either of two forms:
            <list type="bullet">
              <item><i>hostname</i> (for example, "splunkserver", 
                "splunkserver.example.com")</item>
              <item><i>protocol://hostname:port</i> (for example, 
                "http://splunkserver:8000", 
                "https://splunkserver.example.com:443")</item>
            </list>
            <para>
            When set to a simple hostname, the protocol and port that are 
            configured within Splunk are used to construct the base of the URL.
            When set to 'http://...', it is used verbatim. This means the 
            correct port must be specified if it is not the default port for 
            http or https. This is useful in cases in which the Splunk server
            is not aware of how to construct a URL that can be externally
            referenced, such as single sign on (SSO) environments, other
            proxies, or when the Splunk server hostname is not generally
            resolvable. 
            </para>
            <para>
            When this property is set to an empty string, the default
            behavior is used.
            </para>
            <para>This property's default value is the current hostname
            provided by the operating system, or "localhost". 
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionSummaryIndexInline">
            <summary>
            Sets a value indicating whether to run the summary 
            indexing action as part of the scheduled search.
            </summary>
            <remarks>
            <para>
            This property is only considered if the summary-index action is
            enabled and is always executed—that is, if <b>counttype =
            always</b>.
            </para>
            <para>
            This property's default value is true.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionSummaryIndexMaxResults">
            <summary>
            Sets the maximum number of search results to send in summary-index
            alerts.
            </summary>
            <remarks>
            <para>
            This property's default value is "100".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionSummaryIndexMaxTime">
            <summary>
            Sets the maximum amount of time a summary-index action takes before 
            the action is canceled. 
            </summary>
            <remarks>
            <para>The property value's valid format is an <i>integer</i>
            followed by a time unit ("s" for seconds, "m" for minutes, "h" for
            hours, or "d" for days). For instance, "2s" means 2 seconds.
            </para>
            <para>This property's default value is "5m".</para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionSummaryIndexTrackAlert">
            <summary>
            Sets a value indicating whether running this 
            summary-index action results in a trackable alert.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.ActionSummaryIndexTtl">
            <summary>
            Sets the minimum time-to-live (TTL) of search artifacts if
            this summary-index action is triggered. 
            </summary>
            <remarks>
            <para>If the value is a number followed by "p", it is the number of
            scheduled search periods.</para>
            <para>If no actions are triggered, the artifacts will have their TTL
            determined by the "dispatch.ttl" attribute in savedsearches.conf.
            </para>
            <para>This property's default value is "10p".</para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.Actions">
            <summary>
            Sets a comma-separated list of actions to enable.
            </summary>
            <remarks>
            <para>
            This property's value can be one of the following strings:
            <list type="bullet">
            <item>"email"</item>
            <item>"populate_lookup"</item> 
            <item>"rss"</item>
            <item>"script"</item>
            <item>"summary_index"</item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.AlertDigestMode">
            <summary>
            Sets a value indicating whether Splunk applies the alert 
            actions to the entire result set (digest) or to each individual 
            search result (per result).
            </summary>
            <remarks>
            <para>
            This property's default value is true.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.AlertExpires">
            <summary>
            Sets the amount of time to show the alert in the dashboard.
            The valid format is a number followed by a time unit ("s", "m", "h",
            or "d").
            </summary>
            <remarks>
            <para>The property value's valid format is an <i>integer</i>
            followed by a time unit ("s" for seconds, "m" for minutes, "h" for
            hours, or "d" for days). For instance, "2s" means 2 seconds.
            </para>
            <para>
            This property's default value is "24h".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.AlertSeverity">
            <summary>
            Sets the alert severity level.
            </summary>
            <remarks>
            <para>
            The property's value can be one of the following integers:
            <list type="bullet">
            <item>"1" indicates DEBUG</item>
            <item>"2" indicates INFO</item>
            <item>"3" indicates WARN</item>
            <item>"4" indicates ERROR</item>
            <item>"5" indicates SEVERE</item>
            <item>"6" indicates FATAL</item>
            </list>
            </para>
            <para>
            This property's default value is "3".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.AlertSuppress">
            <summary>
            Sets a value indicating whether alert suppression is 
            enabled for this search.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.AlertSuppressFields">
            <summary>
            Sets a comma-delimeted list of fields to use for alert 
            suppression when doing per-result alerting.
            </summary>
            <remarks>
            <para>
            This property is required if suppression is turned on and
            per-result alerting is enabled.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.AlertSuppressPeriod">
            <summary>
            Sets the suppression period, which is only valid if
            <see cref="P:Splunk.SavedSearchDispatchArgs.AlertSuppress"/> is enabled.
            </summary>
            <remarks>
            <para>The property value's valid format is an <i>integer</i>
            followed by a time unit ("s" for seconds, "m" for minutes, "h" for
            hours, or "d" for days). For instance, "2s" means 2 seconds.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.AlertTrack">
            <summary>
            Sets a keyword value indicating how to track the actions
            triggered by this saved search. 
            </summary>
            <remarks>
            <para>
            This property's value can be one of the following keywords:
            <list type="bullet">
            <item>"true" indicates enabled</item>
            <item>"false" indicates disabled</item>
            <item>"auto" indicates that tracking is based on the setting of
            each action</item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.AlertComparator">
            <summary>
            Sets the alert comparator for alert triggering. 
            </summary>
            <remarks>
            <para>
            This property's value can be one of the following strings:
            <list type="bullet">
            <item>"greater than"</item>
            <item>"less than"</item> 
            <item>"equal to"</item> 
            <item>"rises by"</item>
            <item>"drops by"</item> 
            <item>"rises by perc"</item>
            <item>"drops by perc"</item>
            </list>
            </para>
            <para>
            This property is used with <see cref="P:Splunk.SavedSearchDispatchArgs.AlertThreshold"/> to 
            trigger alert actions.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.AlertCondition">
            <summary>
            Sets a conditional search that is evaluated against the 
            results of the saved search.
            </summary>
            <remarks>
            <para>
            Alerts are triggered if the specified search yields a non-empty 
            search result list.
            </para>
            <para>
            This property's default value is an empty string.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.AlertThreshold">
            <summary>
            Sets the value to compare to before triggering the alert action. 
            </summary>
            <remarks>
            <para>
            If this value is expressed as a percentage, it indicates the
            value to use when <see cref="P:Splunk.SavedSearchDispatchArgs.AlertComparator"/> is set to "rises by 
            perc" or "drops by perc."
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.AlertType">
            <summary>
            Sets a value indicating what to base the alert on. 
            </summary>
            <remarks>
            <para>
            This property's value can be one of the following strings:
            <list type="bullet">
            <item>"always"</item>
            <item>"custom"</item> 
            <item>"number of events"</item>
            <item>"number of hosts"</item>
            <item>"number of sources"</item>
            </list>
            </para>
            <para>
            This property is overridden by the <see cref="P:Splunk.SavedSearchDispatchArgs.AlertCondition"/> 
            property if specified.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.CronSchedule">
            <summary>
            Sets the cron-style schedule for running this saved search.
            </summary>
            <remarks>
            <para>
            Use standard 
            <see href="http://en.wikipedia.org/wiki/Cron">cron</see> notation
            to define your scheduled search interval. The cron format can 
            accept this type of notation: "00,20,40 * * * *", which runs the 
            search every hour at hh:00, hh:20, and hh:40. Along the same lines,
            a cron of 03,23,43 * * * * runs the search every hour at hh:03, 
            hh:23, and hh:43. 
            </para>
            <para>Splunk recommends that you schedule your searches so that
            they are staggered over time. This reduces system load. Running 
            all of them every 20 minutes (*/20) means they would all launch at 
            hh:00 (20, 40) and might slow your system every 20 minutes.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.Description">
            <summary>
            Sets a human-readable description of this saved search.
            </summary>
            <remarks>
            <para>
            This property's default value is an empty string.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.Disabled">
            <summary>
            Sets a value indicating whether the saved search is 
            disabled. 
            </summary>
            <remarks>
            <para>
            Disabled searches are not visible in Splunk Web.
            </para>
            <para>
            This property's default value is false.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.DispatchMaxCount">
            <summary>
            Sets the maximum number of results before finalizing the search. 
            </summary>
            <remarks>
            <para>
            This property's default value is "500000".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.DispatchMaxTime">
            <summary>
            Sets the maximum amount of time in seconds before finalizing the 
            search.
            </summary>
            <remarks>
            <para>
            This property's default value is "0".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.DispatchSpawnSubprocess">
            <summary>
            Sets an integer value that specifies how frequently Splunk runs the
            search process when running this saved search.
            </summary>
            <remarks>
            <para>
            Searches against indexes must run in a separate process.
            </para>
            <para>
            This property's default value is true.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.DisplayView">
            <summary>
            Sets the default UI view name (not label) in which to load the 
            results.
            </summary>
            <remarks>
            <para>
            Access is dependent on the user having sufficient permissions.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.IsScheduled">
            <summary>
            Sets a value indicating whether this search is run 
            on a schedule.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.IsVisible">
            <summary>
            Sets a value indicating whether the search should be 
            visible in the saved search list.
            </summary>
            <remarks>
            <para>
            This property's default value is true.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.MaxConcurrent">
            <summary>
            Sets the maximum number of concurrent instances of this 
            search the scheduler is allowed to run.
            </summary>
            <remarks>
            <para>
            This property's default value is "1".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.RealtimeSchedule">
            <summary>
            Sets a value indicating how the scheduler computes the next run
            time of a scheduled search.
            </summary>
            <remarks>
            <para>
            This property's possible values are the following:
            <list type="bullet">
            <item>"0" indicates the scheduler bases its determination of the
            next scheduled search on the last search execution time. This is
            called continuous scheduling. The scheduler will never skip
            scheduled execution periods. However, the execution of the saved
            search might fall behind depending on the scheduler's load. Use
            continuous scheduling whenever you enable the summary index
            option. </item>
            <item>"1" indicates the scheduler is executing the searches running
            over the most recent time range, and therefore might skip some
            execution periods to keep up.</item>
            </list>
            </para>
            <para>
            This property's default value is "1".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.RequestUIDispatchApp">
            <summary>
            Sets a string value specifying the app in which Splunk Web
            dispatches this search.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.RequestUIDispatchView">
            <summary>
            Sets a string value specifying the view in which Splunk Web
            displays this search.
            </summary>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.RestartOnSearchPeerAdd">
            <summary>
            Sets a value indicating whether a real-time search 
            managed by the scheduler is restarted when a search peer becomes 
            available for this saved search.
            </summary>
            <remarks>
            <para>
            The peer can be a newly added peer or a peer that has been down
            and has become available.
            </para>
            <para>
            This property's default value is true.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.RunOnStartup">
            <summary>
            Sets a value indicating whether this search is run when 
            Splunk starts.
            </summary>
            <remarks>
            <para>
            If the search is not run on startup, it runs at the next scheduled 
            time.
            </para>
            <para>
            Splunk recommends that you set this property to true for scheduled
            searches that populate lookup tables.
            </para>
            <para>
            This property's default value is false.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.SavedSearchDispatchArgs.VSID">
            <summary>
            Sets the view state ID that is associated with the view 
            specified in the <see cref="P:Splunk.SavedSearchDispatchArgs.DisplayView"/> property.
            </summary>
            <remarks>
            <para>
            This ID corresponds to a stanza in the viewstates.conf 
            configuration file.
            </para>
            </remarks>
        </member>
        <member name="T:Splunk.SavedSearchCollection">
            <summary>
            The <see cref="T:Splunk.SavedSearchCollection"/> class represents the 
            collection of <see cref="T:Splunk.SavedSearch"/>es.
            </summary>
        </member>
        <member name="M:Splunk.SavedSearchCollection.#ctor(Splunk.Service)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Splunk.SavedSearchCollection"/> class.
            </summary>
            <param name="service">The connected service.</param>
        </member>
        <member name="M:Splunk.SavedSearchCollection.#ctor(Splunk.Service,Splunk.Args)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Splunk.SavedSearchCollection"/> class.
            </summary>
            <param name="service">The connected service.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Splunk.SavedSearchCollection.Create(System.String)">
            <summary>
            Unsupported. Do not use. Creates a saved search without a search 
            string.
            </summary>
            <param name="name">Search name.</param>
            <returns>Throws an exception.</returns>
        </member>
        <member name="M:Splunk.SavedSearchCollection.Create(System.String,System.String)">
            <summary>
            Creates a saved search from a name and search expression.
            </summary>
            <param name="name">The name of the search.</param>
            <param name="search">The search string.</param>
            <returns>The saved search.</returns>
        </member>
        <member name="M:Splunk.SavedSearchCollection.Create(System.String,System.String,Splunk.Args)">
            <summary>
            Creates a saved search from a name, search expression, and
            additional arguments.
            /// </summary>
            <param name="name">The name of the saved search.</param>
            <param name="search">The search string.</param>
            <param name="args">The arguments.</param>
            <returns>The saved search.</returns>
        </member>
        <member name="T:Splunk.ScriptInput">
            <summary>
            The <see cref="T:Splunk.ScriptInput"/> class represents a scripted data input.
            </summary>
        </member>
        <member name="M:Splunk.ScriptInput.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.ScriptInput"/> class.
            </summary>
            <param name="service">The connected service.</param>
            <param name="path">The path.</param>
        </member>
        <member name="P:Splunk.ScriptInput.EndTime">
            <summary>
            Gets the time at which the scripted input stopped running.
            </summary>
        </member>
        <member name="P:Splunk.ScriptInput.Group">
            <summary>
            Gets the OS group of commands for this scripted input.
            </summary>
        </member>
        <member name="P:Splunk.ScriptInput.Host">
            <summary>
            Gets or sets the source host for this scripted input.
            </summary>
        </member>
        <member name="P:Splunk.ScriptInput.Index">
            <summary>
            Gets or sets the index name for this scripted input.
            </summary>
        </member>
        <member name="P:Splunk.ScriptInput.Interval">
            <summary>
            Gets or sets the frequency for running this scripted input.
            </summary>
        </member>
        <member name="P:Splunk.ScriptInput.Kind">
            <summary>
            Gets the input type of this object, Script.
            </summary>
        </member>
        <member name="P:Splunk.ScriptInput.PassAuth">
            <summary>
            Gets or sets the username that this scripted input runs under.
            </summary>
        </member>
        <member name="P:Splunk.ScriptInput.Source">
            <summary>
            Gets or sets the source of events from this scripted input.
            </summary>
        </member>
        <member name="P:Splunk.ScriptInput.SourceType">
            <summary>
            Gets or sets the source type of events from this scripted input.
            </summary>
        </member>
        <member name="P:Splunk.ScriptInput.StartTime">
            <summary>
            Gets the time when the script was started.
            </summary>
        </member>
        <member name="P:Splunk.ScriptInput.Disabled">
            <summary>
            Sets a value indicating whether the scripted input is enabled or 
            disabled.
            </summary>
        </member>
        <member name="P:Splunk.ScriptInput.RenameSource">
            <summary>
            Sets the source name for events from this scripted input. The same 
            source should not be used for multiple data inputs.
            </summary>
        </member>
        <member name="T:Splunk.ScriptInputArgs">
            <summary>
            The <see cref="T:Splunk.ScriptInputArgs"/> class extends <see cref="T:Splunk.Args"/> for 
            <see cref="T:Splunk.EventType"/> creation properties.
            </summary>
        </member>
        <member name="P:Splunk.ScriptInputArgs.Disabled">
            <summary>
            Sets a value indicating whether the input script is disabled.
            </summary>
        </member>
        <member name="P:Splunk.ScriptInputArgs.Host">
            <summary>
            Sets the host for events from this input. 
            </summary>
            <remarks>
            This property's default value is whichever host sent the event.
            </remarks>
        </member>
        <member name="P:Splunk.ScriptInputArgs.Index">
            <summary>
            Sets the index for events from this input. 
            </summary>
            <remarks>
            This property's default value is the main index.
            </remarks>
        </member>
        <member name="P:Splunk.ScriptInputArgs.Interval">
            <summary>
            Sets the frequency of script execution. 
            </summary>
            <remarks>
            <para>
            This property's valid values are either an integer, in seconds, or
            a cron schedule. If a cron schedule is specified, the script is
            not executed on start-up. 
            </para>
            <para>
            This property's default value is 60 seconds.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.ScriptInputArgs.PassAuth">
            <summary>
            Sets the user to run the script as. If you provide a username, 
            Splunk generates an auth token for that user and passes it to the 
            script.
            </summary>
        </member>
        <member name="P:Splunk.ScriptInputArgs.RenameSource">
            <summary>
            Sets the new name for the source field for the script.
            </summary>
        </member>
        <member name="P:Splunk.ScriptInputArgs.Source">
            <summary>
            Sets the source key's initial value for events from this input.
            As a convenience, the chosen string is prepended with
            "source::".
            </summary>
            <remarks>
            <para>
            The key is used during parsing and indexing, in particular to set 
            the source field during indexing. It is also the source field used 
            at search time.
            </para>
            <para>Overriding the source key is generally not recommended. 
            Typically, the input layer provides a more accurate string to aid 
            in problem analysis and investigation, accurately recording the file
            from which the data was retrieved. Consider use of source types, 
            tagging, and search wildcards before overriding this value. </para>
            <para>
            This property's default value is the input file path.</para>
            </remarks>
        </member>
        <member name="P:Splunk.ScriptInputArgs.SourceType">
            <summary>
            Sets the sourcetype key's initial value for events from this input.
            If unset, Splunk picks a sourcetype based on various aspects of 
            the data. As a convenience, the chosen string is prepended with 
            "sourcetype::". 
            </summary>
            <remarks>
            <para>
            The key is used during parsing and indexing, in particular to set  
            the sourcetype field during indexing. It is also the source type 
            field used at search time. Primarily used to explicitly declare 
            the source type for this data, as opposed to allowing it to be 
            determined via automated methods. This is typically important both 
            for searchability and for applying the relevant configuration for 
            this type of data during parsing and indexing.
            </para>
            <para>
            This property has no default value. 
            </para>
            </remarks>
        </member>
        <member name="T:Splunk.Settings">
            <summary>
            The <see cref="T:Splunk.Settings"/> class represents configuration information 
            for an instance of Splunk.
            </summary>
        </member>
        <member name="M:Splunk.Settings.#ctor(Splunk.Service)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Settings"/> class.
            </summary>
            <param name="service">The service</param>
        </member>
        <member name="M:Splunk.Settings.Update(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Updates the settings with the values previously set using the 
            <see cref="T:Splunk.Settings"/> properties, and any additional specified 
            arguments. 
            </summary>
            <param name="args">The key/value pairs to update.</param>
            <remarks>
            The specified arguments take precedence over the values that were 
            set using the <see cref="T:Splunk.Settings"/> properties. The post message 
            is sent to a non-normal endpoint.
            </remarks>
        </member>
        <member name="M:Splunk.Settings.Update">
            <summary>
            Updates the entity with the accumulated arguments, established by 
            this class. The post message is sent to a non-normal endpoint.
            </summary>
        </member>
        <member name="P:Splunk.Settings.SplunkDB">
            <summary>
            Gets or sets the fully-qualified path to the directory containing 
            the default index for this instance of Splunk.
            </summary>
        </member>
        <member name="P:Splunk.Settings.SplunkHome">
            <summary>
            Gets the fully-qualified path to the Splunk installation directory.
            </summary>
        </member>
        <member name="P:Splunk.Settings.EnableSplunkWebSSL">
            <summary>
            Gets or sets a value indicating whether SSL is enabled on the
            Splunk management port.
            </summary>
        </member>
        <member name="P:Splunk.Settings.Host">
            <summary>
            Gets or sets the default host name to use for data inputs.
            </summary>
        </member>
        <member name="P:Splunk.Settings.HttpPort">
            <summary>
            Gets or sets the port on which Splunk Web is listening for this 
            instance of Splunk. The port number defaults to "8000". 
            </summary>
            <remarks>
            Be aware that the port must be present for Splunk Web to start. If 
            this value is omitted or set to "0", the server will not start an 
            HTTP listener.
            </remarks>
        </member>
        <member name="P:Splunk.Settings.MgmtPort">
            <summary>
            Gets or sets the IP address:port number for Splunkd.
            </summary>
        </member>
        <member name="P:Splunk.Settings.MinFreeSpace">
            <summary>
            Gets or sets the amount of free disk space that is required for 
            Splunk to continue searching and indexing.
            </summary>
        </member>
        <member name="P:Splunk.Settings.Pass4SymmKey">
            <summary>
            Gets or sets the string that is prepended to the Splunk symmetric 
            key to generate the final key that used to sign all traffic 
            between master and slave licensers.
            </summary>
        </member>
        <member name="P:Splunk.Settings.ServerName">
            <summary>
            Gets or sets the name that is used to identify this Splunk instance 
            for features such as distributed search.
            </summary>
        </member>
        <member name="P:Splunk.Settings.SessionTimeout">
            <summary>
            Gets or sets the amount of time before a user session times out.
            </summary>
            <remarks>
            A valid format is <i>number</i> followed by a time unit ("s", "h",
            or "d").
            </remarks>
        </member>
        <member name="P:Splunk.Settings.StartWebServer">
            <summary>
            Gets or sets a value indicating whether the instance is 
            configured to start Splunk Web.
            </summary>
        </member>
        <member name="P:Splunk.Settings.TrustedIP">
            <summary>
            Gets or sets the IP address of the authenticating proxy. 
            </summary>
        </member>
        <member name="T:Splunk.TcpConnections">
            <summary>
            The <see cref="T:Splunk.TcpConnections"/> class represents the TCP connections, 
            related to Inputs.
            </summary>
        </member>
        <member name="M:Splunk.TcpConnections.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.TcpConnections"/> 
            class.
            </summary>
            <param name="service">The connected service.</param>
            <param name="path">The path.</param>
        </member>
        <member name="P:Splunk.TcpConnections.Connection">
            <summary>
            Gets the connection.
            </summary>
        </member>
        <member name="P:Splunk.TcpConnections.Servername">
            <summary>
            Gets the server name.
            </summary>
        </member>
        <member name="T:Splunk.TcpInput">
            <summary>
            The <see cref="T:Splunk.TcpInput"/> class represents a raw TCP data input.
            This differs from a cooked TCP input in that this TCP input is in raw
            form, and is not processed (or "cooked").
            </summary>
        </member>
        <member name="M:Splunk.TcpInput.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.TcpInput"/> class.
            </summary>
            <param name="service">The connected service.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Splunk.TcpInput.Connections">
            <summary>
            Returns an object that contains the inbound raw TCP connections.
            </summary>
            <returns>The connections.</returns>
        </member>
        <member name="P:Splunk.TcpInput.ConnectionHost">
            <summary>
            Gets or sets the host of the remote server that sends data. 
            </summary>
            <remarks>
            <para>
            This property's possible values are:
            <list type="bullet">
            <item><b>"ip"</b> sets the host to the IP address of the remote 
            server sending data.</item>
            <item><b>"dns"</b> sets the host to the reverse DNS entry for the
            IP address of the remote server sending data.</item>
            <item><b>"none"</b> leaves the host as specified in inputs.conf,
            which is typically the Splunk system hostname.</item>
            </list>
            </para>
            <para>
            This property's default value is "ip".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.TcpInput.Disabled">
            <summary>
            Sets a value indicating whether this input is disabled.
            </summary>
        </member>
        <member name="P:Splunk.TcpInput.Group">
            <summary>
            Gets the group of this TCP input.
            </summary>
        </member>
        <member name="P:Splunk.TcpInput.Host">
            <summary>
            Gets or sets the source host of this TCP input where this indexer 
            gets its data.
            </summary>
        </member>
        <member name="P:Splunk.TcpInput.Index">
            <summary>
            Gets or sets the index name of this TCP input.
            </summary>
        </member>
        <member name="P:Splunk.TcpInput.Kind">
            <summary>
            Gets the input type of this object, Tcp (raw).
            </summary>
        </member>
        <member name="P:Splunk.TcpInput.Queue">
            <summary>
            Gets or sets the queue for this TCP input. 
            </summary>
            <remarks>
            This property's valid values are
            "parsingQueue" and "indexQueue".
            </remarks>
        </member>
        <member name="P:Splunk.TcpInput.RestrictToHost">
            <summary>
            Gets the incoming host restriction for this TCP input. When
            specified, this input only accepts data from the specified host. 
            </summary>
        </member>
        <member name="P:Splunk.TcpInput.Source">
            <summary>
            Gets or sets the initial source key for this TCP input.  
            This property's value is typically the input file path.
            </summary>
        </member>
        <member name="P:Splunk.TcpInput.SourceType">
            <summary>
            Gets or sets the source type for events from this TCP input.
            </summary>
        </member>
        <member name="P:Splunk.TcpInput.SSL">
            <summary>
            Gets or sets a value indicating whether this TCP input is using 
            secure socket layer (SSL).
            </summary>
        </member>
        <member name="P:Splunk.TcpInput.RawTcpDoneTimeout">
            <summary>
            Sets the timeout value for adding a "Done" key. 
            </summary>
            <remarks>
            If a connection over the input port specified by name remains 
            idle after receiving data for this specified number of seconds, it 
            adds a "Done" key, implying that the last event has been completely 
            received.
            </remarks>
        </member>
        <member name="T:Splunk.TcpInputArgs">
            <summary>
            The <see cref="T:Splunk.TcpInputArgs"/> class extends <see cref="T:Splunk.Args"/> for 
            raw <see cref="T:Splunk.TcpInput"/> creation properties.
            </summary>
        </member>
        <member name="P:Splunk.TcpInputArgs.Ssl">
            <summary>
            Sets a value indicating whether SSL is used.
            </summary>
        </member>
        <member name="P:Splunk.TcpInputArgs.ConnectionHost">
            <summary>
            Sets the host of the remote server that sends data. 
            </summary>
            <remarks>
            <para>
            This property's possible values are:
            <list type="bullet">
            <item><b>"ip"</b> sets the host to the IP address of the remote 
            server sending data.</item>
            <item><b>"dns"</b> sets the host to the reverse DNS entry for the
            IP address of the remote server sending data.</item>
            <item><b>"none"</b> leaves the host as specified in inputs.conf,
            which is typically the Splunk system hostname.</item>
            </list>
            </para>
            <para>
            This property's default value is "ip".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.TcpInputArgs.Disabled">
            <summary>
            Sets a value indicating whether this input is disabled.
            </summary>
        </member>
        <member name="P:Splunk.TcpInputArgs.Host">
            <summary>
            Sets the host from which the indexer gets data.
            </summary>
        </member>
        <member name="P:Splunk.TcpInputArgs.Index">
            <summary>
            Sets the index in which to store all event receieved by this input.
            </summary>
            <remarks>
            This property's default value is "default".
            </remarks>
        </member>
        <member name="P:Splunk.TcpInputArgs.Queue">
            <summary>
            Sets where the input processor should deposit the events it reads. 
            </summary>
            <remarks>
            <para>
            This property's valid values are:
            <list type="bullet">
            <item><b>"parsingQueue"</b> applies props.conf and other parsing 
            rules to your data. For more information about 
            props.conf and rules for timestamping and linebreaking, refer to 
            the <see href="http://docs.splunk.com/Documentation/Splunk/latest/Data/Editinputs.conf">Edit inputs.conf</see>
            topic in the Getting Data In manual.</item>
            <item><b>"indexQueue"</b> sends your data directly into the
            index.</item>
            </list>
            </para>
            <para>
            This property's default value is "parsingQueue".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.TcpInputArgs.RawTcpDoneTimeout">
            <summary>
            Sets the timeout value for adding a Done-key, in seconds. 
            </summary>
            <remarks>
            <para>
            If a connection over the port specified by name 
            remains idle after receiving data for specified number of seconds, 
            it adds a Done-key. This implies the last event has been completely 
            received.
            </para>
            <para>
            This property's default value is "10".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.TcpInputArgs.RestrictToHost">
            <summary>
            Sets an input restriction to only allow this host to post data.
            </summary>
        </member>
        <member name="P:Splunk.TcpInputArgs.Source">
            <summary>
            Sets the source key's initial value. The key is used during 
            parsing/indexing, in particular to set the source field during 
            indexing. It is also the source field used at search time. As a 
            convenience, the chosen string is prepended with 'source::'. 
            </summary>
            <remarks>
            <para>
            Overriding the source key is generally not recommended. 
            Typically, the input layer provides a more accurate string to aid 
            in problem analysis and investigation, accurately recording the 
            file from which the data was retrieved. Consider use of source 
            types, tagging, and search wildcards before overriding this value. 
            </para>
            <para>
            This property's default value is the input file path.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.TcpInputArgs.SourceType">
            <summary>
            Sets the source type for events from this input. 
            </summary>
            <remarks>
            This property's default value is:
            <list type="bullet">
            <item>"audittrail" if signedaudit=true</item>
            <item>"fschange" if signedaudit=false</item>
            </list>
            </remarks>
        </member>
        <member name="T:Splunk.TcpSplunkInput">
            <summary>
            The <see cref="T:Splunk.TcpSplunkInput"/> class represents a Splunk-processed
            "cooked" TCP data input. This differs from a raw TCP input in that this 
            cooked TCP data is processed by Splunk and is not in raw form.
            </summary>
        </member>
        <member name="M:Splunk.TcpSplunkInput.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.TcpSplunkInput"/> class.
            </summary>
            <param name="service">The connected service.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Splunk.TcpSplunkInput.Connections">
            <summary>
            Returns an object containing the inbound raw TCP connections.
            </summary>
            <returns>The connections.</returns>
        </member>
        <member name="P:Splunk.TcpSplunkInput.ConnectionHost">
            <summary>
            Gets or sets the host of the remote server that sends data. 
            </summary>
            <remarks>
            <para>
            This property's possible values are:
            <list type="bullet">
            <item><b>"ip"</b> sets the host to the IP address of the remote 
            server sending data.</item>
            <item><b>"dns"</b> sets the host to the reverse DNS entry for the
            IP address of the remote server sending data.</item>
            <item><b>"none"</b> leaves the host as specified in inputs.conf,
            which is typically the Splunk system hostname.</item>
            </list>
            </para>
            <para>
            This property's default value is "ip".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.TcpSplunkInput.Disabled">
            <summary>
            Sets a value indicating whether this input is disabled.
            </summary>
        </member>
        <member name="P:Splunk.TcpSplunkInput.Group">
            <summary>
            Gets the group of this TCP input.
            </summary>
        </member>
        <member name="P:Splunk.TcpSplunkInput.Host">
            <summary>
            Gets or sets the source host of this TCP input where this indexer 
            gets its data.
            </summary>
        </member>
        <member name="P:Splunk.TcpSplunkInput.Index">
            <summary>
            Gets or sets the index name of this TCP input.
            </summary>
        </member>
        <member name="P:Splunk.TcpSplunkInput.Kind">
            <summary>
            Gets the input type of this object, Tcp (cooked).
            </summary>
        </member>
        <member name="P:Splunk.TcpSplunkInput.Queue">
            <summary>
            Gets or sets the queue for this TCP input. 
            </summary>
            <remarks>
            This property's valid values are:
            <list type="bullet">
            <item>"parsingQueue"</item> 
            <item>"indexQueue"</item> 
            </list>
            </remarks>
        </member>
        <member name="P:Splunk.TcpSplunkInput.RestrictToHost">
            <summary>
            Gets the incoming host restriction for this TCP input. When 
            specified, this input only accepts data from the specified host. 
            </summary>
        </member>
        <member name="P:Splunk.TcpSplunkInput.Source">
            <summary>
            Gets the initial source key for this TCP input. Typically 
            this value is the input file path.
            </summary>
        </member>
        <member name="P:Splunk.TcpSplunkInput.SourceType">
            <summary>
            Gets or sets the source type for events from this TCP input.
            </summary>
        </member>
        <member name="P:Splunk.TcpSplunkInput.SSL">
            <summary>
            Gets or sets a value indicating whether this TCP input is using 
            secure socket layer (SSL).
            </summary>
        </member>
        <member name="T:Splunk.TcpSplunkInputArgs">
            <summary>
            The <see cref="T:Splunk.TcpSplunkInputArgs"/> class extends <see cref="T:Splunk.Args"/> 
            for cooked <see cref="T:Splunk.TcpInput"/> creation properties.
            </summary>
        </member>
        <member name="P:Splunk.TcpSplunkInputArgs.Ssl">
            <summary>
            Sets a value indicating whether SSL is used.
            </summary>
        </member>
        <member name="P:Splunk.TcpSplunkInputArgs.ConnectionHost">
            <summary>
            Sets the host of the remote server that sends data. 
            </summary>
            <remarks>
            <para>
            This property's possible values are:
            <list type="bullet">
            <item><b>"ip"</b> sets the host to the IP address of the remote 
            server sending data.</item>
            <item><b>"dns"</b> sets the host to the reverse DNS entry for the
            IP address of the remote server sending data.</item>
            <item><b>"none"</b> leaves the host as specified in inputs.conf,
            which is typically the Splunk system hostname.</item>
            </list>
            </para>
            <para>
            This property's default value is "ip".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.TcpSplunkInputArgs.Disabled">
            <summary>
            Sets a value indicating whether this input is disabled.
            </summary>
        </member>
        <member name="P:Splunk.TcpSplunkInputArgs.Host">
            <summary>
            Sets the host from which the indexer gets data.
            </summary>
        </member>
        <member name="P:Splunk.TcpSplunkInputArgs.RestrictToHost">
            <summary>
            Sets an input restriction to only allow this host to post data.
            </summary>
        </member>
        <member name="T:Splunk.UdpConnections">
            <summary>
            The <see cref="T:Splunk.UdpConnections"/> class represents a UDP data input.
            </summary>
        </member>
        <member name="M:Splunk.UdpConnections.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.UdpConnections"/> 
            class.
            </summary>
            <param name="service">The connected service.</param>
            <param name="path">The path.</param>
        </member>
        <member name="P:Splunk.UdpConnections.Group">
            <summary>
            Gets the server name.
            </summary>
        </member>
        <member name="T:Splunk.UdpInput">
            <summary>
            The <see cref="T:Splunk.UdpInput"/> class represents a UDP data input.
            </summary>
        </member>
        <member name="M:Splunk.UdpInput.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.UdpInput"/> class.
            </summary>
            <param name="service">The connected service.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Splunk.UdpInput.Connections">
            <summary>
            Returns an object containing the inbound raw TCP connections.
            </summary>
            <returns>The connections.</returns>
        </member>
        <member name="P:Splunk.UdpInput.ConnectionHost">
            <summary>
            Gets or sets the host of the remote server that sends data. 
            </summary>
            <remarks>
            <para>
            This property's possible values are:
            <list type="bullet">
            <item><b>"ip"</b> sets the host to the IP address of the remote 
            server sending data.</item>
            <item><b>"dns"</b> sets the host to the reverse DNS entry for the
            IP address of the remote server sending data.</item>
            <item><b>"none"</b> leaves the host as specified in inputs.conf,
            which is typically the Splunk system hostname.</item>
            </list>
            </para>
            <para>
            This property's default value is "ip".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.UdpInput.Group">
            <summary>
            Gets the group of this TCP input.
            </summary>
        </member>
        <member name="P:Splunk.UdpInput.Host">
            <summary>
            Gets or sets the source host of this TCP input where this indexer 
            gets its data.
            </summary>
        </member>
        <member name="P:Splunk.UdpInput.Index">
            <summary>
            Gets or sets the index name of this TCP input.
            </summary>
        </member>
        <member name="P:Splunk.UdpInput.Kind">
            <summary>
            Gets the input type of this object, Udp.
            </summary>
        </member>
        <member name="P:Splunk.UdpInput.NoAppendingTimeStamp">
            <summary>
            Gets or sets a value indicating whether Splunk prepends a 
            timestamp and hostname to incoming events.
            </summary>
        </member>
        <member name="P:Splunk.UdpInput.NoPriorityStripping">
            <summary>
            Gets or sets a value indicating whether Splunk removes the 
            priority field from incoming events. 
            </summary>
        </member>
        <member name="P:Splunk.UdpInput.Queue">
            <summary>
            Gets or sets the queue for this TCP input. 
            </summary>
            <remarks>
            This property's valid values are:
            <list type="bullet">
            <item>"parsingQueue"</item>
            <item>"indexQueue"</item>
            </list>
            </remarks>
        </member>
        <member name="P:Splunk.UdpInput.Source">
            <summary>
            Gets or sets the initial source key for this TCP input. Typically 
            this value is the input file path.
            </summary>
        </member>
        <member name="P:Splunk.UdpInput.SourceType">
            <summary>
            Gets or sets the source type for events from this TCP input.
            </summary>
        </member>
        <member name="T:Splunk.UdpInputArgs">
            <summary>
            The <see cref="T:Splunk.UdpInputArgs"/> class extends <see cref="T:Splunk.Args"/> for 
            UdpInput creation properties.
            </summary>
        </member>
        <member name="P:Splunk.UdpInputArgs.ConnectionHost">
            <summary>
            Sets the host of the remote server that sends data. 
            </summary>
            <remarks>
            This property's valid values are:
            <list type="bullet">
            <item><b>"ip"</b> sets the host to the IP address of the remote 
            server sending data.</item>
            <item><b>"dns"</b> sets the host to the 
            reverse DNS entry for the IP address of the remote server sending 
            data.</item>
            <item><b>"none"</b> leaves the host as specified in
            inputs.conf, which is typically the Splunk system hostname.</item>
            </list>
            <para>
            This property's default value is "ip".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.UdpInputArgs.Host">
            <summary>
            Sets the host from which the indexer gets data.
            </summary>
        </member>
        <member name="P:Splunk.UdpInputArgs.Index">
            <summary>
            Sets the index in which to store all event receieved by this input.
            The default is "default".
            </summary>
        </member>
        <member name="P:Splunk.UdpInputArgs.NoAppendingTimestamp">
            <summary>
            Sets a value indicating whether Splunk prepends a timestamp 
            and host name to incoming events.
            </summary>
        </member>
        <member name="P:Splunk.UdpInputArgs.NoPriorityStripping">
            <summary>
            Sets a value indicating whether Splunk removes the priority
            field from incoming syslog events.
            </summary>
        </member>
        <member name="P:Splunk.UdpInputArgs.Queue">
            <summary>
            Sets where the input processor should deposit the events it reads. 
            Valid values are "parsingQueue" or "indexQueue". The default value
            is "parsingQueue".
            </summary>
            <remarks>
            <para>
            This property's valid values are:
            <list type="bullet">
            <item><b>"parsingQueue"</b> applies props.conf and other parsing 
            rules to your data. For more information about 
            props.conf and rules for timestamping and linebreaking, refer to 
            the <see href="http://docs.splunk.com/Documentation/Splunk/latest/Data/Editinputs.conf">Edit inputs.conf</see>
            topic in the Getting Data In manual.</item>
            <item><b>"indexQueue"</b> sends your data directly into the
            index.</item>
            </list>
            </para>
            <para>
            This property's default value is "parsingQueue".
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.UdpInputArgs.RestrictToHost">
            <summary>
            Sets an input restriction to only allow this host to post data.
            </summary>
        </member>
        <member name="P:Splunk.UdpInputArgs.Source">
            <summary>
            Sets the source key's initial value. The key is used during 
            parsing/indexing, in particular to set the source field during 
            indexing. It is also the source field used at search time. As a 
            convenience, the chosen string is prepended with 'source::'. 
            </summary>
            <remarks>
            <para>
            Overriding the source key is generally not recommended. 
            Typically, the input layer provides a more accurate string to aid 
            in problem analysis and investigation, accurately recording the 
            file from which the data was retrieved. Consider use of source 
            types, tagging, and search wildcards before overriding this value. 
            </para>
            <para>
            This property's default value is the input file path.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.UdpInputArgs.SourceType">
            <summary>
            Sets the source type for events from this input. 
            </summary>
            <remarks>
            This property's default value is:
            <list type="bullet">
            <item>"audittrail" if signedaudit=true</item>
            <item>"fschange" if signedaudit=false</item>
            </list>
            </remarks>
        </member>
        <member name="T:Splunk.Upload">
            <summary>
            The <see cref="T:Splunk.Upload"/> class represents an in-progress oneshot 
            upload. Use this class to query the state of the upload.
            </summary>
        </member>
        <member name="M:Splunk.Upload.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Upload"/> class.
            </summary>
            <param name="service">The connected service.</param>
            <param name="path">The path.</param>
        </member>
        <member name="P:Splunk.Upload.BytesIndexed">
            <summary>
            Gets the number of bytes that are currently indexed.
            </summary>
        </member>
        <member name="P:Splunk.Upload.Offset">
            <summary>
            Gets the current offset.
            </summary>
        </member>
        <member name="P:Splunk.Upload.SourcesIndexed">
            <summary>
            Gets the number of sources that are indexed.
            </summary>
        </member>
        <member name="P:Splunk.Upload.SpoolTime">
            <summary>
            Gets the start time of the upload that is being indexed.
            </summary>
            <returns>The index start time for this upload.</returns>
        </member>
        <member name="P:Splunk.Upload.UploadSize">
            <summary>
            Gets the current size.
            </summary>
        </member>
        <member name="T:Splunk.User">
            <summary>
            The <see cref="T:Splunk.User"/> class represents a Splunk user who is 
            registered on the current Splunk server.
            </summary>
        </member>
        <member name="M:Splunk.User.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.User"/> class.
            </summary>
            <param name="service">The service.</param>
            <param name="path">The path.</param>
        </member>
        <member name="P:Splunk.User.DefaultApp">
            <summary>
            Gets or sets the user's default app.
            </summary>
        </member>
        <member name="P:Splunk.User.DefaultAppIsUserOverride">
            <summary>
            Gets a value indicating whether the user's default app was set 
            specifically by the user.
            </summary>
        </member>
        <member name="P:Splunk.User.DefaultAppSourceRole">
            <summary>
            Gets the name of the role that the default app was inherited from, 
            or "system" if it was inherited from the default system setting. 
            </summary>
        </member>
        <member name="P:Splunk.User.Email">
            <summary>
            Gets or sets the user's email address.
            </summary>
        </member>
        <member name="P:Splunk.User.Password">
            <summary>
            Gets or sets the user's password.
            </summary>
        </member>
        <member name="P:Splunk.User.RealName">
            <summary>
            Gets or sets the the full name associated with this user.
            </summary>
        </member>
        <member name="P:Splunk.User.RestartBackgroundJobs">
            <summary>
            Sets a value indicating whether to restart background search 
            jobs when Splunk restarts. 
            </summary>
            <remarks>
            When this property is set to true, a background search job for 
            this user that has not completed is restarted when Splunk restarts.
            </remarks>
        </member>
        <member name="P:Splunk.User.Roles">
            <summary>
            Gets or sets the roles assigned to this user, as an array of 
            strings.
            </summary>
        </member>
        <member name="P:Splunk.User.Type">
            <summary>
            Gets the authentication method responsible for this user.
            </summary>
        </member>
        <member name="P:Splunk.User.Tz">
            <summary>
            Gets or sets the time zone to use when displaying dates for this 
            user.
            </summary>
        </member>
        <member name="T:Splunk.ServiceInfo">
            <summary>
            The <see cref="T:Splunk.ServiceInfo"/> class contains the basic service
            information.
            </summary>
        </member>
        <member name="M:Splunk.ServiceInfo.#ctor(Splunk.Service)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.ServiceInfo"/> class.
            </summary>
            <param name="service">The service</param>
        </member>
        <member name="P:Splunk.ServiceInfo.Build">
            <summary>
            Gets the Splunk build number.
            </summary>
        </member>
        <member name="P:Splunk.ServiceInfo.CpuArch">
            <summary>
            Gets the CPU architecture.
            </summary>
        </member>
        <member name="P:Splunk.ServiceInfo.Guid">
            <summary>
            Gets the GUID identifying this Splunk instance.
            </summary>
        </member>
        <member name="P:Splunk.ServiceInfo.LicenseLabels">
            <summary>
            Gets the array of license labels.
            </summary>
        </member>
        <member name="P:Splunk.ServiceInfo.LicenseKeys">
            <summary>
            Gets the array of the license keys for this Splunk instance.
            </summary>
        </member>
        <member name="P:Splunk.ServiceInfo.LicenseSignature">
            <summary>
            Gets the license signature for this Splunk instance.
            </summary>
        </member>
        <member name="P:Splunk.ServiceInfo.LicenseState">
            <summary>
            Gets the current license state of this Splunk instance.
            </summary>
        </member>
        <member name="P:Splunk.ServiceInfo.MasterGuid">
            <summary>
            Gets a GUID identifying the license master for this Splunk 
            instance.
            </summary>
        </member>
        <member name="P:Splunk.ServiceInfo.Mode">
            <summary>
            Gets the current mode of this Splunk instance.
            </summary>
        </member>
        <member name="P:Splunk.ServiceInfo.OsBuild">
            <summary>
            Gets the OS build of this Splunk instance.
            </summary>
        </member>
        <member name="P:Splunk.ServiceInfo.OsName">
            <summary>
            Gets the service's OS name (type).
            </summary>
        </member>
        <member name="P:Splunk.ServiceInfo.OsVersion">
            <summary>
            Gets the OS version of this Splunk instance.
            </summary>
        </member>
        <member name="P:Splunk.ServiceInfo.ServerName">
            <summary>
            Gets the server name of this Splunk instance.
            </summary>
        </member>
        <member name="P:Splunk.ServiceInfo.Version">
            <summary>
            Gets the version number of this Splunk instance.
            </summary>
        </member>
        <member name="P:Splunk.ServiceInfo.IsFree">
            <summary>
            Gets a value indicating whether this Splunk instance is running 
            under a free license.
            </summary>
        </member>
        <member name="P:Splunk.ServiceInfo.IsRtSearchEnabled">
            <summary>
            Gets a value indicating whether real-time search is enabled 
            for the service.
            </summary>
        </member>
        <member name="P:Splunk.ServiceInfo.IsTrial">
            <summary>
            Gets a value indicating whether this Splunk instance is 
            running under a trial license.
            </summary>
        </member>
        <member name="T:Splunk.Receiver">
            <summary>
            The <see cref="T:Splunk.Receiver"/> class exposes methods to send events to
            Splunk via the simple or streaming receiver endpoint.
            </summary>
        </member>
        <member name="F:Splunk.Receiver.service">
            <summary>
            A reference to the attached service.
            </summary>
        </member>
        <member name="M:Splunk.Receiver.#ctor(Splunk.Service)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Receiver"/> class.
            </summary>
            <param name="service">The <see cref="T:Splunk.Service"/>.</param>
        </member>
        <member name="M:Splunk.Receiver.Attach">
            <summary>
            Creates a socket to the Splunk server using the default index, and 
            default port.
            </summary>
            <returns>The <see cref="T:System.IO.Stream"/>.</returns>
        </member>
        <member name="M:Splunk.Receiver.Attach(System.String)">
            <summary>
            Creates a socket to the Splunk server using the named index and 
            default port.
            </summary>
            <param name="indexName">The index to write to.</param>
            <returns>The <see cref="T:System.IO.Stream"/>.</returns>
        </member>
        <member name="M:Splunk.Receiver.Attach(Splunk.Args)">
            <summary>
            Creates a socket to the Splunk server using the default index and 
            variable arguments.
            </summary>
            <param name="args">The variable arguments.</param>
            <returns>The socket.</returns>
        </member>
        <member name="M:Splunk.Receiver.Attach(System.String,Splunk.Args)">
            <summary>
            Creates a socket to the Splunk server using the named index and 
            variable arguments.
            </summary>
            <param name="indexName">The index name.</param>
            <param name="args">The variable arguments.</param>
            <returns>The socket.</returns>
        </member>
        <member name="M:Splunk.Receiver.Submit(System.String)">
            <summary>
            Submits the data using HTTP post, to the default index.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Splunk.Receiver.Submit(System.String,System.String)">
            <summary>
            Submits the data using HTTP post, to the named index.
            </summary>
            <param name="indexName">The index name.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Splunk.Receiver.Submit(Splunk.Args,System.String)">
            <summary>
            Submits the data using HTTP post, using variable arguments to the 
            default index.
            </summary>
            <param name="args">The variable arguments.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Splunk.Receiver.Submit(Splunk.ReceiverSubmitArgs,System.String)">
            <summary>
            Submits the data using HTTP post, using variable arguments to the 
            default index.
            </summary>
            <param name="args">The variable arguments.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Splunk.Receiver.Submit(System.String,Splunk.Args,System.String)">
            <summary>
            Submits the data to the named index using variable arguments.
            </summary>
            <param name="indexName">The named index.</param>
            <param name="args">The variable arguments.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Splunk.Receiver.Log(System.String)">
            <summary>
            Alias for the <see cref="M:Splunk.Receiver.Submit(System.String)"/> method.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Splunk.Receiver.Log(System.String,System.String)">
            <summary>
            Alias for the <see cref="M:Splunk.Receiver.Submit(System.String,System.String)"/> method.
            </summary>
            <param name="indexName">The index name.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Splunk.Receiver.Log(Splunk.Args,System.String)">
            <summary>
            Alias for the <see cref="M:Splunk.Receiver.Submit(Splunk.Args,System.String)"/> method.
            </summary>
            <param name="args">The arguments.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Splunk.Receiver.Log(System.String,Splunk.Args,System.String)">
            <summary>
            Alias for the <see cref="M:Splunk.Receiver.Submit(System.String,Splunk.Args,System.String)"/> method.
            </summary>
            <param name="indexName">The index name.</param>
            <param name="args">The arguments.</param>
            <param name="data">The data.</param>
        </member>
        <member name="T:Splunk.Receiver.SslStreamWrapper">
            <summary>
            The <see cref="T:Splunk.Receiver.SslStreamWrapper"/> class is a wrapper class for
            the <see cref="T:System.Net.Security.SslStream"/> object, and is used for closing the
            TCP connection when closing the stream.
            </summary>
        </member>
        <member name="F:Splunk.Receiver.SslStreamWrapper.tcpClient">
            <summary>
            The <see cref="T:System.Net.Sockets.TcpClient"/> object the <see cref="T:System.Net.Security.SslStream"/>
            object is based on.
            </summary>
        </member>
        <member name="M:Splunk.Receiver.SslStreamWrapper.#ctor(System.Net.Sockets.TcpClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Receiver.SslStreamWrapper"/> class.
            </summary>
            <param name="tcpClient">
            A <see cref="T:System.Net.Sockets.TcpClient"/> object the <see cref="T:System.Net.Security.SslStream"/> object is
            based on.
            </param>
        </member>
        <member name="M:Splunk.Receiver.SslStreamWrapper.Dispose(System.Boolean)">
            <summary>
            Releases resources, including the <see cref="T:System.Net.Sockets.TcpClient"/>.
            </summary>
            <param name="disposing">Set to true to release both managed and
            unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:Splunk.Job">
            <summary>
            The <see cref="T:Splunk.Job"/> class represents a search Job.
            </summary>
        </member>
        <member name="F:Splunk.Job.isReady">
            <summary>
            Whether or not the job status can be queried.
            </summary>
        </member>
        <member name="M:Splunk.Job.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Job"/> class.
            </summary>
            <param name="service">The service.</param>
            <param name="path">The endpoint path.</param>
        </member>
        <member name="M:Splunk.Job.ActionPath(System.String)">
            <summary>
            Returns the action path for the requested action. 
            </summary>
            <param name="action">The requested action.</param>
            <returns>The action path endpoint.</returns>
            <remarks>
            This class adds the control endpoint plus includes all the base
            class actions.
            </remarks>
        </member>
        <member name="M:Splunk.Job.Control(System.String)">
            <summary>
            Performs the requested control action on this job.
            </summary>
            <param name="action">The action requested.</param>
            <returns>The <see cref="T:Splunk.Job"/>.</returns>
        </member>
        <member name="M:Splunk.Job.Control(System.String,Splunk.Args)">
            <summary>
            Performs the requested action on this job.
            </summary>
            <param name="action">The requested action.</param>
            <param name="args">The variable arguments.</param>
            <returns>The <see cref="T:Splunk.Job"/>.</returns>
        </member>
        <member name="M:Splunk.Job.Cancel">
            <summary>
            Stops the current search and deletes the result cache on the
            server.
            </summary>
            <returns>The <see cref="T:Splunk.Job"/>.</returns>
        </member>
        <member name="M:Splunk.Job.CheckReady">
            <summary>
            Checks whether the job is ready to be queried; if it is not, throws
            an exception.
            </summary>
        </member>
        <member name="M:Splunk.Job.DisablePreview">
            <summary>
            Disables preview for this job.
            </summary>
            <returns>The <see cref="T:Splunk.Job"/>.</returns>
        </member>
        <member name="M:Splunk.Job.EnablePreview">
            <summary>
            Enables preview for this job.
            </summary>
            <remarks>
            This method might slow search considerably.
            </remarks>
            <returns>The <see cref="T:Splunk.Job"/>.</returns>
        </member>
        <member name="M:Splunk.Job.Events">
            <summary>
            Returns the stream I/O handle for this job's events.
            </summary>
            <returns>The event <see cref="T:System.IO.Stream"/> I/O handle.</returns>
        </member>
        <member name="M:Splunk.Job.Events(Splunk.Args)">
            <summary>
            Returns the stream I/O handle for this job's events.
            </summary>
            <param name="args">The variable arguments sent to the .../events 
            endpoint.</param>
            <returns>The event <see cref="T:System.IO.Stream"/> I/O handle.</returns>
        </member>
        <member name="M:Splunk.Job.Events(Splunk.JobEventsArgs)">
            <summary>
            Returns the Stream IO handle for this job's events.
            </summary>
            <param name="args">The variable arguments sent to the .../events 
            endpoint</param>
            <returns>The Stream IO handle</returns>
        </member>
        <member name="M:Splunk.Job.Finish">
            <summary>
            Stops the job and provides intermediate results available for 
            retrieval.
            </summary>
            <returns>The <see cref="T:Splunk.Job"/>.</returns>
        </member>
        <member name="M:Splunk.Job.Pause">
            <summary>
            Suspends the execution of the current search.
            </summary>
            <returns>The <see cref="T:Splunk.Job"/>.</returns>
        </member>
        <member name="M:Splunk.Job.Results">
            <summary>
            Returns the stream I/O handle for the results from this job.
            </summary>
            <returns>The <see cref="T:System.IO.Stream"/> I/O handle.</returns>
        </member>
        <member name="M:Splunk.Job.Results(Splunk.Args)">
            <summary>
            Returns the input stream I/O handle for the results from this job,
            adding optional parameters.
            </summary>
            <param name="args">The optional parameters.</param>
            <returns>The results input <see cref="T:System.IO.Stream"/> I/O handle.
            </returns>
        </member>
        <member name="M:Splunk.Job.Results(Splunk.JobResultsArgs)">
            <summary>
            Returns the stream I/O handle for the results from this
            job.
            </summary>
            <param name="args">The optional parameters.</param>
            <returns>The results input <see cref="T:System.IO.Stream"/> I/O handle.
            </returns>
        </member>
        <member name="M:Splunk.Job.ResultsPreview">
            <summary>
            Returns the Stream I/O handle for the preview results from this job.
            </summary>
            <returns>The <see cref="T:System.IO.Stream"/> I/O handle.</returns>
        </member>
        <member name="M:Splunk.Job.ResultsPreview(Splunk.Args)">
            <summary>
            Returns the input stream I/O handle for the preview results from
            this job, adding optional parameters.
            </summary>
            <param name="args">The optional parameters.</param>
            <returns>The preview results input <see cref="T:System.IO.Stream"/> I/O
            handle.</returns>
        </member>
        <member name="M:Splunk.Job.ResultsPreview(Splunk.JobResultsPreviewArgs)">
            <summary>
            Returns the input stream I/O handle for the preview results from
            this job, adding optional parameters.
            </summary>
            <param name="args">The optional parameters.</param>
            <returns>The preview results input <see cref="T:System.IO.Stream"/> I/O
            handle.</returns>
        </member>
        <member name="M:Splunk.Job.SearchLog">
            <summary>
            Returns the stream I/O handle to the search log for this job.
            </summary>
            <returns>The <see cref="T:System.IO.Stream"/> I/O handle.</returns>
        </member>
        <member name="M:Splunk.Job.SearchLog(Splunk.Args)">
            <summary>
            Returns the stream I/O handle to the search log for this job,
            adding optional parameters.
            </summary>
            <param name="args">The optional arguments.</param>
            <returns>The <see cref="T:System.IO.Stream"/> handle.</returns>
        </member>
        <member name="M:Splunk.Job.SidExtraction(Splunk.ResponseMessage)">
            <summary>
            Returns this job's SID from within a response message, as opposed
            to directly from the <see cref="T:Splunk.Job"/> object.
            </summary>
            <param name="response">Response message.</param>
            <returns>The job's SID.</returns>
        </member>
        <member name="M:Splunk.Job.Summary">
            <summary>
            Returns the stream I/O handle for the summary for this job.
            </summary>
            <returns>The <see cref="T:System.IO.Stream"/> I/O handle.</returns>
        </member>
        <member name="M:Splunk.Job.Summary(Splunk.Args)">
            <summary>
            Returns the stream I/O handle for the summary for this job, adding
            optional arguments.
            </summary>
            <param name="args">The optional arguments.</param>
            <returns>The <see cref="T:System.IO.Stream"/> handle.</returns>
        </member>
        <member name="M:Splunk.Job.Timeline">
            <summary>
            Returns the stream I/O handle for the timeline for this job.
            </summary>
            <returns>The <see cref="T:System.IO.Stream"/> I/O handle.</returns>
        </member>
        <member name="M:Splunk.Job.Timeline(Splunk.Args)">
            <summary>
            Returns the stream I/O handle for the timeline for this job,
            adding optional arguments.
            </summary>
            <param name="args">The optional arguments.</param>
            <returns>The <see cref="T:System.IO.Stream"/> handle.</returns>
        </member>
        <member name="M:Splunk.Job.Refresh">
            <summary>
            Refreshes this job.
            </summary>
            <returns>The extended resource, the <see cref="T:Splunk.Job"/>.</returns>
        </member>
        <member name="M:Splunk.Job.Remove">
            <summary>
            Not supported. Removes this job. 
            </summary>
            <remarks>
            This method is unsupported and will throw an exception.
            </remarks>
        </member>
        <member name="P:Splunk.Job.Name">
            <summary>
            Gets this job's name (its SID). 
            </summary>
            <remarks>
            Be aware that this getting this property may cause a refresh from 
            the server if the local copy is "dirty."
            </remarks>
        </member>
        <member name="P:Splunk.Job.Priority">
            <summary>
            Gets or sets this job's priority. 
            </summary>
            <remarks>
            Be aware that this property has the side effect of setting the 
            priority immediately, and may, if the data is "dirty." cause a 
            refresh of the data when getting the priority.
            </remarks>
        </member>
        <member name="P:Splunk.Job.Search">
            <summary>
            Gets this job's search title, which is the same as the 
            search string.
            </summary>
        </member>
        <member name="P:Splunk.Job.CursorTime">
            <summary>
            Gets the earliest time from which no events are later scanned. 
            </summary>
            <remarks>
            Use this property as a progress indicator.
            </remarks>
        </member>
        <member name="P:Splunk.Job.Delegate">
            <summary>
            Gets the delegate for this job.
            </summary>
        </member>
        <member name="P:Splunk.Job.DiskUsage">
            <summary>
            Gets the disk usage for this job. 
            </summary>
        </member>
        <member name="P:Splunk.Job.DispatchState">
            <summary>
            Gets the dispatch state for this job.
            </summary>
            <remarks>
            <para>
            Valid values are: QUEUED, PARSING, RUNNING, PAUSED, FINALIZING, FAILED, DONE
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Job.DoneProgress">
            <summary>
            Gets the approximate progress of the job, in the range of 0.0 to 
            1.0. 
            </summary>
            <remarks>
            <para>
            The <see cref="P:Splunk.Job.DoneProgress"/> property is calculated as follows:
            </para>
            <para>
            doneProgress = (latestTime - cursorTime) / 
            (latestTime - earliestTime)
            </para>
            </remarks>
            <seealso cref="P:Splunk.Job.LatestTime"/>
            <seealso cref="P:Splunk.Job.CursorTime"/>
            <seealso cref="P:Splunk.Job.EarliestTime"/>
        </member>
        <member name="P:Splunk.Job.DropCount">
            <summary>
            Gets the number of possible events that were dropped due to the
            <c>rt_queue_size</c> (the number of events that the indexer should use
            for this search). Applicable for real-time searches only.
            </summary>
        </member>
        <member name="P:Splunk.Job.EarliestTime">
            <summary>
            Gets the earliest time a search job is configured to start.
            </summary>
        </member>
        <member name="P:Splunk.Job.EventAvailableCount">
            <summary>
            Gets the count of events stored by search that are available to be
            retrieved from the events endpoint. 
            </summary>
        </member>
        <member name="P:Splunk.Job.EventCount">
            <summary>
            Gets the count of pre-transformed events generated by this search 
            job. 
            </summary>
        </member>
        <member name="P:Splunk.Job.EventFieldCount">
            <summary>
            Gets the count of event fields.
            </summary>
        </member>
        <member name="P:Splunk.Job.EventIsStreaming">
            <summary>
            Gets a value indicating whether the events from this job are 
            available by streaming or not. 
            </summary>
        </member>
        <member name="P:Splunk.Job.EventIsTruncated">
            <summary>
            Gets a value indicating whether any events from this job have
            not been stored. 
            </summary>
        </member>
        <member name="P:Splunk.Job.EventSearch">
            <summary>
            Gets the subset of the entire search that is before any transforming 
            commands. 
            </summary>
            <remarks>
            The original search should be the <see cref="P:Splunk.Job.EventSearch"/> + 
            <see cref="P:Splunk.Job.ReportSearch"/>.
            </remarks>
        </member>
        <member name="P:Splunk.Job.EventSorting">
            <summary>
            Gets a value indicating how events are sorted. 
            </summary>
            <remarks>
            <para>
            Valid values are:
            </para>
            <para>
            <b>asc</b>: oldest first
            </para>
            <para>
            <b>desc</b>: latest first
            </para>
            <para>
            <b>none</b>: not sorted
            </para>	
            </remarks>
        </member>
        <member name="P:Splunk.Job.IndexEarliest">
            <summary>
            Gets the earliest (inclusive), respectively, time bounds for the 
            search, based on the index time bounds. 
            </summary>
            <remarks>
            <para>
            The time string can be either a UTC time (with fractional seconds), 
            a relative time specifier (to now) or a formatted time string. 
            </para>
            <para>
            This property was introduced in Splunk 5.0.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Job.IndexLatest">
            <summary>
            Gets the latest (exclusive), respectively, time bounds for the 
            search, based on the index time bounds. 
            </summary>
            <remarks>
            <para>
            The time string can be either a UTC time (with fractional seconds), 
            a relative time specifier (to now) or a formatted time string. 
            </para>
            <para>
            This property was introduced in Splunk 5.0.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Job.Keywords">
            <summary>
            Gets all positive keywords used by this job. 
            </summary>
            <remarks>
            A positive keyword is a keyword that is not in a NOT clause.
            </remarks>
        </member>
        <member name="P:Splunk.Job.Label">
            <summary>
            Gets this job's label.
            </summary>
        </member>
        <member name="P:Splunk.Job.LatestTime">
            <summary>
            Gets the latest time a search job is configured to start.
            </summary>
        </member>
        <member name="P:Splunk.Job.NumPreviews">
            <summary>
            Gets the number of previews that have been generated so far for this
            job.
            </summary>
        </member>
        <member name="P:Splunk.Job.RemoteSearch">
            <summary>
            Gets the search string that is sent to every search peer for this 
            job.  
            </summary>
        </member>
        <member name="P:Splunk.Job.ReportSearch">
            <summary>
            Gets the reporting subset of this search. 
            <seealso cref="P:Splunk.Job.EventSearch"/>
            </summary>
            <remarks>
            <para>
            This is the streaming part of the search that is sent to remote
            providers if reporting commands are used. The original search 
            should be the <see cref="P:Splunk.Job.EventSearch"/> + 
            <see cref="P:Splunk.Job.ReportSearch"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.Job.ResultCount">
            <summary>
            Gets the total count of results returned for this search job. 
            </summary>
            <remarks>
            This is the subset of scanned events that actually matches the 
            search terms. 
            </remarks>
        </member>
        <member name="P:Splunk.Job.ResultIsStreaming">
            <summary>
            Gets a value indicating whether the job's result is 
            available by streaming.  
            </summary>
        </member>
        <member name="P:Splunk.Job.ResultPreviewCount">
            <summary>
            Gets the number of result rows in the latest preview results for 
            this job. 
            </summary>
        </member>
        <member name="P:Splunk.Job.RunDuration">
            <summary>
            Gets the time that the search job took to complete.  
            </summary>
        </member>
        <member name="P:Splunk.Job.ScanCount">
            <summary>
            Gets the number of events that are scanned or read off disk. 
            </summary>
        </member>
        <member name="P:Splunk.Job.SearchEarliestTime">
            <summary>
            Gets the earliest time a search job is configured to start. 
            <seealso cref="P:Splunk.Job.SearchLatestTime"/>
            <seealso cref="P:Splunk.Job.CursorTime"/>
            <seealso cref="P:Splunk.Job.DoneProgress"/>
            </summary>
        </member>
        <member name="P:Splunk.Job.SearchLatestTime">
            <summary>
            Gets the latest time a search job is configured to start. 
            <seealso cref="P:Splunk.Job.SearchEarliestTime"/>
            <seealso cref="P:Splunk.Job.CursorTime"/>
            <seealso cref="P:Splunk.Job.DoneProgress"/>
            </summary>
        </member>
        <member name="P:Splunk.Job.SearchProviders">
            <summary>
            Gets the list of all the search peers that were contacted.  
            </summary>
        </member>
        <member name="P:Splunk.Job.Sid">
            <summary>
            Gets the unique search identifier (SID) for this job.
            </summary>
        </member>
        <member name="P:Splunk.Job.StatusBuckets">
            <summary>
            Gets the maximum number of timeline buckets for this job.  
            </summary>
            <remarks>
            Be aware that if the Splunk instance is "dirty," getting this 
            property has the side effect of retrieving refreshed data from the
            server.
            </remarks>
        </member>
        <member name="P:Splunk.Job.Ttl">
            <summary>
            Gets this job's time to live (that is, the time before the search
            job expires and is still available) in seconds.
            </summary>
            <remarks>
            If this property's value is "0", it means the job has expired.  
            </remarks>
        </member>
        <member name="P:Splunk.Job.IsDone">
            <summary>
            Gets a value indicating whether the job is done. 
            </summary>
            <remarks>
            This property implicitly calls the <see cref="M:Splunk.Job.Refresh"/> method to 
            get current data.
            </remarks>
        </member>
        <member name="P:Splunk.Job.IsFailed">
            <summary>
            Gets a value indicating whether the job failed. 
            </summary>
        </member>
        <member name="P:Splunk.Job.IsFinalized">
            <summary>
            Gets a value indicating whether the job is finalized (that is,
            it was forced to finish). 
            </summary>
        </member>
        <member name="P:Splunk.Job.IsPaused">
            <summary>
            Gets a value indicating whether the job is paused.
            </summary>
            <remarks>
            Be aware that if the Splunk instance is "dirty," getting this 
            property has the side effect of retrieving refreshed data from the
            server.
            </remarks>
        </member>
        <member name="P:Splunk.Job.IsPreviewEnabled">
            <summary>
            Gets a value indicating whether preview for the job 
            is enabled. 
            </summary>
        </member>
        <member name="P:Splunk.Job.IsReady">
            <summary>
            Gets a value indicating whether this job is ready to
            be queried. 
            </summary>
            <remarks>
            This property implicitly calls the <see cref="M:Splunk.Job.Refresh"/> method to 
            get current data.
            </remarks>
        </member>
        <member name="P:Splunk.Job.IsRealTimeSearch">
            <summary>
            Gets a value indicating whether the job is a real-time search. 
            </summary>
        </member>
        <member name="P:Splunk.Job.IsRemoteTimeline">
            <summary>
            Gets a value indicating whether the job has a remote 
            timeline component. 
            </summary>
            <returns>Whether the job has a remote timeline.</returns>
        </member>
        <member name="P:Splunk.Job.IsSaved">
            <summary>
            Gets a value indicating whether the job is to be saved
            indefinitely.
            </summary>
        </member>
        <member name="P:Splunk.Job.IsSavedSearch">
            <summary>
            Gets a value indicating whether this job was run as a
            saved search (via scheduler).  
            </summary>
        </member>
        <member name="P:Splunk.Job.IsZombie">
            <summary>
            Gets a value indicating whether the process running 
            the search is dead but with the search not finished. 
            </summary>
        </member>
        <member name="T:Splunk.Record">
            <summary>
            The <see cref="T:Splunk.Record"/> class represents the basic data
            representation, extending the basic dictionary with some basic get
            methods.
            </summary>
        </member>
        <member name="M:Splunk.Record.GetBoolean(System.String)">
            <summary>
            Returns the Boolean value associated with the given key.
            </summary>
            <param name="key">The key.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Splunk.Record.GetBoolean(System.String,System.Boolean)">
            <summary>
            Returns the Boolean value associated with the given key, adding
            a default value if the key is not present in the dictionary.
            </summary>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Splunk.Record.GetByteCount(System.String)">
            <summary>
            Returns the long byte count value associated with the given key.
            </summary>
            <param name="key">The key.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Splunk.Record.GetByteCount(System.String,System.Int64)">
            <summary>
            Returns the long byte count value associated with the given key, 
            adding a default value if the key is not present in the dictionary.
            </summary>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Splunk.Record.GetDate(System.String)">
            <summary>
            Returns the <see cref="T:System.DateTime"/> value associated with the given 
            key.
            </summary>
            <param name="key">The key.</param>
            <returns>The DateTime structure.</returns>
        </member>
        <member name="M:Splunk.Record.GetDate(System.String,System.DateTime)">
            <summary>
            Returns the <see cref="T:System.DateTime"/> value associated with the given 
            key, adding a default value if the key is not present in the 
            dictionary.
            </summary>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Splunk.Record.GetFloat(System.String)">
            <summary>
            Returns the double value associated with the given key.
            </summary>
            <param name="key">The key.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Splunk.Record.GetFloat(System.String,System.Double)">
            <summary>
            Returns the double value associated with the given key.
            </summary>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Splunk.Record.GetInteger(System.String)">
            <summary>
            Returns the integer value associated with the given key.
            </summary>
            <param name="key">The key.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Splunk.Record.GetInteger(System.String,System.Int32)">
            <summary>
            Returns the integer value associated with the given key, adding
            a default value if the key is not present in the dictionary.
            </summary>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Splunk.Record.GetLong(System.String)">
            <summary>
            Returns the long value associated with the given key.
            </summary>
            <param name="key">The key.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Splunk.Record.GetLong(System.String,System.Int32)">
            <summary>
            Returns the integer value associated with the given key, adding
            a default value if the key is not present in the dictionary.
            </summary>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Splunk.Record.GetString(System.String)">
            <summary>
            Returns the string value associated with the given key.
            </summary>
            <param name="key">The key.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Splunk.Record.GetString(System.String,System.String)">
            <summary>
            Returns the string value associated with the given key, adding
            a default value if the key is not present in the dictionary.
            </summary>
            <param name="key">The key.</param>
            <param name="defaultValue">The default.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Splunk.Record.GetStringArray(System.String)">
            <summary>
            Returns the array of string values associated with the given key.
            </summary>
            <param name="key">The key.</param>
            <returns>The array.</returns>
        </member>
        <member name="M:Splunk.Record.GetStringArray(System.String,System.String[])">
            <summary>
            Returns the the array of string values associated with the given 
            key, adding a default value if the key is not present in the 
            dictionary.
            </summary>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The array.</returns>
        </member>
        <member name="M:Splunk.Record.GetValue(System.String)">
            <summary>
            Returns the value associated with the given key.
            </summary>
            <param name="key">The key.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Splunk.Record.GetValue(System.String,System.Object)">
            <summary>
            Returns the value associated with the given key, or the default 
            value if the key does not exist.
            </summary>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The value.</returns>
        </member>
        <member name="T:Splunk.JobCollection">
            <summary>
            The <see cref="T:Splunk.JobCollection"/> class represents a collection of jobs.
            A job is an individual instance of a running or completed search or
            report, along with its related output.
            </summary>
        </member>
        <member name="M:Splunk.JobCollection.#ctor(Splunk.Service)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.JobCollection"/> class.
            </summary>
            <param name="service">The service.</param>
        </member>
        <member name="M:Splunk.JobCollection.#ctor(Splunk.Service,Splunk.Args)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.JobCollection"/> class.
            </summary>
            <param name="service">The service.</param>
            <param name="args">The variable arguments.</param>
        </member>
        <member name="M:Splunk.JobCollection.Create(System.String)">
            <summary>
            Creates a search with a UTF-8 pre-encoded search request.
            </summary>
            <param name="query">The search query.</param>
            <returns>The job.</returns>
            <remarks>
            A "oneshot" request is invalid. To create a oneshot search,
            use the <see cref="M:Splunk.Service.Oneshot(System.String)"/> method instead. 
            </remarks>
        </member>
        <member name="M:Splunk.JobCollection.Create(System.String,Splunk.Args)">
            <summary>
            Creates a search with a UTF-8 pre-encoded search request.
            </summary>
            <remarks>
            A "oneshot" request is invalid. To create a oneshot search,
            use the <see cref="M:Splunk.Service.Oneshot(System.String)"/> method instead. 
            </remarks>
            <param name="query">The search query.</param>
            <param name="args">Additional arguments for this job.</param>
            <returns>The job.</returns>
        </member>
        <member name="M:Splunk.JobCollection.Create(System.String,Splunk.JobArgs)">
            <summary>
            Creates a search with a UTF-8 pre-encoded search request.
            </summary>
            <remarks>
            A "oneshot" request is invalid. To create a oneshot search,
            use the <see cref="M:Splunk.Service.Oneshot(System.String)"/> method instead. 
            </remarks>
            <param name="query">The search query.</param>
            <param name="args">Additional arguments for this job.</param>
            <returns>The job.</returns>
        </member>
        <member name="M:Splunk.JobCollection.List">
            <summary>
            Returns the list of jobs, as a <see cref="T:Splunk.ResponseMessage"/> object.
            </summary>
            <returns>The list of jobs.</returns>
        </member>
        <member name="M:Splunk.JobCollection.ItemKey(Splunk.AtomEntry)">
            <summary>
            Returns the job's unique search identifier (SID), which is used as 
            this item's key.
            </summary>
            <param name="entry">The Atom entry.</param>
            <returns>The SID.</returns>
        </member>
        <member name="T:Splunk.ResultsReaderJson">
            <summary>
            The <see cref="T:Splunk.ResultsReaderJson"/> class reads a results/event JSON
            stream one event at a time. 
            </summary>
        </member>
        <member name="F:Splunk.ResultsReaderJson.exportHelper">
            <summary>
            Helper object that will only be constructed if the reader is 
            handling JSON format used by export.
            </summary>
        </member>
        <member name="F:Splunk.ResultsReaderJson.previewFlagRead">
            <summary>
            Whether the "preview" flag is read.
            </summary>
        </member>
        <member name="M:Splunk.ResultsReaderJson.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.ResultsReaderJson"/>
            class.
            </summary>
            <param name="stream">The JSON stream to parse.</param>
        </member>
        <member name="M:Splunk.ResultsReaderJson.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.ResultsReaderJson"/>
            class.
            </summary>
            <param name="stream">The JSON stream to parse.</param>
            <param name="isInMultiReader">
            Whether the reader is the underlying reader of a multi reader.
            </param>
        </member>
        <member name="M:Splunk.ResultsReaderJson.AdvanceStreamToNextSet">
            <summary>
            Advances to the next set, skipping remaining event(s) 
            if there are any in the current set.
            </summary>
            <returns>Returns false if the end is reached.</returns>
        </member>
        <member name="M:Splunk.ResultsReaderJson.AdvanceIntoNextSetBeforeEvent">
            <summary>
            Advances to the next set, skipping remaining event(s) 
            if there are any in the current set, and reads metadata before the 
            first event in the next result set.
            </summary>
            <returns>Return false if the end is reached.</returns>       
        </member>
        <member name="M:Splunk.ResultsReaderJson.Dispose">
            <summary>
            Releases unmanaged resources.
            </summary>
        </member>
        <member name="M:Splunk.ResultsReaderJson.GetEventsFromCurrentSet">
            <summary>
            Retrieves the enumerator for data returned from Splunk.
            </summary>
            <returns>A enumerator.</returns>
        </member>
        <member name="M:Splunk.ResultsReaderJson.ReadEvent">
            <summary>
            Reads an event from the JSON reader.
            </summary>
            <returns>
            The event. A value of null indicates the end of stream, 
            which is used by none --export cases.
            </returns>
        </member>
        <member name="M:Splunk.ResultsReaderJson.ReadPreviewFlag">
            <summary>
            Reads the preview flag value from the stream.
            </summary>
        </member>
        <member name="P:Splunk.ResultsReaderJson.StreamReader">
            <summary>
            Gets the stream reader on the JSON stream to parse.
            </summary>
        </member>
        <member name="P:Splunk.ResultsReaderJson.JsonReader">
            <summary>
            Gets or sets the JSON reader.
            </summary>
        </member>
        <member name="P:Splunk.ResultsReaderJson.IsPreview">
            <summary>
            Gets a value indicating whether the results are
            a preview from an unfinished search.
            </summary>
        </member>
        <member name="P:Splunk.ResultsReaderJson.Fields">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="P:Splunk.ResultsReaderJson.IsDisposed">
            <summary>
            Gets a value indicating whether the reader has been
            disposed.
            </summary>
        </member>
        <member name="T:Splunk.ResultsReaderJson.ExportHelper">
            <summary>
            Contains code only used for streams from the export endpoint.
            </summary>
        </member>
        <member name="F:Splunk.ResultsReaderJson.ExportHelper.resultsReader">
            <summary>
            The JSON reader.
            </summary>
        </member>
        <member name="F:Splunk.ResultsReaderJson.ExportHelper.currentRow">
            <summary>
            The row being read.
            </summary>
        </member>
        <member name="M:Splunk.ResultsReaderJson.ExportHelper.#ctor(Splunk.ResultsReaderJson)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.ResultsReaderJson.ExportHelper"/> class.
            </summary>
            <param name="resultsReader">The result reader that is using this helper.</param>
        </member>
        <member name="M:Splunk.ResultsReaderJson.ExportHelper.ReadIntoRow">
            <summary>
            Reads metadata in the current row before event data.
            </summary>
            <returns>Returns false if the end of the stream is 
            encountered.</returns>
        </member>
        <member name="M:Splunk.ResultsReaderJson.ExportHelper.SkipRestOfRow">
            <summary>
            Skips the rest of the current row.
            </summary>
        </member>
        <member name="M:Splunk.ResultsReaderJson.ExportHelper.Dispose">
            <summary>
            Releases resources, including unmanaged ones.
             </summary>
        </member>
        <member name="P:Splunk.ResultsReaderJson.ExportHelper.JsonReader">
            <summary>
            Gets or sets the JSON reader, which is also used by
            the result reader itself.
            </summary>
        </member>
        <member name="P:Splunk.ResultsReaderJson.ExportHelper.LastRow">
            <summary>
            Gets a value indicating whether the row 
            is the last in the current set.
            </summary>
        </member>
        <member name="P:Splunk.ResultsReaderJson.ExportHelper.InRow">
            <summary>
            Gets a value indicating whether the reader is in the middle 
            or a row.
            </summary>
        </member>
        <member name="T:Splunk.Service">
            <summary>
            The <see cref="T:Splunk.Service"/> class represents a Splunk service instance 
            at a given address (<i>host</i>:<i>port</i>) accessed using the http or
            https protocol scheme.
            </summary>
            <remarks>
            <para>
            A <see cref="T:Splunk.Service"/> instance also captures an optional namespace 
            contact that consists of an optional owner name (or "-" wildcard) and 
            optional app name (or "-" wildcard).
            </para>
            <para>
            To access the <see cref="T:Splunk.Service"/> members, the <see cref="T:Splunk.Service"/>
            instance must be authenticated by presenting credentials using the 
            <see cref="M:Splunk.Service.Login(System.String,System.String)"/> method, or by constructing the
            <see cref="T:Splunk.Service"/> instance using the <see cref="M:Splunk.Service.Connect(System.Collections.Generic.Dictionary{System.String,System.Object})"/> method.
            </para>
            </remarks>
        </member>
        <member name="F:Splunk.Service.defaultHost">
            <summary>
            The default host name, which is used when a host name is not 
            provided.
            </summary>
        </member>
        <member name="F:Splunk.Service.defaultPort">
            <summary>
            The default port number, which is used when a port number is not
            provided.
            </summary>
        </member>
        <member name="M:Splunk.Service.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Service"/> class
            </summary>
            <param name="host">The hostname.</param>
        </member>
        <member name="M:Splunk.Service.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Service"/> class,
            with host and port.
            </summary>
            <param name="host">The host name.</param>
            <param name="port">The port.</param>
        </member>
        <member name="M:Splunk.Service.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Service"/> class,
            with host, port, and scheme.
            </summary>
            <param name="host">The host name.</param>
            <param name="port">The port.</param>
            <param name="scheme">The scheme, http or https.</param>
        </member>
        <member name="M:Splunk.Service.#ctor(Splunk.ServiceArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Service"/> class,
            with a <see cref="T:Splunk.ServiceArgs"/> argument list.
            </summary>
            <param name="args">The service arguments.</param>
        </member>
        <member name="M:Splunk.Service.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.Service"/> class
            with a general argument list.
            </summary>
            <param name="args">The service arguments.</param>
        </member>
        <member name="M:Splunk.Service.InitProperties">
            <summary>
            Initializes all properties to their default values.
            </summary>
        </member>
        <member name="M:Splunk.Service.Connect(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Establishes a connection to a Splunk service using a map of 
            arguments. 
            </summary>
            <param name="args">The connection arguments.</param>
            <returns>A new <see cref="T:Splunk.Service"/> instance.</returns>
            <remarks>
            This method creates a new <see cref="T:Splunk.Service"/> instance and 
            authenticates the session using credentials passed in from the args
            dictionary.
            </remarks>
        </member>
        <member name="M:Splunk.Service.Capabilities">
            <summary>
            Returns the array of the system capabilities.
            </summary>
            <returns>An array of system capabilities.</returns>
        </member>
        <member name="M:Splunk.Service.Export(System.String)">
            <summary>
            Runs a search using the search/jobs/export endpoint, which streams
            results back via a <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="search">The search query string.</param>
            <returns>A results stream.</returns>
        </member>
        <member name="M:Splunk.Service.Export(System.String,Splunk.Args)">
            <summary>
            Runs a search using the search/jobs/export endpoint, which streams
            results back via a <see cref="T:System.IO.Stream"/>. 
            </summary>
            <param name="search">The search query string.</param>
            <param name="args">The search arguments.</param>
            <returns>A results stream.</returns>
        </member>
        <member name="M:Splunk.Service.Export(System.String,Splunk.JobExportArgs)">
            <summary>
            Runs a search using the search/jobs/export endpoint which streams
            results back via a <see cref="T:System.IO.Stream"/>. 
            </summary>
            <param name="search">The search query string.</param>
            <param name="args">The search arguments.</param>
            <returns>The results stream.</returns>
        </member>
        <member name="M:Splunk.Service.Fullpath(System.String)">
            <summary>
            Ensures that the given path is fully qualified, prepending a path
            prefix if necessary. 
            </summary>
            <param name="path">The path.</param>
            <returns>The fully qualified URL.</returns>
            <remarks>
            The path prefix is constructed using the current owner and app
            context when available.
            </remarks>
        </member>
        <member name="M:Splunk.Service.Fullpath(System.String,Splunk.Args)">
            <summary>
            Ensures that the given path is fully qualified, prepending a path
            prefix if necessary. 
            </summary>
            <param name="path">The path.</param>
            <param name="splunkNamespace">The Splunk namespace.</param>
            <returns>A fully qualified URL.</returns>
            <remarks>
            The path prefix is constructed using the current owner and app
            context when available.
            </remarks>
        </member>
        <member name="M:Splunk.Service.GetApplications">
            <summary>
            Returns the collection of applications.
            </summary>
            <returns>
            A collection of applications.
            </returns>
        </member>
        <member name="M:Splunk.Service.GetConfs">
            <summary>
            Returns the collection of configurations.
            </summary>
            <returns>A collection of configurations.</returns>
        </member>
        <member name="M:Splunk.Service.GetConfs(Splunk.Args)">
            <summary>
            Returns the collection of configurations.
            </summary>
            <param name="args">The arguments.</param>
            <returns>A collection of configurations.</returns>
        </member>
        <member name="M:Splunk.Service.GetEventTypes">
            <summary>
            Returns a collection of saved event types.
            </summary>
            <returns>A collection of saved event types.</returns>
        </member>
        <member name="M:Splunk.Service.GetEventTypes(Splunk.Args)">
            <summary>
            Returns a collection of saved event types.
            </summary>
            <param name="args">The arguments.</param>
            <returns>A collection of saved event types.</returns>
        </member>
        <member name="M:Splunk.Service.GetFiredAlertGroups">
            <summary>
            Returns a collection of alert groups that have been 
            fired by the service.
            </summary>
            <returns>A collection of fired alert groups.</returns>
        </member>
        <member name="M:Splunk.Service.GetFiredAlerts(Splunk.Args)">
            <summary>
            Returns a collection of alert groups that have been 
            fired by the service.
            </summary>
            <param name="args">Optional arguments, such as "count" and 
            "offset" for pagination.</param>
            <returns>A collection of fired alert groups.</returns>
        </member>
        <member name="M:Splunk.Service.GetIndexes">
            <summary>
            Returns a collection of Splunk indexes.
            </summary>
            <returns>A collection of indexes.</returns>
        </member>
        <member name="M:Splunk.Service.GetIndexes(Splunk.Args)">
            <summary>
            Returns a collection of Splunk indexes.
            </summary>
            <param name="args">The optional arguments.</param>
            <returns>A collection of indexes.</returns>
        </member>
        <member name="M:Splunk.Service.GetInfo">
            <summary>
            Returns information about the Splunk service.
            </summary>
            <returns>Information about the Splunk
            service.</returns>
        </member>
        <member name="M:Splunk.Service.GetInputs">
            <summary>
            Returns a collection of configured inputs.
            </summary>
            <returns>A collection of configured inputs.</returns>
        </member>
        <member name="M:Splunk.Service.GetInputs(Splunk.Args)">
            <summary>
            Returns a collection of configured inputs.
            </summary>
            <param name="args">Optional arguments.</param>
            <returns>A collection of configured inputs.</returns>
        </member>
        <member name="M:Splunk.Service.GetJobs">
            <summary>
            Returns a collection of current search jobs.
            </summary>
            <returns>A collection of jobs.</returns>
        </member>
        <member name="M:Splunk.Service.GetJobs(Splunk.Args)">
            <summary>
            Returns a collection of current search jobs.
            </summary>
            <param name="args">The variable arguments.</param>
            <returns>A collection of jobs.</returns>
        </member>
        <member name="M:Splunk.Service.GetLoggers">
            <summary>
            Returns a collection of service logging categories and their 
            status.
            </summary>
            <returns>A collection of loggers.</returns>
        </member>
        <member name="M:Splunk.Service.GetLoggers(Splunk.Args)">
            <summary>
            Returns a collection of service logging categories and their status.
            </summary>
            <param name="args">Optional arguments, such as "count" and "offset"
            for pagination.</param>
            <returns>A collection of loggers.</returns>
        </member>
        <member name="M:Splunk.Service.GetMessages">
            <summary>
            Returns the collection of messages.
            </summary>
            <returns>A <see cref="T:Splunk.MessageCollection"/>.</returns>
        </member>
        <member name="M:Splunk.Service.GetMessages(Splunk.Args)">
            <summary>
            Returns the collection of messages.
            </summary>
            <param name="args">The arguments.</param>
            <returns>A collection of messages.</returns>
        </member>
        <member name="M:Splunk.Service.GetCredentials">
            <summary>
            Returns a collection of credentials. 
            </summary>
            <returns>A collection of credentials.</returns>
            <remarks>
            This collection is used for managing secure credentials.
            </remarks>
        </member>
        <member name="M:Splunk.Service.GetPasswords(Splunk.Args)">
            <summary>
            Returns a collection of credentials.
            </summary>
            <param name="args">Optional arguments, such as "count" and "offset"
            for pagination.</param>
            <returns>A collection of credentials.</returns>
            <remarks>
            This collection is used for managing secure credentials.
            </remarks>
        </member>
        <member name="M:Splunk.Service.GetReceiver">
            <summary>
            Returns the receiver object for this Splunk service.
            </summary>
            <returns>A receiver object.</returns>
        </member>
        <member name="M:Splunk.Service.GetRoles">
            <summary>
            Returns a collection of Splunk user roles.
            </summary>
            <returns>A collection of Splunk roles.</returns>
        </member>
        <member name="M:Splunk.Service.GetRoles(Splunk.Args)">
            <summary>
            Returns a collection of Splunk user roles.
            </summary>
            <param name="args">Optional parameters.</param>
            <returns>A collection of Splunk roles.</returns>
        </member>
        <member name="M:Splunk.Service.GetSavedSearches">
            <summary>
            Returns a collection of saved searches.
            </summary>
            <returns>A collection of saved searches.</returns>
        </member>
        <member name="M:Splunk.Service.GetSavedSearches(Splunk.Args)">
            <summary>
            Returns a collection of saved searches.
            </summary>
            <param name="args">The arguments.</param>
            <returns>A collection of saved searches.</returns>
        </member>
        <member name="M:Splunk.Service.GetSettings">
            <summary>
            Returns service configuration information for an instance of 
            Splunk.
            </summary>
            <returns>This Splunk instance's configuration information.
            </returns>
        </member>
        <member name="M:Splunk.Service.GetUploads">
            <summary>
            Returns a collection of in-progress oneshot uploads.
            </summary>
            <returns>A collection of oneshot uploads.</returns>
        </member>
        <member name="M:Splunk.Service.GetUploads(Splunk.Args)">
            <summary>
            Returns a collection of in-progress oneshot uploads.
            </summary>
            <param name="splunkNamespace">The specific namespace.</param>
            <returns>A collection of oneshot uploads.</returns>
        </member>
        <member name="M:Splunk.Service.GetUsers">
            <summary>
            Returns a collection of Splunk users.
            </summary>
            <returns>A collection of Splunk users.</returns>
        </member>
        <member name="M:Splunk.Service.GetUsers(Splunk.Args)">
            <summary>
            Returns a collection of Splunk users.
            </summary>
            <param name="args">The arguments.</param>
            <returns>A collection of Splunk users.</returns>
        </member>
        <member name="M:Splunk.Service.Login(System.String,System.String)">
            <summary>
            Authenticates the <see cref="T:Splunk.Service"/> instance with a username 
            and password.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>The service instance.</returns>
        </member>
        <member name="M:Splunk.Service.Logout">
            <summary>
            Logs out of the service. 
            </summary>
            <returns>The service instance.</returns>
        </member>
        <member name="M:Splunk.Service.Oneshot(System.String)">
            <summary>
            Creates a oneshot synchronous search.
            </summary>
            <param name="query">The search string.</param>
            <returns>An I/O stream.</returns>
        </member>
        <member name="M:Splunk.Service.Oneshot(System.String,Splunk.Args)">
            <summary>
            Creates a oneshot synchronous search using search arguments.
            </summary>
            <param name="query">The search query.</param>
            <param name="inputArgs">The input arguments.</param>
            <returns>An I/O stream.</returns>
        </member>
        <member name="M:Splunk.Service.SetSegmentationDefault(Splunk.Args@)">
            <summary>
            Sets the default value for the 'segmentation' property 
            in the specified Args.
            </summary>
            <param name="args">Arguments to be modified if necessary</param>
        </member>
        <member name="M:Splunk.Service.Open(System.Int32)">
            <summary>
            Opens a socket to the host and specified port.
            </summary>
            <param name="port">The port on the server to which to 
            connect.</param>
            <returns>A connected socket.</returns>
        </member>
        <member name="M:Splunk.Service.Parse(System.String)">
            <summary>
            Parses a search query and returns a semantic map for the search in 
            JSON format.
            </summary>
            <param name="query">The search query.</param>
            <returns>A parse response message.</returns>
        </member>
        <member name="M:Splunk.Service.Parse(System.String,Splunk.Args)">
            <summary>
            Parses a search query with additional arguments and returns a 
            semantic map for the search in JSON format.
            </summary>
            <param name="query">The search query.</param>
            <param name="args">The arguments.</param>
            <returns>A parse response message.</returns>
        </member>
        <member name="M:Splunk.Service.Restart">
            <summary>
            Issues a restart request to the service. 
            </summary>
            <returns>A response message.</returns>
        </member>
        <member name="M:Splunk.Service.Search(System.String)">
            <summary>
            Creates a simplified synchronous search using search arguments. 
            </summary>
            <param name="query">The search string.</param>
            <returns>The stream handle of the search.</returns>
            <remarks>
            Use this method for simple searches. For output control arguments, 
            use the <see cref="M:Splunk.Service.Search(System.String,Splunk.Args,Splunk.Args)"/> method.
            </remarks>
        </member>
        <member name="M:Splunk.Service.Search(System.String,Splunk.Args)">
            <summary>
            Creates a simplified synchronous search using search arguments. 
            </summary>
            <param name="query">The search string.</param>
            <param name="inputArgs">The variable arguments.</param>
            <returns>The stream handle of the search.</returns>
            <remarks>
            Use this method for simple searches. For output control arguments, 
            use the <see cref="M:Splunk.Service.Search(System.String,Splunk.Args,Splunk.Args)"/> method.
            </remarks>
        </member>
        <member name="M:Splunk.Service.Search(System.String,Splunk.Args,Splunk.Args)">
            <summary>
            Creates a simplified synchronous search using search arguments. 
            </summary>
            <param name="query">The search string.</param>
            <param name="inputArgs">The variable arguments.</param>
            <param name="outputArgs">The output arguments.</param>
            <returns>The stream handle of the search.</returns>
            <remarks>
            Use this method for simple searches. 
            </remarks>
        </member>
        <member name="M:Splunk.Service.Send(System.String,Splunk.RequestMessage)">
            <summary>
            Overloaded. Issues an HTTP request against the service using a 
            request path and message. 
            </summary>
            <param name="path">The path.</param>
            <param name="request">The request message.</param>
            <returns>A response message.</returns>
            <remarks>
            This method overrides the base 
            <see cref="T:Splunk.HttpService"/>.<see cref="M:Splunk.HttpService.Send(System.String,Splunk.RequestMessage)"/> 
            method and applies the Splunk authorization header, which is 
            required for authenticated interactions with the Splunk service.
            </remarks>
        </member>
        <member name="M:Splunk.Service.VersionCompare(System.String)">
            <summary>
            Compares the current version versus a desired version. 
            </summary>
            <param name="right">The desired version.</param>
            <returns><para>One of the following values:
            <list type="bullet">
            <item>"-1" indicates the current version is less than the desired
            version.</item>
            <item>"0" indicates the versions are equal.</item>
            <item>"1" indicates the current version is greater than the 
            desired version.</item>
            </list></para></returns>
        </member>
        <member name="P:Splunk.Service.App">
            <summary>
            Gets or sets the current app context.
            </summary>
        </member>
        <member name="P:Splunk.Service.Owner">
            <summary>
            Gets or sets the current owner context. 
            </summary>
            <remarks>
            A value of "nobody" means that all users have access to the 
            resource.
            </remarks>
        </member>
        <member name="P:Splunk.Service.Password">
            <summary>
            Gets or sets the password, which is used to authenticate the
            Splunk instance.
            </summary>
        </member>
        <member name="P:Splunk.Service.PasswordEndPoint">
            <summary>
            Gets or sets the default password endpoint, which can change over
            Splunk versions.
            </summary>
        </member>
        <member name="P:Splunk.Service.SimpleReceiverEndPoint">
            <summary>
            Gets or sets the default simple receiver endpoint.
            </summary>
        </member>
        <member name="P:Splunk.Service.Token">
            <summary>
            Gets or sets the current session (authorization) token.
            </summary>
        </member>
        <member name="P:Splunk.Service.Username">
            <summary>
            Gets or sets the Splunk account username, which is used to 
            authenticate the Splunk instance.
            </summary>
        </member>
        <member name="P:Splunk.Service.Version">
            <summary>
            Gets the version of this Splunk instance, once logged in.
            </summary>
        </member>
        <member name="T:Splunk.ServiceArgs">
            <summary>
            The <see cref="T:Splunk.ServiceArgs"/> class contains a collection of arguments 
            that are used to initialize a Splunk <see cref="T:Splunk.Service"/> instance.
            </summary>
        </member>
        <member name="P:Splunk.ServiceArgs.App">
            <summary>
            Gets or sets the application context of the service.
            </summary>
        </member>
        <member name="P:Splunk.ServiceArgs.Host">
            <summary>
            Gets or sets the host name of the service.
            </summary>
        </member>
        <member name="P:Splunk.ServiceArgs.Owner">
            <summary>
            Gets or sets the owner context of the service.
            </summary>
        </member>
        <member name="P:Splunk.ServiceArgs.Port">
            <summary>
            Gets or sets the port number of the service.
            </summary>
        </member>
        <member name="P:Splunk.ServiceArgs.Scheme">
            <summary>
            Gets or sets the scheme to use for accessing the service.
            </summary>
        </member>
        <member name="P:Splunk.ServiceArgs.Token">
            <summary>
            Gets or sets the Splunk authentication token to use for the 
            session.
            </summary>
        </member>
        <member name="T:Splunk.RequestMessage">
            <summary>
            The <see cref="T:Splunk.RequestMessage"/> class is an abstraction of the
            HTTP/S web request message.
            </summary>
        </member>
        <member name="F:Splunk.RequestMessage.method">
            <summary>
            The method, defaults to "GET".
            </summary>
        </member>
        <member name="F:Splunk.RequestMessage.header">
            <summary>
            The header.
            </summary>
        </member>
        <member name="F:Splunk.RequestMessage.content">
            <summary>
            The content.
            </summary>
        </member>
        <member name="M:Splunk.RequestMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.RequestMessage"/> 
            class.
            </summary>
        </member>
        <member name="M:Splunk.RequestMessage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.RequestMessage"/> 
            class, with the specified method.
            </summary>
            <param name="method">The method</param>
        </member>
        <member name="M:Splunk.RequestMessage.CheckMethod(System.String)">
            <summary>
            Checks whether the method is supported.
            </summary>
            <param name="value">The method name.</param>
            <returns>Whether the method is supported.</returns>
        </member>
        <member name="P:Splunk.RequestMessage.Header">
            <summary>
            Gets the header dictionary.
            </summary>
            <returns>The header.</returns>
        </member>
        <member name="P:Splunk.RequestMessage.Method">
            <summary>
            Gets or sets the HTTP/S method.
            </summary>
            <returns>The method.</returns>
        </member>
        <member name="P:Splunk.RequestMessage.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <returns>The content.</returns>
        </member>
        <member name="T:Splunk.ResponseMessage">
            <summary>
            The <see cref="T:Splunk.ResponseMessage"/> class represents the basic HTTP
            response object.
            </summary>
        </member>
        <member name="F:Splunk.ResponseMessage.status">
            <summary>
            The status.
            </summary>
        </member>
        <member name="F:Splunk.ResponseMessage.header">
            <summary>
            The header.
            </summary>
        </member>
        <member name="F:Splunk.ResponseMessage.content">
            <summary>
            The content, a stream.
            </summary>
        </member>
        <member name="F:Splunk.ResponseMessage.response">
            <summary>
            The parent response. Needed for finalizing cleanup.
            </summary>
        </member>
        <member name="M:Splunk.ResponseMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.ResponseMessage"/> 
            class.
            </summary>
        </member>
        <member name="M:Splunk.ResponseMessage.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.ResponseMessage"/> 
            class with an initial status.
            </summary>
            <param name="status">The status</param>
        </member>
        <member name="M:Splunk.ResponseMessage.#ctor(System.Int32,System.IO.Stream,System.Net.HttpWebResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.ResponseMessage"/> 
            class with an initial status and stream.
            </summary>
            <param name="status">The status.</param>
            <param name="content">The content stream.</param>
            <param name="response">The response.</param>
        </member>
        <member name="M:Splunk.ResponseMessage.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Splunk.ResponseMessage"/> 
            class.
            </summary>
        </member>
        <member name="M:Splunk.ResponseMessage.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Splunk.ResponseMessage.Content">
            <summary>
            Gets the body content stream.
            </summary>
            <returns>The stream.</returns>
        </member>
        <member name="P:Splunk.ResponseMessage.Header">
            <summary>
            Gets the dictionary of the response headers.
            </summary>
            <returns>The response headers.</returns>
        </member>
        <member name="P:Splunk.ResponseMessage.Status">
            <summary>
            Gets the response HTTP status code.
            </summary>
            <returns>The status.</returns>
        </member>
        <member name="T:Splunk.SplunkException">
            <summary>
            The <see cref="T:Splunk.SplunkException"/> class represents a Splunk exception.
            Exceptions are thrown for Splunk responses that return an error status 
            code.
            </summary>
        </member>
        <member name="F:Splunk.SplunkException.JOBNOTREADY">
            <summary>
            Indicates a job has been submitted to Splunk, but has not
            yet been scheduled to run, so there is no job information 
            available.
            </summary>
        </member>
        <member name="F:Splunk.SplunkException.TIMEOUT">
            <summary>
            Indicates a timed operation has reached its timeout value.
            </summary>
        </member>
        <member name="F:Splunk.SplunkException.AMBIGUOUS">
            <summary>
            Indicates an operation was requested on an object that is 
            ambiguously defined due to namespace rules. 
            </summary>
        </member>
        <member name="M:Splunk.SplunkException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.SplunkException"/> 
            class.
            </summary>
            <param name="code">The code.</param>
            <param name="text">The text.</param>
        </member>
        <member name="P:Splunk.SplunkException.Code">
            <summary>
            Gets or sets the exception code.
            </summary>
        </member>
        <member name="P:Splunk.SplunkException.Text">
            <summary>
            Gets or sets the exception text.
            </summary>
        </member>
        <member name="T:Splunk.UserArgs">
            <summary>
            The <see cref="T:Splunk.UserArgs"/> class extends <see cref="T:Splunk.Args"/> for 
            <see cref="T:Splunk.User"/> creation setters.
            </summary>
        </member>
        <member name="P:Splunk.UserArgs.CreateRole">
            <summary>
            Sets the name of a role to create for the user. 
            </summary>
            <remarks>
            After creating the role, you can edit that role to specify what
            access that user has to Splunk.
            </remarks>
        </member>
        <member name="P:Splunk.UserArgs.DefaultApp">
            <summary>
            Sets a default app for this user. 
            </summary>
            <remarks>
            The default app specified here overrides the default app inherited 
            from the user's roles.
            </remarks>
        </member>
        <member name="P:Splunk.UserArgs.Email">
            <summary>
            Sets the email address for the user.
            </summary>
        </member>
        <member name="P:Splunk.UserArgs.Password">
            <summary>
            Required. Sets the password for the user. 
            </summary>
        </member>
        <member name="P:Splunk.UserArgs.RealName">
            <summary>
            Sets the realname for the user.
            </summary>
        </member>
        <member name="P:Splunk.UserArgs.RestartBackgroundJobs">
            <summary>
            Sets a value indicating whether to restart background search 
            jobs when Splunk restarts. 
            </summary>
            <remarks>
            If set to true, a background search job for this user that has not
            completed is restarted when Splunk restarts.
            </remarks>
        </member>
        <member name="P:Splunk.UserArgs.Roles">
            <summary>
            Sets the roles to assign this user. 
            </summary>
            <remarks>
            At least one role is required.
            If this parameter is not set, you must create a role with the 
            <see cref="P:Splunk.UserArgs.CreateRole"/> parameter.
            </remarks>
        </member>
        <member name="P:Splunk.UserArgs.Timezone">
            <summary>
            Sets the time zone display modifier for this user. 
            </summary>
            <remarks>
            This parameter is available starting in Splunk 4.3.
            </remarks>
        </member>
        <member name="T:Splunk.UserCollection">
            <summary>
            The <see cref="T:Splunk.UserCollection"/> class represents a collection of 
            Splunk users who are registered on the current Splunk server.
            </summary>
        </member>
        <member name="M:Splunk.UserCollection.#ctor(Splunk.Service)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.UserCollection"/> 
            class.
            </summary>
            <param name="service">The service.</param>
        </member>
        <member name="M:Splunk.UserCollection.#ctor(Splunk.Service,Splunk.Args)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.UserCollection"/> 
            class.
            </summary>
            <param name="service">The service.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Splunk.UserCollection.Create(System.String,System.String,System.String)">
            <summary>
            Creates a new user entity from a username, password, and role.
            Usernames must be unique on the system, and are used by the user to 
            log in to Splunk.
            </summary>
            <param name="name">The username for the new user.</param>
            <param name="password">The password for this new user.</param>
            <param name="role">A role to assign this new user.</param>
            <returns>The new user entity.</returns>
        </member>
        <member name="M:Splunk.UserCollection.Create(System.String,System.String,System.String[])">
            <summary>
            Creates a new user entity from a username, password, and role.
            Usernames must be unique on the system, and are used by the user to 
            log in to Splunk.
            </summary>
            <param name="name">The username for the new user.</param>
            <param name="password">The password for this new user.</param>
            <param name="roles">A list of roles to assign this new user.</param>
            <returns>The new user entity.</returns>
        </member>
        <member name="M:Splunk.UserCollection.Create(System.String,System.String,System.String,Splunk.Args)">
            <summary>
            Creates a new user entity from a username, password, and role.
            Usernames must be unique on the system, and are used by the user to 
            log in to Splunk.
            </summary>
            <param name="name">The username for the new user.</param>
            <param name="password">The password for this new user.</param>
            <param name="role">A role to assign this new user.</param>
            <param name="args">The optional args.</param>
            <returns>The new user entity.</returns>
        </member>
        <member name="M:Splunk.UserCollection.Create(System.String,System.String,System.String[],Splunk.Args)">
            <summary>
            Creates a new user entity from a username, password, and role.
            Usernames must be unique on the system, and are used by the user to
            log in to Splunk.
            </summary>
            <param name="name">The username for the new user.</param>
            <param name="password">The password for this new user.</param>
            <param name="roles">A list of roles to assign this new user.</param>
            <param name="args">The optional args.</param>
            <returns>The new user entity.</returns>
        </member>
        <member name="T:Splunk.Util">
            <summary>
            The <see cref="T:Splunk.Util"/> class represents a collection of utility 
            routines.
            </summary>
        </member>
        <member name="M:Splunk.Util.SubstringAfter(System.String,System.String,System.String)">
            <summary>
            Returns the substring after a found element.
            </summary>
            <param name="template">The original string.</param>
            <param name="toFind">What to find.</param>
            <param name="defaultTo">Default if not found.</param>
            <returns>The substring after "toFind"".</returns>
        </member>
        <member name="M:Splunk.Util.Join(System.String,System.Collections.ArrayList)">
            <summary>
            Joins a new string with the elements of the array.
            </summary>
            <param name="joiner">The joiner.</param>
            <param name="joinees">The joinees.</param>
            <returns>The combined string.</returns>
        </member>
        <member name="M:Splunk.Util.EnsureNamespaceIsExact(Splunk.Args)">
            <summary>
            Validates an exact namespace.
            </summary>
            <param name="nameSpace">The namespace.</param>
        </member>
        <member name="T:Splunk.Value">
            <summary>
            The <see cref="T:Splunk.Value"/> class provides methods for converting values.
            </summary>
        </member>
        <member name="F:Splunk.Value.dateFormats">
            <summary>
            The parseable date formats.
            </summary>
        </member>
        <member name="M:Splunk.Value.ToBoolean(System.String)">
            <summary>
            Converts a string of "0", "1", true, or false to a Boolean value.
            </summary>
            <param name="value">The string value.</param>
            <returns>The Boolean value.</returns>
        </member>
        <member name="M:Splunk.Value.ToByteCount(System.String)">
            <summary>
            Converts a string to numeric byte count. The input can be a number
            or a number followed by KB, MB, GB.
            </summary>
            <param name="value">The string value.</param>
            <returns>The long value.</returns>
        </member>
        <member name="M:Splunk.Value.ToDate(System.String)">
            <summary>
            Converts a date string to a DateTime structure.
            </summary>
            <param name="value">The date string.</param>
            <returns>The DateTime structure.</returns>
        </member>
        <member name="M:Splunk.Value.ToFloat(System.String)">
            <summary>
            Converts a string to a double value.
            </summary>
            <param name="value">The string value.</param>
            <returns>The double value.</returns>
        </member>
        <member name="M:Splunk.Value.ToInteger(System.String)">
            <summary>
            Converts a string to an integer value.
            </summary>
            <param name="value">The string value.</param>
            <returns>The integer value.</returns>
        </member>
        <member name="M:Splunk.Value.ToLong(System.String)">
            <summary>
            Converts a string to a long value.
            </summary>
            <param name="value">The string value.</param>
            <returns>The long value.</returns>
        </member>
        <member name="T:Splunk.WindowsActiveDirectoryInput">
            <summary>
            The <see cref="T:Splunk.WindowsActiveDirectoryInput"/> class represents a 
            Windows Active Directory data input.
            </summary>
        </member>
        <member name="M:Splunk.WindowsActiveDirectoryInput.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Splunk.WindowsActiveDirectoryInput"/> class.
            </summary>
            <param name="service">The connected service.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Splunk.WindowsActiveDirectoryInput.Update(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Updates the entity with the values you previously set using the 
            class properties, and any additional specified arguments. The 
            specified arguments take precedence over the values that were set 
            using properties.
            </summary>
            <param name="args">The key/value pairs to update.</param>
        </member>
        <member name="M:Splunk.WindowsActiveDirectoryInput.Update">
            <summary>
            Updates the entity with the accumulated arguments, established by 
            the individual properties for each specific entity class.
            </summary>
        </member>
        <member name="P:Splunk.WindowsActiveDirectoryInput.Disabled">
            <summary>
            Sets a value indicating whether this input is disabled.
            </summary>
        </member>
        <member name="P:Splunk.WindowsActiveDirectoryInput.Index">
            <summary>
            Gets or sets the index name of this Windows Active Directory input.
            </summary>
        </member>
        <member name="P:Splunk.WindowsActiveDirectoryInput.Kind">
            <summary>
            Gets the input type of this object, Windows Active Directory.
            </summary>
        </member>
        <member name="P:Splunk.WindowsActiveDirectoryInput.MonitorSubtree">
            <summary>
            Gets or sets a value indicating whether the directory path 
            subtree is being monitored for this Windows Active Directory input.
            </summary>
        </member>
        <member name="P:Splunk.WindowsActiveDirectoryInput.StartingNode">
            <summary>
            Gets or sets the starting location in the directory path for this 
            Windows Active Directory input. 
            </summary>
            <remarks>
            If this property is not specified, the root of 
            the directory tree is used.
            </remarks>
        </member>
        <member name="P:Splunk.WindowsActiveDirectoryInput.TargetDc">
            <summary>
            Gets or sets the fully-qualified domain name of a valid, 
            network-accessible domain controller. 
            </summary>
            <remarks>
            If this property is not specified, the local machine
            is used.
            </remarks>
        </member>
        <member name="T:Splunk.WindowsActiveDirectoryInputArgs">
            <summary>
            The <see cref="T:Splunk.WindowsActiveDirectoryInputArgs"/> class extends 
            <see cref="T:Splunk.Args"/> for 
            <see cref="T:Splunk.WindowsActiveDirectoryInput"/> creation properties.
            </summary>
        </member>
        <member name="P:Splunk.WindowsActiveDirectoryInputArgs.Disabled">
            <summary>
            Sets a value indicating whether monitoring is disabled.
            </summary>
        </member>
        <member name="P:Splunk.WindowsActiveDirectoryInputArgs.Index">
            <summary>
            Sets the index in which to store the gathered data.
            </summary>
        </member>
        <member name="P:Splunk.WindowsActiveDirectoryInputArgs.MonitorSubtree">
            <summary>
            Sets a value indicating whether to monitor the subtree(s) of a 
            given directory tree path. 
            </summary>
            <remarks>
            This property's default value is true.
            </remarks>
        </member>
        <member name="P:Splunk.WindowsActiveDirectoryInputArgs.StartingNode">
            <summary>
            Sets the Active Directory directory tree to start monitoring. 
            </summary>
            <remarks>
            If not specified, Splunk attempts to start at the root of the 
            directory tree.
            </remarks>
        </member>
        <member name="P:Splunk.WindowsActiveDirectoryInputArgs.TargetDc">
            <summary>
            Sets the fully qualified domain name of a valid, network-accessible
            domain controller. 
            </summary>
            <remarks>
            If not specified, Splunk will obtain the local computer's domain 
            controller.
            </remarks>
        </member>
        <member name="T:Splunk.WindowsEventLogInput">
            <summary>
            The <see cref="T:Splunk.WindowsEventLogInput"/> class represents a Windows 
            event log data input.
            </summary>
        </member>
        <member name="M:Splunk.WindowsEventLogInput.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Splunk.WindowsEventLogInput"/> class.
            </summary>
            <param name="service">The connected service.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Splunk.WindowsEventLogInput.Update(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Updates the entity with the values you previously set using the 
            class properties, and any additional specified arguments. The 
            specified arguments take precedence over the values that were set 
            using the properties.
            </summary>
            <param name="args">The key/value pairs to update.</param>
        </member>
        <member name="M:Splunk.WindowsEventLogInput.Update">
            <summary>
            Updates the entity with the accumulated arguments, established by 
            the individual properties for each specific entity class.
            </summary>
        </member>
        <member name="P:Splunk.WindowsEventLogInput.Hosts">
            <summary>
            Gets or sets a comma-separated list of secondary hosts used in 
            monitoring.
            </summary>
        </member>
        <member name="P:Splunk.WindowsEventLogInput.Index">
            <summary>
            Gets or sets the index name of this Windows event log input.
            </summary>
        </member>
        <member name="P:Splunk.WindowsEventLogInput.Kind">
            <summary>
            Gets the input type of this object, Windows event log input.
            </summary>
        </member>
        <member name="P:Splunk.WindowsEventLogInput.Logs">
            <summary>
            Gets or sets the list of event log names to gather data from for 
            this Windows event log input.
            </summary>
        </member>
        <member name="P:Splunk.WindowsEventLogInput.LocalName">
            <summary>
            Gets the collection name of this Windows event log input. 
            </summary>
            <remarks>
            This name appears in the configuration file, the source, and the
            sourcetype of the indexed data. If this property is set to 
            "localhost", it will use native event log collection; otherwise, 
            it will use Windows Management Instrumentation (WMI).
            </remarks>
        </member>
        <member name="P:Splunk.WindowsEventLogInput.LookupHost">
            <summary>
            Gets or sets the main host of this Windows event log input.
            Secondary hosts are specified in the <see cref="P:Splunk.WindowsEventLogInput.Hosts"/> attribute.
            </summary>
        </member>
        <member name="T:Splunk.WindowsEventLogInputArgs">
            <summary>
            The <see cref="T:Splunk.WindowsEventLogInputArgs"/> class extends 
            <see cref="T:Splunk.Args"/> for <see cref="T:Splunk.WindowsEventLogInput"/> properties.
            </summary>
        </member>
        <member name="P:Splunk.WindowsEventLogInputArgs.Hosts">
            <summary>
            Sets additional hosts to be used for monitoring. 
            </summary>
            <remarks>
            The first host should be specified with the 
            <see cref="P:Splunk.WindowsEventLogInputArgs.LookupHost"/> property, and the additional ones using 
            this property. This property accepts a comma-separated list.
            </remarks>
        </member>
        <member name="P:Splunk.WindowsEventLogInputArgs.LookupHost">
            <summary>
            Required. Sets the host from which log events are monitored. 
            </summary>
            <remarks>
            To specify additional hosts to be monitored via Windows Management 
            Instrumentation (WMI), use the <see cref="P:Splunk.WindowsEventLogInputArgs.Hosts"/> property.
            </remarks>
        </member>
        <member name="P:Splunk.WindowsEventLogInputArgs.Index">
            <summary>
            Sets the index in which to store the gathered data.
            </summary>
        </member>
        <member name="P:Splunk.WindowsEventLogInputArgs.Logs">
            <summary>
            Sets a comma-separated list of event log names to gather data from.
            </summary>
        </member>
        <member name="T:Splunk.WindowsPerfmonInput">
            <summary>
            The <see cref="T:Splunk.WindowsPerfmonInput"/> class represents a Windows 
            Performance Monitor (Perfmon) data input.
            </summary>
        </member>
        <member name="M:Splunk.WindowsPerfmonInput.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.WindowsPerfmonInput"/> 
            class.
            </summary>
            <param name="service">The connected service</param>
            <param name="path">The path</param>
        </member>
        <member name="P:Splunk.WindowsPerfmonInput.Counters">
            <summary>
            Gets or sets a list of monitored counters for this Windows Perfmon 
            input. An asterisk ("*") is equivalent to all counters.
            </summary>
        </member>
        <member name="P:Splunk.WindowsPerfmonInput.Disabled">
            <summary>
            Sets a value indicating whether this input is disabled. 
            </summary>
            <remarks>
            This attribute is available starting in Splunk 4.3.
            </remarks>
        </member>
        <member name="P:Splunk.WindowsPerfmonInput.Index">
            <summary>
            Gets or sets the index name of this Windows Perfmon input.
            </summary>
        </member>
        <member name="P:Splunk.WindowsPerfmonInput.Instances">
            <summary>
            Gets or sets the counter instances of this Windows Perfmon input. 
            An asterisk ("*") is equivalent to all instances.
            </summary>
        </member>
        <member name="P:Splunk.WindowsPerfmonInput.Interval">
            <summary>
            Gets or sets the interval at which to poll the performance counters 
            for this Windows Perfmon input.
            </summary>
        </member>
        <member name="P:Splunk.WindowsPerfmonInput.Kind">
            <summary>
            Gets the input type of this object, Windows Perfmon input.
            </summary>
        </member>
        <member name="P:Splunk.WindowsPerfmonInput.Object">
            <summary>
            Gets or sets the performance monitor object for this Windows Perfmon
            input (for example, "Process", "Server", or "PhysicalDisk".)
            </summary>
        </member>
        <member name="P:Splunk.WindowsPerfmonInput.Source">
            <summary>
            Gets or sets the source value to populate in he source field for 
            events from this data input. 
            </summary>
            <remarks>
            <para>
            The same source should not be used for multiple events. 
            </para>
            <para>
            This property is available in Splunk 5.0 and later.
            </para>
            </remarks>
        </member>
        <member name="P:Splunk.WindowsPerfmonInput.SourceType">
            <summary>
            Gets or sets the sourcetype value to populate in the sourcetype 
            field for incoming events. 
            </summary>
            <remarks>
            This property is available in Splunk 5.0 and later.
            </remarks>
        </member>
        <member name="T:Splunk.WindowsPerfmonInputArgs">
            <summary>
            The <see cref="T:Splunk.WindowsPerfmonInputArgs"/> class extends 
            <see cref="T:Splunk.Args"/> for <see cref="T:Splunk.WindowsPerfmonInput"/> creation 
            setters.
            </summary>
        </member>
        <member name="P:Splunk.WindowsPerfmonInputArgs.Counters">
            <summary>
            Sets the list of counters within the specified monitored object. 
            Be aware that "*" is equivalent to all counters.
            </summary>
        </member>
        <member name="P:Splunk.WindowsPerfmonInputArgs.Disabled">
            <summary>
            Sets a value indicating whether a specific stanza is monitored. 
            </summary>
        </member>
        <member name="P:Splunk.WindowsPerfmonInputArgs.Index">
            <summary>
            Sets the index in which to store the gathered data.
            </summary>
        </member>
        <member name="P:Splunk.WindowsPerfmonInputArgs.Instances">
            <summary>
            Sets the counter instances to monitor. A "*" is equivalent
            to all instances.
            </summary>
        </member>
        <member name="P:Splunk.WindowsPerfmonInputArgs.Interval">
            <summary>
            Required. Sets the frequency, in seconds, to poll the performance 
            counters.
            </summary>
        </member>
        <member name="P:Splunk.WindowsPerfmonInputArgs.Object">
            <summary>
            Required. Sets the performance monitor object--for example, 
            "Process", "Server", "PhysicalDisk", etc. 
            </summary>
        </member>
        <member name="T:Splunk.WindowsRegistryInput">
            <summary>
            The <see cref="T:Splunk.WindowsRegistryInput"/> class represents a 
            Windows Registry data input.
            </summary>
        </member>
        <member name="M:Splunk.WindowsRegistryInput.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.WindowsRegistryInput"/>
            class.
            </summary>
            <param name="service">The connected service.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Splunk.WindowsRegistryInput.Update(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Updates the entity with the values you previously set using the 
            <see cref="T:Splunk.WindowsRegistryInput"/> properties, and any additional 
            specified arguments. The specified arguments take precedence over
            the values that were set using the 
            <see cref="T:Splunk.WindowsRegistryInput"/> properties.
            </summary>
            <param name="args">The key/value pairs to update.</param>
        </member>
        <member name="M:Splunk.WindowsRegistryInput.Update">
            <summary>
            Updates the entity with the accumulated arguments, established by 
            the individual properties for each specific entity class.
            </summary>
        </member>
        <member name="P:Splunk.WindowsRegistryInput.Baseline">
            <summary>
            Gets or sets a value indicating whether this Windows Registry 
            input has an established baseline.
            </summary>
        </member>
        <member name="P:Splunk.WindowsRegistryInput.Disabled">
            <summary>
            Sets a value indicating whether this input is disabled.
            </summary>
        </member>
        <member name="P:Splunk.WindowsRegistryInput.Hive">
            <summary>
            Gets or sets the hive name to monitor for this Windows Registry 
            input.
            </summary>
        </member>
        <member name="P:Splunk.WindowsRegistryInput.Index">
            <summary>
            Gets or sets the index name of this Windows Registry input.
            </summary>
        </member>
        <member name="P:Splunk.WindowsRegistryInput.Kind">
            <summary>
            Gets the <see cref="T:Splunk.Input"/> type of this object, Windows Registry
            input.
            </summary>
        </member>
        <member name="P:Splunk.WindowsRegistryInput.MonitorSubnodes">
            <summary>
            Gets or sets a value indicating whether this Windows Registry 
            input monitors all sub-nodes under a given hive.
            </summary>
        </member>
        <member name="P:Splunk.WindowsRegistryInput.Proc">
            <summary>
            Gets or sets the regular expression (regex) that is compared to 
            process names when including or excluding events for this Windows
            Registry input. Changes are only collected if a process name matches
            this regex. 
            </summary>
        </member>
        <member name="P:Splunk.WindowsRegistryInput.Type">
            <summary>
            Gets or sets the regular expression (regex) that is compared to 
            registry event types for this Windows Registry input. Only types 
            that match this regex are monitored. 
            </summary>
        </member>
        <member name="T:Splunk.WindowsRegistryInputArgs">
            <summary>
            The <see cref="T:Splunk.WindowsRegistryInputArgs"/> class extends 
            <see cref="T:Splunk.Args"/> for <see cref="T:Splunk.WindowsRegistryInput"/> 
            creation properties.
            </summary>
        </member>
        <member name="P:Splunk.WindowsRegistryInputArgs.Baseline">
            <summary>
            Required. Sets a value indicating whether this Windows Registry 
            input has an established baseline. 
            </summary>
        </member>
        <member name="P:Splunk.WindowsRegistryInputArgs.Disabled">
            <summary>
            Sets a value indicating whether a specific stanza is monitored. 
            </summary>
        </member>
        <member name="P:Splunk.WindowsRegistryInputArgs.Hive">
            <summary>
            Required. Sets the registry hive under which to monitor for 
            changes. 
            </summary>
        </member>
        <member name="P:Splunk.WindowsRegistryInputArgs.Index">
            <summary>
            Sets the index in which to store the gathered data.
            </summary>
        </member>
        <member name="P:Splunk.WindowsRegistryInputArgs.MonitorSubnodes">
            <summary>
            Sets a value indicating whether to monitor the subnodes of a 
            given registry hive.
            </summary>
        </member>
        <member name="P:Splunk.WindowsRegistryInputArgs.Proc">
            <summary>
            Required. Sets a regular expression applied to registry events. If 
            the regex pattern matches on a registry event, that event is 
            collected. 
            </summary>
        </member>
        <member name="P:Splunk.WindowsRegistryInputArgs.Type">
            <summary>
            Sets the types of registry events to be monitored.
            </summary>
        </member>
        <member name="T:Splunk.WindowsWmiInput">
            <summary>
            The <see cref="T:Splunk.WindowsWmiInput"/> class represents represents a Windows 
            Management Instrumentation (WMI) data input.
            </summary>
        </member>
        <member name="M:Splunk.WindowsWmiInput.#ctor(Splunk.Service,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Splunk.WindowsWmiInput"/> 
            class.
            </summary>
            <param name="service">The connected service.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Splunk.WindowsWmiInput.Update(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Updates the entity with the values you previously set using the 
            class properties, and any additional specified arguments. The 
            specified arguments take precedence over the values that were set
            using the properties.
            </summary>
            <param name="args">The key/value pairs to update.</param>
        </member>
        <member name="M:Splunk.WindowsWmiInput.Update">
            <summary>
            Updates the entity with the accumulated arguments, established by 
            the individual properties for each specific entity class.
            </summary>
        </member>
        <member name="P:Splunk.WindowsWmiInput.Classes">
            <summary>
            Gets or sets the WMI class name of this WMI input.
            </summary>
        </member>
        <member name="P:Splunk.WindowsWmiInput.Disabled">
            <summary>
            Sets a value indicating whether this input is disabled.
            </summary>
        </member>
        <member name="P:Splunk.WindowsWmiInput.Fields">
            <summary>
            Gets or sets the the properties (fields) collected for this class 
            for this WMI input.
            </summary>
        </member>
        <member name="P:Splunk.WindowsWmiInput.Index">
            <summary>
            Gets or sets the index name of this Windows Registry input.
            </summary>
        </member>
        <member name="P:Splunk.WindowsWmiInput.Instances">
            <summary>
            Gets or sets the counter instances of this WMI input. 
            </summary>
            <remarks>
            An asterisk (*) is equivalent to all instances.
            </remarks>
        </member>
        <member name="P:Splunk.WindowsWmiInput.Interval">
            <summary>
            Gets or sets the interval at which WMI input providers are queried 
            for this WMI input.
            </summary>
        </member>
        <member name="P:Splunk.WindowsWmiInput.Kind">
            <summary>
            Gets the input type of this object, WMI input.
            </summary>
        </member>
        <member name="P:Splunk.WindowsWmiInput.LookupHost">
            <summary>
            Gets or sets the main host of this Windows Event log input. 
            Secondary hosts are specified in the 
            <see cref="P:Splunk.WindowsEventLogInput.Hosts"/> attribute.
            </summary>
        </member>
        <member name="P:Splunk.WindowsWmiInput.LocalName">
            <summary>
            Gets the collection name for this WMI input. This name appears in
            configuration file, the source, and the sourcetype of the indexed 
            data.
            </summary>
        </member>
        <member name="P:Splunk.WindowsWmiInput.Servers">
            <summary>
            Gets or sets a comma-separated list of the additional servers used 
            in monitoring.
            </summary>
        </member>
        <member name="P:Splunk.WindowsWmiInput.Wql">
            <summary>
            Gets the query string for this WMI input.
            </summary>
        </member>
        <member name="T:Splunk.WindowsWmiInputArgs">
            <summary>
            The <see cref="T:Splunk.WindowsWmiInputArgs"/> class extends the 
            <see cref="T:Splunk.Args"/> class for <see cref="T:Splunk.WindowsWmiInput"/> creation 
            properties.
            </summary>
        </member>
        <member name="P:Splunk.WindowsWmiInputArgs.Classes">
            <summary>
            Required. Sets a valid Windows Management Instrumentation (WMI) 
            class name.
            </summary>
        </member>
        <member name="P:Splunk.WindowsWmiInputArgs.Disabled">
            <summary>
            Sets a value indicating whether this collection is disabled. 
            </summary>
        </member>
        <member name="P:Splunk.WindowsWmiInputArgs.Fields">
            <summary>
            Sets the fields that you want to gather from the given class.
            </summary>
        </member>
        <member name="P:Splunk.WindowsWmiInputArgs.Index">
            <summary>
            Sets the index in which to store the gathered data.
            </summary>
        </member>
        <member name="P:Splunk.WindowsWmiInputArgs.Instances">
            <summary>
            Sets the instances of the given class for which data is gathered.
            </summary>
        </member>
        <member name="P:Splunk.WindowsWmiInputArgs.Interval">
            <summary>
            Required. Sets the frequency, in seconds, at which the WMI
            provider(s) are queried. 
            </summary>
        </member>
        <member name="P:Splunk.WindowsWmiInputArgs.LookupHost">
            <summary>
            Required. Sets the host from which WMI data is gathered. 
            </summary>
            <remarks>
            To specify additional hosts to be monitored via WMI, use the 
            <see cref="P:Splunk.WindowsWmiInputArgs.Server"/> parameter.
            </remarks>
        </member>
        <member name="P:Splunk.WindowsWmiInputArgs.Server">
            <summary>
            Sets a comma-separated list of additional servers from which you 
            want to gather data. 
            </summary>
        </member>
        <member name="T:Splunk.Xml">
            <summary>
            The <see cref="T:Splunk.Xml"/> class represents a collection of XML utilities.
            </summary>
        </member>
        <member name="M:Splunk.Xml.Parse(System.IO.Stream)">
            <summary>
            Parses the given input stream and returns it as an XML document 
            object model (DOM).
            </summary>
            <param name="input">The stream.</param>
            <returns>The XML document.</returns>
        </member>
    </members>
</doc>
